{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/* eslint-disable no-ternary, no-plusplus, require-jsdoc */\n\n\nvar DisplayCondition = /*#__PURE__*/function () {\n  function DisplayCondition() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DisplayCondition);\n\n    this.wrapperField = options.wrapperField;\n    this.type = options.type;\n    this.conditionQuestion = options.conditionQuestion;\n    this.answerOption = options.answerOption;\n    this.mandatory = options.mandatory;\n    this.value = options.value;\n    this.onFulfilled = options.onFulfilled;\n    this.bindEvent();\n  }\n\n  _createClass(DisplayCondition, [{\n    key: \"bindEvent\",\n    value: function bindEvent() {\n      this.checkCondition();\n      this.getInputsToListen().on(\"change\", this.checkCondition.bind(this));\n    }\n  }, {\n    key: \"getInputValue\",\n    value: function getInputValue() {\n      var $conditionWrapperField = $(\".question[data-question-id='\".concat(this.conditionQuestion, \"']\"));\n      var $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n      if ($textInput.length) {\n        return $textInput.val();\n      }\n\n      var multipleInput = [];\n      $conditionWrapperField.find(\".radio-button-collection, .check-box-collection\").find(\".collection-input\").each(function (idx, el) {\n        var $input = $(el).find(\"input[name$=\\\\[body\\\\]]\");\n        var checked = $input.is(\":checked\");\n\n        if (checked) {\n          var text = $(el).find(\"input[name$=\\\\[custom_body\\\\]]\").val();\n          var value = $input.val();\n          var id = $(el).find(\"input[name$=\\\\[answer_option_id\\\\]]\").val();\n          multipleInput.push({\n            id: id,\n            value: value,\n            text: text\n          });\n        }\n      });\n      return multipleInput;\n    }\n  }, {\n    key: \"getInputsToListen\",\n    value: function getInputsToListen() {\n      var $conditionWrapperField = $(\".question[data-question-id='\".concat(this.conditionQuestion, \"']\"));\n      var $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n      if ($textInput.length) {\n        return $textInput;\n      }\n\n      return $conditionWrapperField.find(\".collection-input\").find(\"input:not([type='hidden'])\");\n    }\n  }, {\n    key: \"checkAnsweredCondition\",\n    value: function checkAnsweredCondition(value) {\n      if (_typeof(value) !== \"object\") {\n        return Boolean(value);\n      }\n\n      return Boolean(value.some(function (it) {\n        return it.value;\n      }));\n    }\n  }, {\n    key: \"checkNotAnsweredCondition\",\n    value: function checkNotAnsweredCondition(value) {\n      return !this.checkAnsweredCondition(value);\n    }\n  }, {\n    key: \"checkEqualCondition\",\n    value: function checkEqualCondition(value) {\n      var _this = this;\n\n      if (value.length) {\n        return value.some(function (it) {\n          return it.id === _this.answerOption.toString();\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"checkNotEqualCondition\",\n    value: function checkNotEqualCondition(value) {\n      var _this2 = this;\n\n      if (value.length) {\n        return value.every(function (it) {\n          return it.id !== _this2.answerOption.toString();\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"checkMatchCondition\",\n    value: function checkMatchCondition(value) {\n      var regexp = new RegExp(this.value, \"i\");\n\n      if (_typeof(value) !== \"object\") {\n        return Boolean(value.match(regexp));\n      }\n\n      return value.some(function (it) {\n        return it.text ? it.text.match(regexp) : it.value.match(regexp);\n      });\n    }\n  }, {\n    key: \"checkCondition\",\n    value: function checkCondition() {\n      var value = this.getInputValue();\n      var fulfilled = false;\n\n      switch (this.type) {\n        case \"answered\":\n          fulfilled = this.checkAnsweredCondition(value);\n          break;\n\n        case \"not_answered\":\n          fulfilled = this.checkNotAnsweredCondition(value);\n          break;\n\n        case \"equal\":\n          fulfilled = this.checkEqualCondition(value);\n          break;\n\n        case \"not_equal\":\n          fulfilled = this.checkNotEqualCondition(value);\n          break;\n\n        case \"match\":\n          fulfilled = this.checkMatchCondition(value);\n          break;\n\n        default:\n          fulfilled = false;\n          break;\n      }\n\n      this.onFulfilled(fulfilled);\n    }\n  }]);\n\n  return DisplayCondition;\n}();\n\nvar DisplayConditionsComponent = /*#__PURE__*/function () {\n  function DisplayConditionsComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DisplayConditionsComponent);\n\n    this.wrapperField = options.wrapperField;\n    this.conditions = {};\n    this.showCount = 0;\n    this.initializeConditions();\n  }\n\n  _createClass(DisplayConditionsComponent, [{\n    key: \"initializeConditions\",\n    value: function initializeConditions() {\n      var _this3 = this;\n\n      var $conditionElements = this.wrapperField.find(\".display-condition\");\n      $conditionElements.each(function (idx, el) {\n        var $condition = $(el);\n        var id = $condition.data(\"id\");\n        _this3.conditions[id] = {};\n        _this3.conditions[id] = new DisplayCondition({\n          wrapperField: _this3.wrapperField,\n          type: $condition.data(\"type\"),\n          conditionQuestion: $condition.data(\"condition\"),\n          answerOption: $condition.data(\"option\"),\n          mandatory: $condition.data(\"mandatory\"),\n          value: $condition.data(\"value\"),\n          onFulfilled: function onFulfilled(fulfilled) {\n            _this3.onFulfilled(id, fulfilled);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"mustShow\",\n    value: function mustShow() {\n      var conditions = Object.values(this.conditions);\n      var mandatoryConditions = conditions.filter(function (condition) {\n        return condition.mandatory;\n      });\n      var nonMandatoryConditions = conditions.filter(function (condition) {\n        return !condition.mandatory;\n      });\n\n      if (mandatoryConditions.length) {\n        return mandatoryConditions.every(function (condition) {\n          return condition.fulfilled;\n        });\n      }\n\n      return nonMandatoryConditions.some(function (condition) {\n        return condition.fulfilled;\n      });\n    }\n  }, {\n    key: \"onFulfilled\",\n    value: function onFulfilled(id, fulfilled) {\n      this.conditions[id].fulfilled = fulfilled;\n\n      if (this.mustShow()) {\n        this.showQuestion();\n      } else {\n        this.hideQuestion();\n      }\n    }\n  }, {\n    key: \"showQuestion\",\n    value: function showQuestion() {\n      this.wrapperField.fadeIn();\n      this.wrapperField.find(\"input, textarea\").prop(\"disabled\", null);\n      this.showCount++;\n    }\n  }, {\n    key: \"hideQuestion\",\n    value: function hideQuestion() {\n      if (this.showCount) {\n        this.wrapperField.fadeOut();\n      } else {\n        this.wrapperField.hide();\n      }\n\n      this.wrapperField.find(\"input, textarea\").prop(\"disabled\", \"disabled\");\n    }\n  }]);\n\n  return DisplayConditionsComponent;\n}();\n\nexport default function createDisplayConditions(options) {\n  return new DisplayConditionsComponent(options);\n}","map":{"version":3,"mappings":"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","names":["DisplayCondition","options","_classCallCheck","wrapperField","type","conditionQuestion","answerOption","mandatory","value","onFulfilled","bindEvent","checkCondition","getInputsToListen","on","bind","$conditionWrapperField","$","$textInput","find","length","val","multipleInput","each","idx","el","$input","checked","is","text","id","push","_typeof","Boolean","some","it","checkAnsweredCondition","_this","toString","every","_this2","regexp","RegExp","match","getInputValue","fulfilled","checkNotAnsweredCondition","checkEqualCondition","checkNotEqualCondition","checkMatchCondition","DisplayConditionsComponent","conditions","showCount","initializeConditions","$conditionElements","$condition","data","_this3","Object","values","mandatoryConditions","filter","condition","nonMandatoryConditions","mustShow","showQuestion","hideQuestion","fadeIn","prop","fadeOut","hide","createDisplayConditions"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-forms/app/packs/src/decidim/forms/display_conditions.component.js"],"sourcesContent":["/* eslint-disable no-ternary, no-plusplus, require-jsdoc */\n\nclass DisplayCondition {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.type = options.type;\n    this.conditionQuestion = options.conditionQuestion;\n    this.answerOption = options.answerOption;\n    this.mandatory = options.mandatory;\n    this.value = options.value;\n    this.onFulfilled = options.onFulfilled;\n    this.bindEvent();\n  }\n\n  bindEvent() {\n    this.checkCondition();\n    this.getInputsToListen().on(\"change\", this.checkCondition.bind(this));\n  }\n\n  getInputValue() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput.val();\n    }\n\n    let multipleInput = [];\n\n    $conditionWrapperField.find(\".radio-button-collection, .check-box-collection\").find(\".collection-input\").each((idx, el) => {\n      const $input = $(el).find(\"input[name$=\\\\[body\\\\]]\");\n      const checked = $input.is(\":checked\");\n\n      if (checked) {\n        const text = $(el).find(\"input[name$=\\\\[custom_body\\\\]]\").val();\n        const value = $input.val();\n        const id = $(el).find(\"input[name$=\\\\[answer_option_id\\\\]]\").val();\n\n        multipleInput.push({ id, value, text });\n      }\n    });\n\n    return multipleInput;\n  }\n\n  getInputsToListen() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput;\n    }\n\n    return $conditionWrapperField.find(\".collection-input\").find(\"input:not([type='hidden'])\");\n  }\n\n  checkAnsweredCondition(value) {\n    if (typeof (value) !== \"object\") {\n      return Boolean(value);\n    }\n\n    return Boolean(value.some((it) => it.value));\n  }\n\n  checkNotAnsweredCondition(value) {\n    return !this.checkAnsweredCondition(value);\n  }\n\n  checkEqualCondition(value) {\n    if (value.length) {\n      return value.some((it) => it.id === this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkNotEqualCondition(value) {\n    if (value.length) {\n      return value.every((it) => it.id !== this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkMatchCondition(value) {\n    let regexp = new RegExp(this.value, \"i\");\n\n    if (typeof (value) !== \"object\") {\n      return Boolean(value.match(regexp));\n    }\n\n    return value.some(function (it) {\n      return it.text\n        ? it.text.match(regexp)\n        : it.value.match(regexp)\n    });\n  }\n\n  checkCondition() {\n    const value = this.getInputValue();\n    let fulfilled = false;\n\n    switch (this.type) {\n    case \"answered\":\n      fulfilled = this.checkAnsweredCondition(value);\n      break;\n    case \"not_answered\":\n      fulfilled = this.checkNotAnsweredCondition(value);\n      break;\n    case \"equal\":\n      fulfilled = this.checkEqualCondition(value);\n      break;\n    case \"not_equal\":\n      fulfilled = this.checkNotEqualCondition(value);\n      break;\n    case \"match\":\n      fulfilled = this.checkMatchCondition(value);\n      break;\n    default:\n      fulfilled = false;\n      break;\n    }\n\n    this.onFulfilled(fulfilled);\n  }\n}\n\nclass DisplayConditionsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.conditions = {};\n    this.showCount = 0;\n    this.initializeConditions();\n  }\n\n  initializeConditions() {\n    const $conditionElements = this.wrapperField.find(\".display-condition\");\n\n    $conditionElements.each((idx, el) => {\n      const $condition = $(el);\n      const id = $condition.data(\"id\");\n      this.conditions[id] = {};\n\n      this.conditions[id] = new DisplayCondition({\n        wrapperField: this.wrapperField,\n        type: $condition.data(\"type\"),\n        conditionQuestion: $condition.data(\"condition\"),\n        answerOption: $condition.data(\"option\"),\n        mandatory: $condition.data(\"mandatory\"),\n        value: $condition.data(\"value\"),\n        onFulfilled: (fulfilled) => {\n          this.onFulfilled(id, fulfilled);\n        }\n      });\n    });\n  }\n\n  mustShow() {\n    const conditions = Object.values(this.conditions);\n    const mandatoryConditions = conditions.filter((condition) => condition.mandatory);\n    const nonMandatoryConditions = conditions.filter((condition) => !condition.mandatory);\n\n    if (mandatoryConditions.length) {\n      return mandatoryConditions.every((condition) => condition.fulfilled);\n    }\n\n    return nonMandatoryConditions.some((condition) => condition.fulfilled);\n\n  }\n\n  onFulfilled(id, fulfilled) {\n    this.conditions[id].fulfilled = fulfilled;\n\n    if (this.mustShow()) {\n      this.showQuestion();\n    }\n    else {\n      this.hideQuestion();\n    }\n  }\n\n  showQuestion() {\n    this.wrapperField.fadeIn();\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", null);\n    this.showCount++;\n  }\n\n  hideQuestion() {\n    if (this.showCount) {\n      this.wrapperField.fadeOut();\n    }\n    else {\n      this.wrapperField.hide();\n    }\n\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", \"disabled\");\n  }\n}\n\nexport default function createDisplayConditions(options) {\n  return new DisplayConditionsComponent(options);\n}\n"]},"metadata":{},"sourceType":"module"}