{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { Uploader } from \"src/decidim/direct_uploads/uploader\";\nimport { truncateFilename, checkTitles, createHiddenInput } from \"src/decidim/direct_uploads/upload_utility\"; // This class handles logic inside upload modal, but since modal is not inside the form\n// logic here moves \"upload items\" / hidden inputs to form.\n\nvar UploadModal = /*#__PURE__*/function () {\n  function UploadModal(button) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, UploadModal); // Button that opens the modal.\n\n\n    this.button = button; // The provided options contains the options passed from the view in the\n    // `data-upload` attribute as a JSON.\n\n    var providedOptions = {};\n\n    try {\n      // The providedOptions can contain the following keys:\n      // - addAttribute - Field name / attribute of resource (e.g. avatar)\n      // - resourceName - The resource to which the attribute belongs (e.g. user)\n      // - resourceClass - Ruby class of the resource (e.g. Decidim::User)\n      // - optional - Defines if file is optional\n      // - multiple - Defines if multiple files can be uploaded\n      // - titled - Defines if file(s) can have titles\n      // - maxFileSize - Defines maximum file size in bytes\n      // - formObjectClass - Class of the current form object (e.g. Decidim::AccountForm)\n      providedOptions = JSON.parse(button.dataset.upload);\n    } catch (_e) {// Don't care about the parse errors, just skip the provided options.\n    }\n\n    this.options = Object.assign(providedOptions, options);\n    this.name = this.button.name;\n    this.modal = document.querySelector(\"#\".concat(button.dataset.open));\n    this.saveButton = this.modal.querySelector(\"button.add-file-\".concat(this.name));\n    this.attachmentCounter = 0;\n    this.dropZoneEnabled = true;\n    this.modalTitle = this.modal.querySelector(\".reveal__title\");\n    this.uploadItems = this.modal.querySelector(\".upload-items\");\n    this.locales = JSON.parse(this.uploadItems.dataset.locales);\n    this.dropZone = this.modal.querySelector(\".dropzone\");\n    this.input = this.dropZone.querySelector(\"input\");\n    this.uploadContainer = document.querySelector(\".upload-container-for-\".concat(this.name));\n    this.activeAttachments = this.uploadContainer.querySelector(\".active-uploads\");\n    this.trashCan = this.createTrashCan();\n  }\n\n  _createClass(UploadModal, [{\n    key: \"uploadFile\",\n    value: function uploadFile(file) {\n      var _this = this;\n\n      if (!this.dropZoneEnabled) {\n        return;\n      }\n\n      var title = file.name.split(\".\")[0].slice(0, 31);\n      var uploadItem = this.createUploadItem(file.name, title, \"init\");\n      var uploader = new Uploader(this, uploadItem, {\n        file: file,\n        url: this.input.dataset.directUploadUrl,\n        attachmentName: file.name\n      });\n\n      if (uploader.fileTooBig) {\n        return;\n      }\n\n      uploader.upload.create(function (error, blob) {\n        if (error) {\n          uploadItem.dataset.state = \"error\";\n          var progressBar = uploadItem.querySelector(\".progress-bar\");\n          progressBar.classList.add(\"filled\");\n          progressBar.innerHTML = _this.locales.error;\n          console.error(error);\n        } else {\n          var ordinalNumber = _this.getOrdinalNumber();\n\n          var attachmentDetails = document.createElement(\"div\");\n          attachmentDetails.classList.add(\"attachment-details\");\n          attachmentDetails.dataset.filename = file.name;\n          var titleAndFileNameSpan = document.createElement(\"span\");\n          titleAndFileNameSpan.style.display = \"none\";\n          attachmentDetails.appendChild(titleAndFileNameSpan);\n          var hiddenBlobField = createHiddenInput(null, null, blob.signed_id);\n\n          if (_this.options.titled) {\n            hiddenBlobField.name = \"\".concat(_this.options.resourceName, \"[\").concat(_this.options.addAttribute, \"][\").concat(ordinalNumber, \"][file]\");\n          } else {\n            hiddenBlobField.name = \"\".concat(_this.options.resourceName, \"[\").concat(_this.options.addAttribute, \"]\");\n          }\n\n          if (_this.options.titled) {\n            var hiddenTitleField = createHiddenInput(\"hidden-title\", \"\".concat(_this.options.resourceName, \"[\").concat(_this.options.addAttribute, \"][\").concat(ordinalNumber, \"][title]\"), title);\n            titleAndFileNameSpan.innerHTML = \"\".concat(title, \" (\").concat(file.name, \")\");\n            attachmentDetails.appendChild(hiddenTitleField);\n          } else {\n            titleAndFileNameSpan.innerHTML = file.name;\n          }\n\n          if (!_this.options.multiple) {\n            _this.cleanTrashCan();\n          }\n\n          attachmentDetails.appendChild(hiddenBlobField);\n          uploadItem.appendChild(attachmentDetails);\n          uploader.validate(blob.signed_id);\n        }\n      });\n      this.updateDropZone();\n    }\n  }, {\n    key: \"getOrdinalNumber\",\n    value: function getOrdinalNumber() {\n      var nextOrdinalNumber = this.attachmentCounter;\n      this.attachmentCounter += 1;\n      return nextOrdinalNumber;\n    }\n  }, {\n    key: \"updateDropZone\",\n    value: function updateDropZone() {\n      if (this.options.multiple) {\n        return;\n      }\n\n      if (this.uploadItems.children.length > 0) {\n        this.dropZone.classList.add(\"disabled\");\n        this.dropZoneEnabled = false;\n        this.input.disabled = true;\n      } else {\n        this.dropZone.classList.remove(\"disabled\");\n        this.dropZoneEnabled = true;\n        this.input.disabled = false;\n      }\n    }\n  }, {\n    key: \"createUploadItem\",\n    value: function createUploadItem(fileName, title, state) {\n      var _fileNameSpan$classLi,\n          _this2 = this;\n\n      var wrapper = document.createElement(\"div\");\n      wrapper.classList.add(\"upload-item\");\n      wrapper.setAttribute(\"data-filename\", fileName);\n      var firstRow = document.createElement(\"div\");\n      var secondRow = document.createElement(\"div\");\n      var thirdRow = document.createElement(\"div\");\n      firstRow.classList.add(\"row\", \"upload-item-first-row\");\n      secondRow.classList.add(\"row\", \"upload-item-second-row\");\n      thirdRow.classList.add(\"row\", \"upload-item-third-row\");\n      var fileNameSpan = document.createElement(\"span\");\n      var fileNameSpanClasses = [\"columns\", \"file-name-span\"];\n\n      if (this.options.titled) {\n        fileNameSpanClasses.push(\"small-4\", \"medium-5\");\n      } else {\n        fileNameSpanClasses.push(\"small-12\");\n      }\n\n      (_fileNameSpan$classLi = fileNameSpan.classList).add.apply(_fileNameSpan$classLi, fileNameSpanClasses);\n\n      fileNameSpan.innerHTML = truncateFilename(fileName);\n      var progressBar = document.createElement(\"div\");\n      progressBar.classList.add(\"progress-bar\");\n\n      if (state) {\n        if (state === \"validated\") {\n          progressBar.innerHTML = this.locales.uploaded;\n        } else {\n          progressBar.innerHTML = \"0%\";\n          progressBar.style.width = \"15%\";\n        }\n\n        wrapper.dataset.state = state;\n      }\n\n      var progressBarBorder = document.createElement(\"div\");\n      progressBarBorder.classList.add(\"progress-bar-border\");\n      progressBarBorder.appendChild(progressBar);\n      var progressBarWrapper = document.createElement(\"div\");\n      progressBarWrapper.classList.add(\"columns\", \"progress-bar-wrapper\");\n      progressBarWrapper.appendChild(progressBarBorder);\n\n      if (this.options.titled) {\n        progressBarWrapper.classList.add(\"small-4\", \"medium-5\");\n      } else {\n        progressBarWrapper.classList.add(\"small-10\");\n      }\n\n      var errorList = document.createElement(\"ul\");\n      errorList.classList.add(\"upload-errors\");\n      var removeButton = document.createElement(\"button\");\n      removeButton.classList.add(\"columns\", \"small-3\", \"medium-2\", \"remove-upload-item\");\n      removeButton.innerHTML = \"&times; \".concat(this.locales.remove);\n      removeButton.addEventListener(\"click\", function (event) {\n        event.preventDefault();\n\n        var item = _this2.uploadItems.querySelector(\"[data-filename='\".concat(fileName, \"']\"));\n\n        _this2.trashCan.append(item);\n\n        _this2.updateDropZone();\n      });\n      var titleAndFileNameSpan = document.createElement(\"span\");\n      titleAndFileNameSpan.classList.add(\"columns\", \"small-5\", \"title-and-filename-span\");\n      titleAndFileNameSpan.innerHTML = \"\".concat(title, \" (\").concat(truncateFilename(fileName), \")\");\n      firstRow.appendChild(fileNameSpan);\n      secondRow.appendChild(progressBarWrapper);\n      thirdRow.appendChild(errorList);\n      var titleInputContainer = null;\n\n      if (this.options.titled) {\n        var titleInput = document.createElement(\"input\");\n        titleInput.classList.add(\"attachment-title\");\n        titleInput.type = \"text\";\n        titleInput.value = title;\n        titleInput.addEventListener(\"input\", function (event) {\n          event.preventDefault();\n          checkTitles(_this2.uploadItems, _this2.saveButton);\n        });\n        titleInputContainer = document.createElement(\"div\");\n        titleInputContainer.classList.add(\"columns\", \"small-5\", \"title-input-container\");\n        titleInputContainer.appendChild(titleInput);\n        var noTitleErrorSpan = document.createElement(\"span\");\n        noTitleErrorSpan.classList.add(\"form-error\", \"no-title-error\");\n        noTitleErrorSpan.role = \"alert\";\n        noTitleErrorSpan.innerHTML = this.locales.title_required;\n        titleInputContainer.appendChild(noTitleErrorSpan);\n        var titleLabelSpan = document.createElement(\"span\");\n        titleLabelSpan.classList.add(\"title-label-span\");\n        titleLabelSpan.innerHTML = this.locales.title;\n        var titleContainer = document.createElement(\"div\");\n        titleContainer.classList.add(\"columns\", \"small-8\", \"medium-7\", \"title-container\");\n        titleContainer.appendChild(titleLabelSpan);\n        firstRow.appendChild(titleContainer);\n        secondRow.appendChild(titleInputContainer);\n      }\n\n      secondRow.appendChild(removeButton);\n      wrapper.appendChild(firstRow);\n      wrapper.appendChild(secondRow);\n      wrapper.appendChild(thirdRow);\n      this.uploadItems.appendChild(wrapper);\n      return wrapper;\n    }\n  }, {\n    key: \"updateAddAttachmentsButton\",\n    value: function updateAddAttachmentsButton() {\n      if (this.activeAttachments.children.length === 0) {\n        this.button.innerHTML = this.modalTitle.dataset.addlabel;\n      } else {\n        this.button.innerHTML = this.modalTitle.dataset.editlabel;\n      }\n    }\n  }, {\n    key: \"createTrashCan\",\n    value: function createTrashCan() {\n      var trashCan = document.createElement(\"div\");\n      trashCan.classList.add(\"trash-can\");\n      trashCan.style.display = \"none\";\n      this.uploadItems.parentElement.appendChild(trashCan);\n      return trashCan;\n    }\n  }, {\n    key: \"cleanTrashCan\",\n    value: function cleanTrashCan() {\n      var _this3 = this;\n\n      Array.from(this.trashCan.children).forEach(function (item) {\n        var fileName = item.dataset.filename;\n\n        var activeAttachment = _this3.activeAttachments.querySelector(\"div[data-filename='\".concat(fileName, \"']\"));\n\n        if (activeAttachment) {\n          activeAttachment.remove();\n        }\n\n        item.remove();\n      });\n    }\n  }]);\n\n  return UploadModal;\n}();\n\nexport { UploadModal as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,qCAAzB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,iBAAxC,QAAiE,2CAAjE,C,CAEA;AACA;;IACqBC,W;EACnB,qBAAYC,MAAZ,EAAkC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IAAAC,oCAChC;;;IACA,KAAKF,MAAL,GAAcA,MAAd,CAFgC,CAIhC;IACA;;IACA,IAAIG,eAAe,GAAG,EAAtB;;IACA,IAAI;MACF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAA,eAAe,GAAGC,IAAI,CAACC,KAALD,CAAWJ,MAAM,CAACM,OAAPN,CAAeO,MAA1BH,CAAlBD;IAVF,EAWE,OAAOK,EAAP,EAAW,CACX;IACD;;IAED,KAAKP,OAAL,GAAeQ,MAAM,CAACC,MAAPD,CAAcN,eAAdM,EAA+BR,OAA/BQ,CAAf;IAEA,KAAKE,IAAL,GAAY,KAAKX,MAAL,CAAYW,IAAxB;IACA,KAAKC,KAAL,GAAaC,QAAQ,CAACC,aAATD,YAA2Bb,MAAM,CAACM,OAAPN,CAAee,IAA1C,EAAb;IACA,KAAKC,UAAL,GAAkB,KAAKJ,KAAL,CAAWE,aAAX,2BAA4C,KAAKH,IAAjD,EAAlB;IACA,KAAKM,iBAAL,GAAyB,CAAzB;IACA,KAAKC,eAAL,GAAuB,IAAvB;IACA,KAAKC,UAAL,GAAkB,KAAKP,KAAL,CAAWE,aAAX,CAAyB,gBAAzB,CAAlB;IACA,KAAKM,WAAL,GAAmB,KAAKR,KAAL,CAAWE,aAAX,CAAyB,eAAzB,CAAnB;IACA,KAAKO,OAAL,GAAejB,IAAI,CAACC,KAALD,CAAW,KAAKgB,WAAL,CAAiBd,OAAjB,CAAyBe,OAApCjB,CAAf;IACA,KAAKkB,QAAL,GAAgB,KAAKV,KAAL,CAAWE,aAAX,CAAyB,WAAzB,CAAhB;IACA,KAAKS,KAAL,GAAa,KAAKD,QAAL,CAAcR,aAAd,CAA4B,OAA5B,CAAb;IACA,KAAKU,eAAL,GAAuBX,QAAQ,CAACC,aAATD,iCAAgD,KAAKF,IAArD,EAAvB;IACA,KAAKc,iBAAL,GAAyB,KAAKD,eAAL,CAAqBV,aAArB,CAAmC,iBAAnC,CAAzB;IACA,KAAKY,QAAL,GAAgB,KAAKC,cAAL,EAAhB;EACD;;;;WAED,oBAAWC,IAAX,EAAiB;MAAA;;MACf,IAAI,CAAC,KAAKV,eAAV,EAA2B;QACzB;MACD;;MAED,IAAMW,KAAK,GAAGD,IAAI,CAACjB,IAALiB,CAAUE,KAAVF,CAAgB,GAAhBA,EAAqB,CAArBA,EAAwBG,KAAxBH,CAA8B,CAA9BA,EAAiC,EAAjCA,CAAd;MACA,IAAMI,UAAU,GAAG,KAAKC,gBAAL,CAAsBL,IAAI,CAACjB,IAA3B,EAAiCkB,KAAjC,EAAwC,MAAxC,CAAnB;MACA,IAAMK,QAAQ,GAAG,IAAIvC,QAAJ,CAAa,IAAb,EAAmBqC,UAAnB,EAA+B;QAC9CJ,IAAI,EAAEA,IADwC;QAE9CO,GAAG,EAAE,KAAKZ,KAAL,CAAWjB,OAAX,CAAmB8B,eAFsB;QAG9CC,cAAc,EAAET,IAAI,CAACjB;MAHyB,CAA/B,CAAjB;;MAKA,IAAIuB,QAAQ,CAACI,UAAb,EAAyB;QACvB;MACD;;MAEDJ,QAAQ,CAAC3B,MAAT2B,CAAgBK,MAAhBL,CAAuB,UAACM,KAAD,EAAQC,IAAR,EAAiB;QACtC,IAAID,KAAJ,EAAW;UACTR,UAAU,CAAC1B,OAAX0B,CAAmBU,KAAnBV,GAA2B,OAA3BA;UACA,IAAMW,WAAW,GAAGX,UAAU,CAAClB,aAAXkB,CAAyB,eAAzBA,CAApB;UACAW,WAAW,CAACC,SAAZD,CAAsBE,GAAtBF,CAA0B,QAA1BA;UACAA,WAAW,CAACG,SAAZH,GAAwBI,KAAI,CAAC1B,OAAL,CAAamB,KAArCG;UACAK,OAAO,CAACR,KAARQ,CAAcR,KAAdQ;QALF,OAMO;UACL,IAAMC,aAAa,GAAGF,KAAI,CAACG,gBAAL,EAAtB;;UAEA,IAAMC,iBAAiB,GAAGtC,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAA1B;UACAsC,iBAAiB,CAACP,SAAlBO,CAA4BN,GAA5BM,CAAgC,oBAAhCA;UACAA,iBAAiB,CAAC7C,OAAlB6C,CAA0BE,QAA1BF,GAAqCvB,IAAI,CAACjB,IAA1CwC;UACA,IAAMG,oBAAoB,GAAGzC,QAAQ,CAACuC,aAATvC,CAAuB,MAAvBA,CAA7B;UACAyC,oBAAoB,CAACC,KAArBD,CAA2BE,OAA3BF,GAAqC,MAArCA;UACAH,iBAAiB,CAACM,WAAlBN,CAA8BG,oBAA9BH;UAEA,IAAMO,eAAe,GAAG5D,iBAAiB,CAAC,IAAD,EAAO,IAAP,EAAa2C,IAAI,CAACkB,SAAlB,CAAzC;;UACA,IAAIZ,KAAI,CAAC9C,OAAL,CAAa2D,MAAjB,EAAyB;YACvBF,eAAe,CAAC/C,IAAhB+C,aAA0BX,KAAI,CAAC9C,OAAL,CAAa4D,YAAvC,cAAuDd,KAAI,CAAC9C,OAAL,CAAa6D,YAApE,eAAqFb,aAArF;UADF,OAEO;YACLS,eAAe,CAAC/C,IAAhB+C,aAA0BX,KAAI,CAAC9C,OAAL,CAAa4D,YAAvC,cAAuDd,KAAI,CAAC9C,OAAL,CAAa6D,YAApE;UACD;;UAED,IAAIf,KAAI,CAAC9C,OAAL,CAAa2D,MAAjB,EAAyB;YACvB,IAAMG,gBAAgB,GAAGjE,iBAAiB,CAAC,cAAD,YAAoBiD,KAAI,CAAC9C,OAAL,CAAa4D,YAAjC,cAAiDd,KAAI,CAAC9C,OAAL,CAAa6D,YAA9D,eAA+Eb,aAA/E,eAAwGpB,KAAxG,CAA1C;YACAyB,oBAAoB,CAACR,SAArBQ,aAAoCzB,KAApC,eAA8CD,IAAI,CAACjB,IAAnD;YACAwC,iBAAiB,CAACM,WAAlBN,CAA8BY,gBAA9BZ;UAHF,OAIO;YACLG,oBAAoB,CAACR,SAArBQ,GAAiC1B,IAAI,CAACjB,IAAtC2C;UACD;;UAED,IAAI,CAACP,KAAI,CAAC9C,OAAL,CAAa+D,QAAlB,EAA4B;YAC1BjB,KAAI,CAACkB,aAAL;UACD;;UAEDd,iBAAiB,CAACM,WAAlBN,CAA8BO,eAA9BP;UACAnB,UAAU,CAACyB,WAAXzB,CAAuBmB,iBAAvBnB;UACAE,QAAQ,CAACgC,QAAThC,CAAkBO,IAAI,CAACkB,SAAvBzB;QACD;MAvCH;MAyCA,KAAKiC,cAAL;IACD;;;WAED,4BAAmB;MACjB,IAAMC,iBAAiB,GAAG,KAAKnD,iBAA/B;MACA,KAAKA,iBAAL,IAA0B,CAA1B;MACA,OAAOmD,iBAAP;IACD;;;WAED,0BAAiB;MACf,IAAI,KAAKnE,OAAL,CAAa+D,QAAjB,EAA2B;QACzB;MACD;;MAED,IAAI,KAAK5C,WAAL,CAAiBiD,QAAjB,CAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;QACxC,KAAKhD,QAAL,CAAcsB,SAAd,CAAwBC,GAAxB,CAA4B,UAA5B;QACA,KAAK3B,eAAL,GAAuB,KAAvB;QACA,KAAKK,KAAL,CAAWgD,QAAX,GAAsB,IAAtB;MAHF,OAIO;QACL,KAAKjD,QAAL,CAAcsB,SAAd,CAAwB4B,MAAxB,CAA+B,UAA/B;QACA,KAAKtD,eAAL,GAAuB,IAAvB;QACA,KAAKK,KAAL,CAAWgD,QAAX,GAAsB,KAAtB;MACD;IACF;;;WAED,0BAAiBE,QAAjB,EAA2B5C,KAA3B,EAAkCa,KAAlC,EAAyC;MAAA;MAAA;;MACvC,IAAMgC,OAAO,GAAG7D,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAAhB;MACA6D,OAAO,CAAC9B,SAAR8B,CAAkB7B,GAAlB6B,CAAsB,aAAtBA;MACAA,OAAO,CAACC,YAARD,CAAqB,eAArBA,EAAsCD,QAAtCC;MAEA,IAAME,QAAQ,GAAG/D,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAAjB;MACA,IAAMgE,SAAS,GAAGhE,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAAlB;MACA,IAAMiE,QAAQ,GAAGjE,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAAjB;MACA+D,QAAQ,CAAChC,SAATgC,CAAmB/B,GAAnB+B,CAAuB,KAAvBA,EAA8B,uBAA9BA;MACAC,SAAS,CAACjC,SAAViC,CAAoBhC,GAApBgC,CAAwB,KAAxBA,EAA+B,wBAA/BA;MACAC,QAAQ,CAAClC,SAATkC,CAAmBjC,GAAnBiC,CAAuB,KAAvBA,EAA8B,uBAA9BA;MAEA,IAAMC,YAAY,GAAGlE,QAAQ,CAACuC,aAATvC,CAAuB,MAAvBA,CAArB;MACA,IAAImE,mBAAmB,GAAG,CAAC,SAAD,EAAY,gBAAZ,CAA1B;;MACA,IAAI,KAAK/E,OAAL,CAAa2D,MAAjB,EAAyB;QACvBoB,mBAAmB,CAACC,IAApBD,CAAyB,SAAzBA,EAAoC,UAApCA;MADF,OAEO;QACLA,mBAAmB,CAACC,IAApBD,CAAyB,UAAzBA;MACD;;MACD,qCAAY,CAACpC,SAAb,EAAuBC,GAAvB,8BAA8BmC,mBAA9B;;MACAD,YAAY,CAACjC,SAAbiC,GAAyBnF,gBAAgB,CAAC6E,QAAD,CAAzCM;MAEA,IAAMpC,WAAW,GAAG9B,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAApB;MACA8B,WAAW,CAACC,SAAZD,CAAsBE,GAAtBF,CAA0B,cAA1BA;;MACA,IAAID,KAAJ,EAAW;QACT,IAAIA,KAAK,KAAK,WAAd,EAA2B;UACzBC,WAAW,CAACG,SAAZH,GAAwB,KAAKtB,OAAL,CAAa6D,QAArCvC;QADF,OAEO;UACLA,WAAW,CAACG,SAAZH,GAAwB,IAAxBA;UACAA,WAAW,CAACY,KAAZZ,CAAkBwC,KAAlBxC,GAA0B,KAA1BA;QACD;;QACD+B,OAAO,CAACpE,OAARoE,CAAgBhC,KAAhBgC,GAAwBhC,KAAxBgC;MACD;;MAED,IAAMU,iBAAiB,GAAGvE,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAA1B;MACAuE,iBAAiB,CAACxC,SAAlBwC,CAA4BvC,GAA5BuC,CAAgC,qBAAhCA;MACAA,iBAAiB,CAAC3B,WAAlB2B,CAA8BzC,WAA9ByC;MAEA,IAAMC,kBAAkB,GAAGxE,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAA3B;MACAwE,kBAAkB,CAACzC,SAAnByC,CAA6BxC,GAA7BwC,CAAiC,SAAjCA,EAA4C,sBAA5CA;MACAA,kBAAkB,CAAC5B,WAAnB4B,CAA+BD,iBAA/BC;;MACA,IAAI,KAAKpF,OAAL,CAAa2D,MAAjB,EAAyB;QACvByB,kBAAkB,CAACzC,SAAnByC,CAA6BxC,GAA7BwC,CAAiC,SAAjCA,EAA4C,UAA5CA;MADF,OAEO;QACLA,kBAAkB,CAACzC,SAAnByC,CAA6BxC,GAA7BwC,CAAiC,UAAjCA;MACD;;MAED,IAAMC,SAAS,GAAGzE,QAAQ,CAACuC,aAATvC,CAAuB,IAAvBA,CAAlB;MACAyE,SAAS,CAAC1C,SAAV0C,CAAoBzC,GAApByC,CAAwB,eAAxBA;MAEA,IAAMC,YAAY,GAAG1E,QAAQ,CAACuC,aAATvC,CAAuB,QAAvBA,CAArB;MACA0E,YAAY,CAAC3C,SAAb2C,CAAuB1C,GAAvB0C,CAA2B,SAA3BA,EAAsC,SAAtCA,EAAiD,UAAjDA,EAA6D,oBAA7DA;MACAA,YAAY,CAACzC,SAAbyC,qBAAoC,KAAKlE,OAAL,CAAamD,MAAjD;MACAe,YAAY,CAACC,gBAAbD,CAA+B,OAA/BA,EAAyC,UAACE,KAAD,EAAW;QAClDA,KAAK,CAACC,cAAND;;QACA,IAAME,IAAI,GAAGC,MAAI,CAACxE,WAAL,CAAiBN,aAAjB,2BAAkD2D,QAAlD,QAAb;;QACAmB,MAAI,CAAClE,QAAL,CAAcmE,MAAd,CAAqBF,IAArB;;QACAC,MAAI,CAACzB,cAAL;MAJF;MAOA,IAAMb,oBAAoB,GAAGzC,QAAQ,CAACuC,aAATvC,CAAuB,MAAvBA,CAA7B;MACAyC,oBAAoB,CAACV,SAArBU,CAA+BT,GAA/BS,CAAmC,SAAnCA,EAA8C,SAA9CA,EAAyD,yBAAzDA;MACAA,oBAAoB,CAACR,SAArBQ,aAAoCzB,KAApC,eAA8CjC,gBAAgB,CAAC6E,QAAD,CAA9D;MAEAG,QAAQ,CAACnB,WAATmB,CAAqBG,YAArBH;MACAC,SAAS,CAACpB,WAAVoB,CAAsBQ,kBAAtBR;MACAC,QAAQ,CAACrB,WAATqB,CAAqBQ,SAArBR;MAEA,IAAIgB,mBAAmB,GAAG,IAA1B;;MACA,IAAI,KAAK7F,OAAL,CAAa2D,MAAjB,EAAyB;QACvB,IAAMmC,UAAU,GAAGlF,QAAQ,CAACuC,aAATvC,CAAuB,OAAvBA,CAAnB;QACAkF,UAAU,CAACnD,SAAXmD,CAAqBlD,GAArBkD,CAAyB,kBAAzBA;QACAA,UAAU,CAACC,IAAXD,GAAkB,MAAlBA;QACAA,UAAU,CAACE,KAAXF,GAAmBlE,KAAnBkE;QACAA,UAAU,CAACP,gBAAXO,CAA4B,OAA5BA,EAAqC,UAACN,KAAD,EAAW;UAC9CA,KAAK,CAACC,cAAND;UACA5F,WAAW,CAAC+F,MAAI,CAACxE,WAAN,EAAmBwE,MAAI,CAAC5E,UAAxB,CAAXnB;QAFF;QAIAiG,mBAAmB,GAAGjF,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAAtBiF;QACAA,mBAAmB,CAAClD,SAApBkD,CAA8BjD,GAA9BiD,CAAkC,SAAlCA,EAA6C,SAA7CA,EAAwD,uBAAxDA;QACAA,mBAAmB,CAACrC,WAApBqC,CAAgCC,UAAhCD;QAEA,IAAMI,gBAAgB,GAAGrF,QAAQ,CAACuC,aAATvC,CAAuB,MAAvBA,CAAzB;QACAqF,gBAAgB,CAACtD,SAAjBsD,CAA2BrD,GAA3BqD,CAA+B,YAA/BA,EAA6C,gBAA7CA;QACAA,gBAAgB,CAACC,IAAjBD,GAAwB,OAAxBA;QACAA,gBAAgB,CAACpD,SAAjBoD,GAA6B,KAAK7E,OAAL,CAAa+E,cAA1CF;QACAJ,mBAAmB,CAACrC,WAApBqC,CAAgCI,gBAAhCJ;QAEA,IAAMO,cAAc,GAAGxF,QAAQ,CAACuC,aAATvC,CAAuB,MAAvBA,CAAvB;QACAwF,cAAc,CAACzD,SAAfyD,CAAyBxD,GAAzBwD,CAA6B,kBAA7BA;QACAA,cAAc,CAACvD,SAAfuD,GAA2B,KAAKhF,OAAL,CAAaQ,KAAxCwE;QAEA,IAAMC,cAAc,GAAGzF,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAAvB;QACAyF,cAAc,CAAC1D,SAAf0D,CAAyBzD,GAAzByD,CAA6B,SAA7BA,EAAwC,SAAxCA,EAAmD,UAAnDA,EAA+D,iBAA/DA;QACAA,cAAc,CAAC7C,WAAf6C,CAA2BD,cAA3BC;QACA1B,QAAQ,CAACnB,WAATmB,CAAqB0B,cAArB1B;QACAC,SAAS,CAACpB,WAAVoB,CAAsBiB,mBAAtBjB;MACD;;MAEDA,SAAS,CAACpB,WAAVoB,CAAsBU,YAAtBV;MAEAH,OAAO,CAACjB,WAARiB,CAAoBE,QAApBF;MACAA,OAAO,CAACjB,WAARiB,CAAoBG,SAApBH;MACAA,OAAO,CAACjB,WAARiB,CAAoBI,QAApBJ;MAEA,KAAKtD,WAAL,CAAiBqC,WAAjB,CAA6BiB,OAA7B;MAEA,OAAOA,OAAP;IACD;;;WAED,sCAA6B;MAC3B,IAAI,KAAKjD,iBAAL,CAAuB4C,QAAvB,CAAgCC,MAAhC,KAA2C,CAA/C,EAAkD;QAChD,KAAKtE,MAAL,CAAY8C,SAAZ,GAAwB,KAAK3B,UAAL,CAAgBb,OAAhB,CAAwBiG,QAAhD;MADF,OAEO;QACL,KAAKvG,MAAL,CAAY8C,SAAZ,GAAwB,KAAK3B,UAAL,CAAgBb,OAAhB,CAAwBkG,SAAhD;MACD;IACF;;;WAED,0BAAiB;MACf,IAAM9E,QAAQ,GAAIb,QAAQ,CAACuC,aAATvC,CAAuB,KAAvBA,CAAlB;MACAa,QAAQ,CAACkB,SAATlB,CAAmBmB,GAAnBnB,CAAuB,WAAvBA;MACAA,QAAQ,CAAC6B,KAAT7B,CAAe8B,OAAf9B,GAAyB,MAAzBA;MACA,KAAKN,WAAL,CAAiBqF,aAAjB,CAA+BhD,WAA/B,CAA2C/B,QAA3C;MACA,OAAOA,QAAP;IACD;;;WAED,yBAAgB;MAAA;;MACdgF,KAAK,CAACC,IAAND,CAAW,KAAKhF,QAAL,CAAc2C,QAAzBqC,EAAmCE,OAAnCF,CAA2C,UAACf,IAAD,EAAU;QACnD,IAAMlB,QAAQ,GAAGkB,IAAI,CAACrF,OAALqF,CAAatC,QAA9B;;QACA,IAAMwD,gBAAgB,GAAGC,MAAI,CAACrF,iBAAL,CAAuBX,aAAvB,8BAA2D2D,QAA3D,QAAzB;;QACA,IAAIoC,gBAAJ,EAAsB;UACpBA,gBAAgB,CAACrC,MAAjBqC;QACD;;QACDlB,IAAI,CAACnB,MAALmB;MANF;IAQD;;;;;;SAjQkB5F,W","names":["Uploader","truncateFilename","checkTitles","createHiddenInput","UploadModal","button","options","_classCallCheck","providedOptions","JSON","parse","dataset","upload","_e","Object","assign","name","modal","document","querySelector","open","saveButton","attachmentCounter","dropZoneEnabled","modalTitle","uploadItems","locales","dropZone","input","uploadContainer","activeAttachments","trashCan","createTrashCan","file","title","split","slice","uploadItem","createUploadItem","uploader","url","directUploadUrl","attachmentName","fileTooBig","create","error","blob","state","progressBar","classList","add","innerHTML","_this","console","ordinalNumber","getOrdinalNumber","attachmentDetails","createElement","filename","titleAndFileNameSpan","style","display","appendChild","hiddenBlobField","signed_id","titled","resourceName","addAttribute","hiddenTitleField","multiple","cleanTrashCan","validate","updateDropZone","nextOrdinalNumber","children","length","disabled","remove","fileName","wrapper","setAttribute","firstRow","secondRow","thirdRow","fileNameSpan","fileNameSpanClasses","push","uploaded","width","progressBarBorder","progressBarWrapper","errorList","removeButton","addEventListener","event","preventDefault","item","_this2","append","titleInputContainer","titleInput","type","value","noTitleErrorSpan","role","title_required","titleLabelSpan","titleContainer","addlabel","editlabel","parentElement","Array","from","forEach","activeAttachment","_this3"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/direct_uploads/upload_modal.js"],"sourcesContent":["import { Uploader } from \"src/decidim/direct_uploads/uploader\";\nimport { truncateFilename, checkTitles, createHiddenInput } from \"src/decidim/direct_uploads/upload_utility\";\n\n// This class handles logic inside upload modal, but since modal is not inside the form\n// logic here moves \"upload items\" / hidden inputs to form.\nexport default class UploadModal {\n  constructor(button, options = {}) {\n    // Button that opens the modal.\n    this.button = button;\n\n    // The provided options contains the options passed from the view in the\n    // `data-upload` attribute as a JSON.\n    let providedOptions = {};\n    try {\n      // The providedOptions can contain the following keys:\n      // - addAttribute - Field name / attribute of resource (e.g. avatar)\n      // - resourceName - The resource to which the attribute belongs (e.g. user)\n      // - resourceClass - Ruby class of the resource (e.g. Decidim::User)\n      // - optional - Defines if file is optional\n      // - multiple - Defines if multiple files can be uploaded\n      // - titled - Defines if file(s) can have titles\n      // - maxFileSize - Defines maximum file size in bytes\n      // - formObjectClass - Class of the current form object (e.g. Decidim::AccountForm)\n      providedOptions = JSON.parse(button.dataset.upload);\n    } catch (_e) {\n      // Don't care about the parse errors, just skip the provided options.\n    }\n\n    this.options = Object.assign(providedOptions, options)\n\n    this.name = this.button.name;\n    this.modal = document.querySelector(`#${button.dataset.open}`);\n    this.saveButton = this.modal.querySelector(`button.add-file-${this.name}`);\n    this.attachmentCounter = 0;\n    this.dropZoneEnabled = true;\n    this.modalTitle = this.modal.querySelector(\".reveal__title\");\n    this.uploadItems = this.modal.querySelector(\".upload-items\");\n    this.locales = JSON.parse(this.uploadItems.dataset.locales);\n    this.dropZone = this.modal.querySelector(\".dropzone\");\n    this.input = this.dropZone.querySelector(\"input\");\n    this.uploadContainer = document.querySelector(`.upload-container-for-${this.name}`);\n    this.activeAttachments = this.uploadContainer.querySelector(\".active-uploads\");\n    this.trashCan = this.createTrashCan();\n  }\n\n  uploadFile(file) {\n    if (!this.dropZoneEnabled) {\n      return;\n    }\n\n    const title = file.name.split(\".\")[0].slice(0, 31);\n    const uploadItem = this.createUploadItem(file.name, title, \"init\");\n    const uploader = new Uploader(this, uploadItem, {\n      file: file,\n      url: this.input.dataset.directUploadUrl,\n      attachmentName: file.name\n    });\n    if (uploader.fileTooBig) {\n      return;\n    }\n\n    uploader.upload.create((error, blob) => {\n      if (error) {\n        uploadItem.dataset.state = \"error\";\n        const progressBar = uploadItem.querySelector(\".progress-bar\");\n        progressBar.classList.add(\"filled\");\n        progressBar.innerHTML = this.locales.error;\n        console.error(error);\n      } else {\n        const ordinalNumber = this.getOrdinalNumber();\n\n        const attachmentDetails = document.createElement(\"div\");\n        attachmentDetails.classList.add(\"attachment-details\");\n        attachmentDetails.dataset.filename = file.name;\n        const titleAndFileNameSpan = document.createElement(\"span\");\n        titleAndFileNameSpan.style.display = \"none\";\n        attachmentDetails.appendChild(titleAndFileNameSpan);\n\n        const hiddenBlobField = createHiddenInput(null, null, blob.signed_id);\n        if (this.options.titled) {\n          hiddenBlobField.name = `${this.options.resourceName}[${this.options.addAttribute}][${ordinalNumber}][file]`;\n        } else {\n          hiddenBlobField.name = `${this.options.resourceName}[${this.options.addAttribute}]`;\n        }\n\n        if (this.options.titled) {\n          const hiddenTitleField = createHiddenInput(\"hidden-title\", `${this.options.resourceName}[${this.options.addAttribute}][${ordinalNumber}][title]`, title);\n          titleAndFileNameSpan.innerHTML = `${title} (${file.name})`;\n          attachmentDetails.appendChild(hiddenTitleField);\n        } else {\n          titleAndFileNameSpan.innerHTML = file.name;\n        }\n\n        if (!this.options.multiple) {\n          this.cleanTrashCan();\n        }\n\n        attachmentDetails.appendChild(hiddenBlobField);\n        uploadItem.appendChild(attachmentDetails);\n        uploader.validate(blob.signed_id);\n      }\n    });\n    this.updateDropZone();\n  }\n\n  getOrdinalNumber() {\n    const nextOrdinalNumber = this.attachmentCounter;\n    this.attachmentCounter += 1;\n    return nextOrdinalNumber;\n  }\n\n  updateDropZone() {\n    if (this.options.multiple) {\n      return;\n    }\n\n    if (this.uploadItems.children.length > 0) {\n      this.dropZone.classList.add(\"disabled\");\n      this.dropZoneEnabled = false;\n      this.input.disabled = true;\n    } else {\n      this.dropZone.classList.remove(\"disabled\");\n      this.dropZoneEnabled = true;\n      this.input.disabled = false;\n    }\n  }\n\n  createUploadItem(fileName, title, state) {\n    const wrapper = document.createElement(\"div\");\n    wrapper.classList.add(\"upload-item\");\n    wrapper.setAttribute(\"data-filename\", fileName);\n\n    const firstRow = document.createElement(\"div\");\n    const secondRow = document.createElement(\"div\");\n    const thirdRow = document.createElement(\"div\");\n    firstRow.classList.add(\"row\", \"upload-item-first-row\");\n    secondRow.classList.add(\"row\", \"upload-item-second-row\");\n    thirdRow.classList.add(\"row\", \"upload-item-third-row\");\n\n    const fileNameSpan = document.createElement(\"span\");\n    let fileNameSpanClasses = [\"columns\", \"file-name-span\"];\n    if (this.options.titled) {\n      fileNameSpanClasses.push(\"small-4\", \"medium-5\");\n    } else {\n      fileNameSpanClasses.push(\"small-12\");\n    }\n    fileNameSpan.classList.add(...fileNameSpanClasses);\n    fileNameSpan.innerHTML = truncateFilename(fileName);\n\n    const progressBar = document.createElement(\"div\");\n    progressBar.classList.add(\"progress-bar\");\n    if (state) {\n      if (state === \"validated\") {\n        progressBar.innerHTML = this.locales.uploaded;\n      } else {\n        progressBar.innerHTML = \"0%\";\n        progressBar.style.width = \"15%\";\n      }\n      wrapper.dataset.state = state;\n    }\n\n    const progressBarBorder = document.createElement(\"div\");\n    progressBarBorder.classList.add(\"progress-bar-border\");\n    progressBarBorder.appendChild(progressBar);\n\n    const progressBarWrapper = document.createElement(\"div\");\n    progressBarWrapper.classList.add(\"columns\", \"progress-bar-wrapper\");\n    progressBarWrapper.appendChild(progressBarBorder);\n    if (this.options.titled) {\n      progressBarWrapper.classList.add(\"small-4\", \"medium-5\");\n    } else {\n      progressBarWrapper.classList.add(\"small-10\");\n    }\n\n    const errorList = document.createElement(\"ul\");\n    errorList.classList.add(\"upload-errors\");\n\n    const removeButton = document.createElement(\"button\");\n    removeButton.classList.add(\"columns\", \"small-3\", \"medium-2\", \"remove-upload-item\");\n    removeButton.innerHTML = `&times; ${this.locales.remove}`;\n    removeButton.addEventListener((\"click\"), (event) => {\n      event.preventDefault();\n      const item = this.uploadItems.querySelector(`[data-filename='${fileName}']`);\n      this.trashCan.append(item);\n      this.updateDropZone();\n    })\n\n    const titleAndFileNameSpan = document.createElement(\"span\");\n    titleAndFileNameSpan.classList.add(\"columns\", \"small-5\", \"title-and-filename-span\");\n    titleAndFileNameSpan.innerHTML = `${title} (${truncateFilename(fileName)})`;\n\n    firstRow.appendChild(fileNameSpan);\n    secondRow.appendChild(progressBarWrapper);\n    thirdRow.appendChild(errorList);\n\n    let titleInputContainer = null;\n    if (this.options.titled) {\n      const titleInput = document.createElement(\"input\");\n      titleInput.classList.add(\"attachment-title\");\n      titleInput.type = \"text\";\n      titleInput.value = title;\n      titleInput.addEventListener(\"input\", (event) => {\n        event.preventDefault();\n        checkTitles(this.uploadItems, this.saveButton);\n      })\n      titleInputContainer = document.createElement(\"div\");\n      titleInputContainer.classList.add(\"columns\", \"small-5\", \"title-input-container\");\n      titleInputContainer.appendChild(titleInput);\n\n      const noTitleErrorSpan = document.createElement(\"span\");\n      noTitleErrorSpan.classList.add(\"form-error\", \"no-title-error\");\n      noTitleErrorSpan.role = \"alert\";\n      noTitleErrorSpan.innerHTML = this.locales.title_required;\n      titleInputContainer.appendChild(noTitleErrorSpan);\n\n      const titleLabelSpan = document.createElement(\"span\");\n      titleLabelSpan.classList.add(\"title-label-span\");\n      titleLabelSpan.innerHTML = this.locales.title;\n\n      const titleContainer = document.createElement(\"div\");\n      titleContainer.classList.add(\"columns\", \"small-8\", \"medium-7\", \"title-container\");\n      titleContainer.appendChild(titleLabelSpan);\n      firstRow.appendChild(titleContainer);\n      secondRow.appendChild(titleInputContainer);\n    }\n\n    secondRow.appendChild(removeButton);\n\n    wrapper.appendChild(firstRow);\n    wrapper.appendChild(secondRow);\n    wrapper.appendChild(thirdRow);\n\n    this.uploadItems.appendChild(wrapper);\n\n    return wrapper;\n  }\n\n  updateAddAttachmentsButton() {\n    if (this.activeAttachments.children.length === 0) {\n      this.button.innerHTML = this.modalTitle.dataset.addlabel;\n    } else {\n      this.button.innerHTML = this.modalTitle.dataset.editlabel;\n    }\n  }\n\n  createTrashCan() {\n    const trashCan =  document.createElement(\"div\");\n    trashCan.classList.add(\"trash-can\");\n    trashCan.style.display = \"none\";\n    this.uploadItems.parentElement.appendChild(trashCan);\n    return trashCan;\n  }\n\n  cleanTrashCan() {\n    Array.from(this.trashCan.children).forEach((item) => {\n      const fileName = item.dataset.filename;\n      const activeAttachment = this.activeAttachments.querySelector(`div[data-filename='${fileName}']`);\n      if (activeAttachment) {\n        activeAttachment.remove();\n      }\n      item.remove();\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}