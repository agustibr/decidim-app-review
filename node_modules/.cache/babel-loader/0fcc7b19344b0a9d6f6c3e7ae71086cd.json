{"ast":null,"code":"import AutoComplete from \"src/decidim/autocomplete\";\n\nvar updateSubmitButton = function updateSubmitButton($fieldContainer, $selectedItems) {\n  var $form = $fieldContainer.closest(\"form\");\n\n  if ($form.length < 1) {\n    return;\n  }\n\n  var $submitButton = $form.find(\"button[type='submit']\");\n\n  if ($selectedItems.children().length === 0) {\n    $submitButton.prop(\"disabled\", true);\n  } else {\n    $submitButton.prop(\"disabled\", false);\n  }\n};\n\n$(function () {\n  var $fieldContainer = $(\".multiple-mentions\");\n\n  if ($fieldContainer.length < 1) {\n    return;\n  }\n\n  var allMessages = window.Decidim.config.get(\"messages\");\n  var messages = allMessages.mentionsModal || {};\n  var $searchInput = $(\"input\", $fieldContainer);\n  var $selectedItems = $(\"ul.\".concat($searchInput.data().selected));\n  var options = $fieldContainer.data();\n  var selected = [];\n  var iconsPath = window.Decidim.config.get(\"icons_path\");\n  var removeLabel = messages.removeRecipient || \"Remove recipient %name%\";\n  var emptyFocusElement = $fieldContainer[0].querySelector(\".empty-list\");\n\n  if (!emptyFocusElement) {\n    emptyFocusElement = document.createElement(\"div\");\n    emptyFocusElement.tabIndex = \"-1\";\n    emptyFocusElement.className = \"empty-list\";\n    $selectedItems.before(emptyFocusElement);\n  }\n\n  updateSubmitButton($fieldContainer, $selectedItems);\n  var autoComplete = new AutoComplete($searchInput[0], {\n    dataMatchKeys: [\"name\", \"nickname\"],\n    dataSource: function dataSource(query, callback) {\n      $.post(\"/api\", {\n        \"query\": \"\\n          {\\n            users(filter:{wildcard:\\\"\".concat(query, \"\\\",excludeIds:[]})\\n              {\\n                id,nickname,name,avatarUrl,__typename,...on UserGroup{membersCount},...on User{\\n                  directMessagesEnabled\\n                }\\n              }\\n          }\")\n      }).then(function (response) {\n        callback(response.data.users);\n      });\n    },\n    dataFilter: function dataFilter(list) {\n      return list.filter(function (item) {\n        return !selected.includes(item.value.id);\n      });\n    },\n    modifyResult: function modifyResult(element, value) {\n      $(element).html(\"\\n        <span class=\\\"author__avatar\\\"><img src=\\\"\".concat(value.avatarUrl, \"\\\" alt=\\\"\").concat(value.name, \"\\\"></span>\\n        <strong>\").concat(value.nickname, \"</strong>\\n        <small>\").concat(value.name, \"</small>\\n      \"));\n\n      if (value.directMessagesEnabled === \"false\") {\n        $(element).addClass(\"disabled\");\n        $(element).append(\"<span>\".concat($searchInput.data().directMessagesDisabled, \"</span>\"));\n      }\n\n      if (value.membersCount) {\n        $(element).append(\"<span class=\\\"is-group\\\">\".concat(value.membersCount, \"x <svg class=\\\"icon--members icon\\\"><use href=\\\"\").concat(iconsPath, \"#icon-members\\\"/></svg></span>\"));\n      }\n    }\n  });\n  $searchInput.on(\"selection\", function (event) {\n    var feedback = event.detail;\n    var selection = feedback.selection;\n    var id = selection.value.id;\n\n    if (selected.length >= 9 || selection.value.directMessagesEnabled === \"false\") {\n      return;\n    }\n\n    var label = removeLabel.replace(\"%name%\", selection.value.name);\n    $selectedItems.append(\"\\n      <li tabindex=\\\"-1\\\">\\n        <input type=\\\"hidden\\\" name=\\\"\".concat(options.name, \"\\\" value=\\\"\").concat(id, \"\\\">\\n        <img src=\\\"\").concat(selection.value.avatarUrl, \"\\\" class=\\\"author__avatar\\\" alt=\\\"\").concat(selection.value.name, \"\\\">\\n        <b>\").concat(selection.value.name, \"</b>\\n        <button type=\\\"button\\\" class=\\\"float-right\\\" data-remove=\\\"\").concat(id, \"\\\" tabindex=\\\"0\\\" aria-controls=\\\"0\\\" aria-label=\\\"\").concat(label, \"\\\">&times;</button>\\n      </li>\\n    \"));\n    autoComplete.setInput(\"\");\n    selected.push(id);\n    updateSubmitButton($fieldContainer, $selectedItems);\n    $selectedItems.find(\"*[data-remove=\\\"\".concat(id, \"\\\"]\")).on(\"keypress click\", function (evt) {\n      var target = evt.target.parentNode;\n\n      if (target.tagName === \"LI\") {\n        var focusElement = target.nextElementSibling || target.previousElementSibling || emptyFocusElement;\n        selected = selected.filter(function (identifier) {\n          return identifier !== id;\n        });\n        target.remove();\n        updateSubmitButton($fieldContainer, $selectedItems);\n        focusElement.focus();\n      }\n    });\n  });\n});","map":{"version":3,"mappings":"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","names":["AutoComplete","updateSubmitButton","$fieldContainer","$selectedItems","$form","closest","length","$submitButton","find","children","prop","$","allMessages","window","Decidim","config","get","messages","mentionsModal","$searchInput","data","selected","options","iconsPath","removeLabel","removeRecipient","emptyFocusElement","querySelector","document","createElement","tabIndex","className","before","autoComplete","dataMatchKeys","dataSource","query","callback","post","then","response","users","dataFilter","list","filter","item","includes","value","id","modifyResult","element","html","avatarUrl","name","nickname","directMessagesEnabled","addClass","append","directMessagesDisabled","membersCount","on","event","feedback","detail","selection","label","replace","setInput","push","evt","target","parentNode","tagName","focusElement","nextElementSibling","previousElementSibling","identifier","remove","focus"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/input_multiple_mentions.js"],"sourcesContent":["import AutoComplete from \"src/decidim/autocomplete\";\n\nconst updateSubmitButton = ($fieldContainer, $selectedItems) => {\n  const $form = $fieldContainer.closest(\"form\");\n  if ($form.length < 1) {\n    return;\n  }\n\n  const $submitButton = $form.find(\"button[type='submit']\");\n  if ($selectedItems.children().length === 0) {\n    $submitButton.prop(\"disabled\", true);\n  } else {\n    $submitButton.prop(\"disabled\", false);\n  }\n}\n\n$(() => {\n  const $fieldContainer = $(\".multiple-mentions\");\n  if ($fieldContainer.length < 1) {\n    return;\n  }\n\n  const allMessages = window.Decidim.config.get(\"messages\");\n  const messages = allMessages.mentionsModal || {};\n\n  const $searchInput = $(\"input\", $fieldContainer);\n  const $selectedItems = $(`ul.${$searchInput.data().selected}`);\n  const options = $fieldContainer.data();\n  let selected = [];\n  const iconsPath = window.Decidim.config.get(\"icons_path\");\n  const removeLabel = messages.removeRecipient || \"Remove recipient %name%\";\n\n  let emptyFocusElement = $fieldContainer[0].querySelector(\".empty-list\");\n  if (!emptyFocusElement) {\n    emptyFocusElement = document.createElement(\"div\");\n    emptyFocusElement.tabIndex = \"-1\";\n    emptyFocusElement.className = \"empty-list\";\n    $selectedItems.before(emptyFocusElement);\n  }\n\n  updateSubmitButton($fieldContainer, $selectedItems);\n  const autoComplete = new AutoComplete($searchInput[0], {\n    dataMatchKeys: [\"name\", \"nickname\"],\n    dataSource: (query, callback) => {\n      $.post(\"/api\", {\n        \"query\": `\n          {\n            users(filter:{wildcard:\"${query}\",excludeIds:[]})\n              {\n                id,nickname,name,avatarUrl,__typename,...on UserGroup{membersCount},...on User{\n                  directMessagesEnabled\n                }\n              }\n          }`\n      }).then((response) => {\n        callback(response.data.users);\n      });\n    },\n    dataFilter: (list) => {\n      return list.filter(\n        (item) => !selected.includes(item.value.id)\n      );\n    },\n    modifyResult: (element, value) => {\n      $(element).html(`\n        <span class=\"author__avatar\"><img src=\"${value.avatarUrl}\" alt=\"${value.name}\"></span>\n        <strong>${value.nickname}</strong>\n        <small>${value.name}</small>\n      `);\n      if (value.directMessagesEnabled === \"false\") {\n        $(element).addClass(\"disabled\");\n        $(element).append(`<span>${$searchInput.data().directMessagesDisabled}</span>`);\n      }\n      if (value.membersCount) {\n        $(element).append(`<span class=\"is-group\">${value.membersCount}x <svg class=\"icon--members icon\"><use href=\"${iconsPath}#icon-members\"/></svg></span>`);\n      }\n    }\n  });\n\n  $searchInput.on(\"selection\", (event) => {\n    const feedback = event.detail;\n    const selection = feedback.selection;\n    const id = selection.value.id;\n    if (selected.length >= 9 || selection.value.directMessagesEnabled === \"false\") {\n      return;\n    }\n\n    const label = removeLabel.replace(\"%name%\", selection.value.name);\n    $selectedItems.append(`\n      <li tabindex=\"-1\">\n        <input type=\"hidden\" name=\"${options.name}\" value=\"${id}\">\n        <img src=\"${selection.value.avatarUrl}\" class=\"author__avatar\" alt=\"${selection.value.name}\">\n        <b>${selection.value.name}</b>\n        <button type=\"button\" class=\"float-right\" data-remove=\"${id}\" tabindex=\"0\" aria-controls=\"0\" aria-label=\"${label}\">&times;</button>\n      </li>\n    `);\n\n    autoComplete.setInput(\"\");\n    selected.push(id);\n    updateSubmitButton($fieldContainer, $selectedItems);\n\n    $selectedItems.find(`*[data-remove=\"${id}\"]`).on(\"keypress click\", (evt) => {\n      const target = evt.target.parentNode;\n      if (target.tagName === \"LI\") {\n        const focusElement = target.nextElementSibling || target.previousElementSibling || emptyFocusElement;\n\n        selected = selected.filter((identifier) => identifier !== id);\n        target.remove();\n\n        updateSubmitButton($fieldContainer, $selectedItems);\n        focusElement.focus();\n      }\n    })\n  })\n})\n"]},"metadata":{},"sourceType":"module"}