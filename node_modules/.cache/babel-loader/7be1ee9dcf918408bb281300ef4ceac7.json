{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nvar AutoButtonsByMinItemsComponent = /*#__PURE__*/function () {\n  function AutoButtonsByMinItemsComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, AutoButtonsByMinItemsComponent);\n\n    this.listSelector = options.listSelector;\n    this.minItems = options.minItems;\n    this.hideOnMinItemsOrLessSelector = options.hideOnMinItemsOrLessSelector;\n    this.run();\n  }\n\n  _createClass(AutoButtonsByMinItemsComponent, [{\n    key: \"run\",\n    value: function run() {\n      var $list = $(this.listSelector);\n      var $items = $list.find(this.hideOnMinItemsOrLessSelector);\n\n      if ($list.length <= this.minItems) {\n        $items.hide();\n      } else {\n        $items.show();\n      }\n    }\n  }]);\n\n  return AutoButtonsByMinItemsComponent;\n}();\n\nexport { AutoButtonsByMinItemsComponent as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA,8B;EACnB,0CAA0B;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IAAAC;;IACxB,KAAKC,YAAL,GAAoBF,OAAO,CAACE,YAA5B;IACA,KAAKC,QAAL,GAAgBH,OAAO,CAACG,QAAxB;IACA,KAAKC,4BAAL,GAAoCJ,OAAO,CAACI,4BAA5C;IAEA,KAAKC,GAAL;EACD;;;;WAED,eAAM;MACJ,IAAMC,KAAK,GAAGC,CAAC,CAAC,KAAKL,YAAN,CAAf;MACA,IAAMM,MAAM,GAAGF,KAAK,CAACG,IAANH,CAAW,KAAKF,4BAAhBE,CAAf;;MAEA,IAAIA,KAAK,CAACI,MAANJ,IAAgB,KAAKH,QAAzB,EAAmC;QACjCK,MAAM,CAACG,IAAPH;MADF,OAEO;QACLA,MAAM,CAACI,IAAPJ;MACD;IACF;;;;;;SAlBkBT,8B","names":["AutoButtonsByMinItemsComponent","options","_classCallCheck","listSelector","minItems","hideOnMinItemsOrLessSelector","run","$list","$","$items","find","length","hide","show"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-forms/app/packs/src/decidim/forms/admin/auto_buttons_by_min_items.component.js"],"sourcesContent":["export default class AutoButtonsByMinItemsComponent {\n  constructor(options = {}) {\n    this.listSelector = options.listSelector;\n    this.minItems = options.minItems;\n    this.hideOnMinItemsOrLessSelector = options.hideOnMinItemsOrLessSelector;\n\n    this.run();\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n    const $items = $list.find(this.hideOnMinItemsOrLessSelector);\n\n    if ($list.length <= this.minItems) {\n      $items.hide();\n    } else {\n      $items.show();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}