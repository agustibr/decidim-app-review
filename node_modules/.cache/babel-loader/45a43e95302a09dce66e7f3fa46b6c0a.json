{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/* eslint-disable require-jsdoc */\n\n\nimport attributeDiff from \"src/decidim/editor/attribute_diff\";\nexport default function backspaceBindingsRangeAny(quill) {\n  quill.keyboard.addBinding({\n    key: 8,\n    altKey: null,\n    ctrlKey: null,\n    metaKey: null,\n    shiftKey: null,\n    collapsed: true\n  }, function (range, context) {\n    var length = 1;\n\n    if (range.index === 0 || quill.getLength() <= 1) {\n      return;\n    }\n\n    var _quill$getLine = quill.getLine(range.index),\n        _quill$getLine2 = _slicedToArray(_quill$getLine, 1),\n        line = _quill$getLine2[0];\n\n    var formats = {};\n\n    if (context.offset === 0) {\n      var _quill$getLine3 = quill.getLine(range.index - 1),\n          _quill$getLine4 = _slicedToArray(_quill$getLine3, 1),\n          prev = _quill$getLine4[0];\n\n      if (prev !== null && prev.length() > 1) {\n        var curFormats = line.formats();\n        var prevFormats = quill.getFormat(range.index - 1, 1);\n        formats = attributeDiff(curFormats, prevFormats) || {};\n        var previousLineLength = quill.getLine(range.index - 1)[1];\n        var previousChar = quill.getText(range.index - 1, 1);\n        var beforePreviousChar = quill.getText(range.index - 2, 1);\n\n        if (previousLineLength && previousLineLength === 1 && beforePreviousChar === \"\\n\") {\n          if (prevFormats && prevFormats.list) {\n            quill.setSelection(range.index - 2, Quill.sources.SILENT);\n          } else if (previousChar === \"\\n\" && beforePreviousChar === \"\\n\") {\n            length += 1;\n          }\n        }\n      }\n    }\n\n    if (/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)) {\n      length += 1;\n    }\n\n    quill.deleteText(range.index - length, length, Quill.sources.USER);\n\n    if (Object.keys(formats).length > 0) {\n      quill.formatLine(range.index - length, length, formats, Quill.sources.USER);\n    }\n\n    quill.focus();\n  }); // Put this backspace binding to second (after backspce_offset1 it's going to be third)\n\n  quill.keyboard.bindings[8].splice(1, 0, quill.keyboard.bindings[8].pop());\n}","map":{"version":3,"mappings":"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","names":["attributeDiff","backspaceBindingsRangeAny","quill","keyboard","addBinding","key","altKey","ctrlKey","metaKey","shiftKey","collapsed","range","context","length","index","getLength","getLine","line","formats","offset","prev","curFormats","prevFormats","getFormat","previousLineLength","previousChar","getText","beforePreviousChar","list","setSelection","Quill","sources","SILENT","test","prefix","deleteText","USER","Object","keys","formatLine","focus","bindings","splice","pop"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/editor/modified_backspace_offset_any.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nimport attributeDiff from \"src/decidim/editor/attribute_diff\"\n\nexport default function backspaceBindingsRangeAny(quill) {\n  quill.keyboard.addBinding({ key: 8, altKey: null, ctrlKey: null, metaKey: null, shiftKey: null, collapsed: true }, (range, context) => {\n    let length = 1;\n    if (range.index === 0 || quill.getLength() <= 1) {\n      return;\n    }\n    let [line] = quill.getLine(range.index);\n    let formats = {};\n    if (context.offset === 0) {\n      let [prev] = quill.getLine(range.index - 1);\n      if (prev !== null && prev.length() > 1) {\n        let curFormats = line.formats();\n        let prevFormats = quill.getFormat(range.index - 1, 1);\n        formats = attributeDiff(curFormats, prevFormats) || {};\n        const previousLineLength = quill.getLine(range.index - 1)[1];\n        const previousChar = quill.getText(range.index - 1, 1)\n        const beforePreviousChar = quill.getText(range.index - 2, 1);\n        if (previousLineLength && previousLineLength === 1 && beforePreviousChar === \"\\n\") {\n          if (prevFormats && prevFormats.list) {\n            quill.setSelection(range.index - 2, Quill.sources.SILENT);\n          } else if (previousChar === \"\\n\" && beforePreviousChar === \"\\n\") {\n            length += 1;\n          }\n        }\n      }\n    }\n\n    if ((/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/).test(context.prefix)) {\n      length += 1;\n    }\n    quill.deleteText(range.index - length, length, Quill.sources.USER);\n\n    if (Object.keys(formats).length > 0) {\n      quill.formatLine(range.index - length, length, formats, Quill.sources.USER);\n    }\n    quill.focus();\n  })\n\n  // Put this backspace binding to second (after backspce_offset1 it's going to be third)\n  quill.keyboard.bindings[8].splice(1, 0, quill.keyboard.bindings[8].pop());\n}\n\n"]},"metadata":{},"sourceType":"module"}