{"ast":null,"code":"/* eslint-disable require-jsdoc, max-lines, no-return-assign, func-style, id-length, no-plusplus, no-use-before-define, no-negated-condition, init-declarations, no-invalid-this, no-param-reassign, no-ternary, multiline-ternary, no-nested-ternary, no-eval, no-extend-native, prefer-reflect */\n\n/* eslint dot-location: [\"error\", \"property\"], no-negated-condition: \"error\" */\n\n/* eslint no-unused-expressions: [\"error\", { \"allowTernary\": true }] */\n\n/* eslint no-unused-vars: 0 */\nimport { select, selectAll, event } from \"d3-selection\";\nimport { max } from \"d3-array\";\nimport { hierarchy } from \"d3-hierarchy\";\nimport { forceManyBody, forceCollide, forceCenter, forceX, forceY, forceSimulation, forceLink } from \"d3-force\";\nimport { drag } from \"d3-drag\";\nimport { json } from \"d3-fetch\"; // lib\n\nvar renderOrgCharts = function renderOrgCharts() {\n  var $orgChartContainer = $(\".js-orgchart\");\n  var $btnReset = $(\".js-reset-orgchart\");\n  var dataDepicted = null;\n  var fake = false;\n  var orgchart = {}; // lib - https://bl.ocks.org/bumbeishvili/b96ba47ea21d14dfce6ebb859b002d3a\n\n  var renderChartCollapsibleNetwork = function renderChartCollapsibleNetwork(params) {\n    // exposed variables\n    var attrs = {\n      id: \"id\".concat(Math.floor(Math.random() * 1000000)),\n      svgWidth: 960,\n      svgHeight: 600,\n      marginTop: 0,\n      marginBottom: 5,\n      marginRight: 0,\n      marginLeft: 30,\n      container: \"body\",\n      distance: 150,\n      hiddenChildLevel: 1,\n      hoverOpacity: 0.2,\n      maxTextDisplayZoomLevel: 1,\n      lineStrokeWidth: 1.5,\n      fakeRoot: false,\n      nodeGutter: {\n        x: 16,\n        y: 8\n      },\n      childrenIndicatorRadius: 15,\n      fakeBorderWidth: 32,\n      data: null\n    };\n    /* ############### IF EXISTS OVERWRITE ATTRIBUTES FROM PASSED PARAM  #######  */\n\n    var attrKeys = Object.keys(attrs);\n    attrKeys.forEach(function (key) {\n      if (params && params[key]) {\n        attrs[key] = params[key];\n      }\n    }); // innerFunctions which will update visuals\n\n    var updateData;\n\n    var _collapse, _expand;\n\n    var filter;\n    var _hierarchy = {}; // main chart object\n\n    var main = function main(_selection) {\n      _selection.each(function scope() {\n        // calculated properties\n        var calc = {};\n        calc.chartLeftMargin = attrs.marginLeft;\n        calc.chartTopMargin = attrs.marginTop;\n        calc.chartWidth = attrs.svgWidth - attrs.marginRight - calc.chartLeftMargin;\n        calc.chartHeight = attrs.svgHeight - attrs.marginBottom - calc.chartTopMargin; // ########################## HIERARCHY STUFF  #########################\n\n        _hierarchy.root = hierarchy(attrs.data.root); // ###########################   BEHAVIORS #########################\n\n        var behaviors = {}; // behaviors.zoom = zoom().scaleExtent([0.75, 100, 8]).on(\"zoom\", zoomed)\n\n        behaviors.drag = drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended); // ###########################   LAYOUTS #########################\n\n        var layouts = {}; // custom radial layout\n\n        layouts.radial = radial(); // ###########################   FORCE STUFF #########################\n\n        var force = {};\n        force.link = forceLink().id(function (d) {\n          return d.id;\n        });\n        force.charge = forceManyBody().strength(-240);\n        force.center = forceCenter(calc.chartWidth / 2, calc.chartHeight / 2); // prevent collide\n\n        force.collide = forceCollide().radius(function (d) {\n          // Creates an invented radius based on element measures: diagonal = 2 * radius = sqrt(width^2, height^2)\n          var base = (d.bbox || {}).width + attrs.nodeGutter.x * 2;\n          var height = (d.bbox || {}).height + attrs.nodeGutter.y * 2;\n          var diagonal = Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2));\n          var fakeRadius = diagonal / 2; // return max([attrs.nodeDistance * 3, fakeRadius])\n\n          return fakeRadius * 1.5;\n        }); // manually set x positions (which is calculated using custom radial layout)\n\n        force.x = forceX().strength(0.5).x(function (d) {\n          // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n          if (!d.children && d.depth > 2) {\n            if (d.parent) {\n              d = d.parent;\n            }\n          } // custom circle projection -  radius will be -  (d.depth - 1) * 150\n\n\n          return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[0];\n        }); // manually set y positions (which is calculated using cluster)\n\n        force.y = forceY().strength(0.5).y(function (d) {\n          // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n          if (!d.children && d.depth > 2) {\n            if (d.parent) {\n              d = d.parent;\n            }\n          } // custom circle projection -  radius will be -  (d.depth - 1) * 150\n\n\n          return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[1];\n        }); // ---------------------------------  INITIALISE FORCE SIMULATION ----------------------------\n        // get based on top parameter simulation\n\n        force.simulation = forceSimulation().force(\"link\", force.link).force(\"charge\", force.charge).force(\"center\", force.center).force(\"collide\", force.collide).force(\"x\", force.x).force(\"y\", force.y); // ###########################   HIERARCHY STUFF #########################\n        // flatten root\n\n        var arr = flatten(_hierarchy.root); // hide members based on their depth\n\n        arr.forEach(function (d) {\n          // Hide fake root node\n          if (attrs.fakeRoot && d.depth === 1) {\n            d.hidden = true;\n          }\n\n          if (d.depth > attrs.hiddenChildLevel) {\n            d._children = d.children;\n            d.children = null;\n          }\n        }); // ####################################  DRAWINGS #######################\n        // drawing containers\n\n        var container = select(this); // add svg\n\n        var svg = patternify(container, {\n          tag: \"svg\",\n          selector: \"svg-chart-container\"\n        }).attr(\"width\", attrs.svgWidth).attr(\"height\", attrs.svgHeight); // .call(behaviors.zoom)\n        // add container g element\n\n        var chart = patternify(svg, {\n          tag: \"g\",\n          selector: \"chart\"\n        }).attr(\"transform\", \"translate(\".concat(calc.chartLeftMargin, \",\").concat(calc.chartTopMargin, \")\")); // ################################   Chart Content Drawing ##################################\n        // link wrapper\n\n        var linksWrapper = patternify(chart, {\n          tag: \"g\",\n          selector: \"links-wrapper\"\n        }); // node wrapper\n\n        var nodesWrapper = patternify(chart, {\n          tag: \"g\",\n          selector: \"nodes-wrapper\"\n        });\n        var links, nodes; // reusable function which updates visual based on data change\n\n        update(); // update visual based on data change\n\n        function update(clickedNode) {\n          // Show/hide reset button\n          clickedNode ? $btnReset.removeClass(\"invisible\") : $btnReset.addClass(\"invisible\"); // set xy and proportion properties with custom radial layout\n\n          layouts.radial(_hierarchy.root); // nodes and links array\n\n          var nodesArr = flatten(_hierarchy.root, true).orderBy(function (d) {\n            return d.depth;\n          }).filter(function (d) {\n            return !d.hidden;\n          });\n\n          var linksArr = _hierarchy.root.links().filter(function (d) {\n            return !d.source.hidden;\n          }).filter(function (d) {\n            return !d.target.hidden;\n          }); // make new nodes to appear near the parents\n\n\n          nodesArr.forEach(function (d) {\n            if (clickedNode && clickedNode.id === (d.parent && d.parent.id)) {\n              d.x = d.parent.x;\n              d.y = d.parent.y;\n            }\n          }); // links\n\n          links = linksWrapper.selectAll(\".link\").data(linksArr, function (d) {\n            return d.target.id;\n          });\n          links.exit().remove();\n          links = links.enter().append(\"line\").attr(\"class\", \"link\").merge(links); // node groups\n\n          nodes = nodesWrapper.selectAll(\".node\").data(nodesArr, function (d) {\n            return d.id;\n          });\n          nodes.exit().remove();\n          var enteredNodes = nodes.enter().append(\"g\").attr(\"class\", \"node\"); // bind event handlers\n\n          enteredNodes.on(\"click\", nodeClick).on(\"mouseenter\", nodeMouseEnter).on(\"mouseleave\", nodeMouseLeave).call(behaviors.drag); // channels grandchildren\n\n          enteredNodes.append(\"rect\").attr(\"class\", \"as-card\").attr(\"rx\", 4).attr(\"ry\", 4);\n          enteredNodes.append(\"text\").attr(\"class\", \"as-text\").text(function (d) {\n            return d.data.name;\n          });\n          enteredNodes.selectAll(\"text\").each(function (d) {\n            d.bbox = this.getBBox();\n          });\n          enteredNodes.selectAll(\"rect\").attr(\"x\", function (d) {\n            return d.bbox.x - attrs.nodeGutter.x;\n          }).attr(\"y\", function (d) {\n            return d.bbox.y - attrs.nodeGutter.y;\n          }).attr(\"width\", function (d) {\n            return d.bbox.width + 2 * attrs.nodeGutter.x;\n          }).attr(\"height\", function (d) {\n            return d.bbox.height + 2 * attrs.nodeGutter.y;\n          }); // append circle & text only when there are children\n\n          enteredNodes.append(\"circle\").filter(function (d) {\n            return Boolean(d.children) || Boolean(d._children);\n          }).attr(\"class\", \"as-circle\").attr(\"r\", attrs.childrenIndicatorRadius).attr(\"cx\", function (d) {\n            return d.bbox.x + d.bbox.width + attrs.nodeGutter.x;\n          }).attr(\"cy\", function (d) {\n            return d.bbox.y + d.bbox.height + attrs.nodeGutter.y;\n          });\n          enteredNodes.append(\"text\").filter(function (d) {\n            return Boolean(d.children) || Boolean(d._children);\n          }).attr(\"class\", \"as-text\").attr(\"dx\", function (d) {\n            return d.bbox.x + d.bbox.width + attrs.nodeGutter.x;\n          }).attr(\"dy\", attrs.childrenIndicatorRadius + 3).text(function (d) {\n            return max([(d.children || {}).length, (d._children || {}).length]);\n          }); // merge  node groups and style it\n\n          nodes = enteredNodes.merge(nodes); // force simulation\n\n          force.simulation.nodes(nodesArr).on(\"tick\", ticked); // links simulation\n\n          force.simulation.force(\"link\").links(links).id(function (d) {\n            return d.id;\n          }).distance(attrs.distance * 2).strength(2);\n        } // ####################################### EVENT HANDLERS  ########################\n        // zoom handler\n        // function zoomed() {\n        //   // get transform event\n        //   let transform = event.transform\n        //   attrs.lastTransform = transform\n        //\n        //   // apply transform event props to the wrapper\n        //   chart.attr(\"transform\", transform)\n        //\n        //   svg.selectAll(\".node\").attr(\"transform\", (d) => `translate(${d.x},${d.y}) scale(${1 / (attrs.lastTransform ? attrs.lastTransform.k : 1)})`)\n        //   svg.selectAll(\".link\").attr(\"stroke-width\", attrs.lineStrokeWidth / (attrs.lastTransform ? attrs.lastTransform.k : 1))\n        // }\n        // tick handler\n\n\n        function ticked() {\n          var fakeBorderWidth = attrs.fakeBorderWidth;\n\n          var maxXValueAvailable = function maxXValueAvailable(value) {\n            return Math.max(Math.min(calc.chartWidth - fakeBorderWidth, value), fakeBorderWidth);\n          };\n\n          var maxYValueAvailable = function maxYValueAvailable(value) {\n            return Math.max(Math.min(calc.chartHeight - fakeBorderWidth, value), fakeBorderWidth);\n          }; // set links position\n\n\n          links.attr(\"x1\", function (d) {\n            return maxXValueAvailable(d.source.x);\n          }).attr(\"y1\", function (d) {\n            return maxYValueAvailable(d.source.y);\n          }).attr(\"x2\", function (d) {\n            return maxXValueAvailable(d.target.x);\n          }).attr(\"y2\", function (d) {\n            return maxYValueAvailable(d.target.y);\n          }); // set nodes position\n\n          svg.selectAll(\".node\").attr(\"transform\", function (d) {\n            return \"translate(\".concat(maxXValueAvailable(d.x), \",\").concat(maxYValueAvailable(d.y), \")\");\n          });\n        } // handler drag start event\n\n\n        function dragstarted() {\n          // disable node fixing\n          nodes.each(function (d) {\n            d.fx = null;\n            d.fy = null;\n          });\n        } // handle dragging event\n\n\n        function dragged(d) {\n          // make dragged node fixed\n          d.fx = event.x;\n          d.fy = event.y;\n        } // -------------------- handle drag end event ---------------\n\n\n        function dragended() {// we are doing nothing, here , aren't we?\n        } // -------------------------- node mouse hover handler ---------------\n\n\n        function nodeMouseEnter(d) {\n          // get links\n          var _links = _hierarchy.root.links(); // get hovered node connected links\n\n\n          var connectedLinks = _links.filter(function (l) {\n            return l.source.id === d.id || l.target.id === d.id;\n          }); // get hovered node linked nodes\n\n\n          var linkedNodes = connectedLinks.map(function (s) {\n            return s.source.id;\n          }).concat(connectedLinks.map(function (c) {\n            return c.target.id;\n          })); // reduce all other nodes opacity\n\n          nodesWrapper.selectAll(\".node\").filter(function (n) {\n            return linkedNodes.indexOf(n.id) === -1;\n          }).attr(\"opacity\", attrs.hoverOpacity); // reduce all other links opacity\n\n          linksWrapper.selectAll(\".link\").attr(\"opacity\", attrs.hoverOpacity); // highlight hovered nodes connections\n\n          linksWrapper.selectAll(\".link\").filter(function (l) {\n            return l.source.id === d.id || l.target.id === d.id;\n          }).attr(\"opacity\", 1);\n        } // --------------- handle mouseleave event ---------------\n\n\n        function nodeMouseLeave() {\n          // return things back to normal\n          nodesWrapper.selectAll(\".node\").attr(\"opacity\", 1);\n          linksWrapper.selectAll(\".link\").attr(\"opacity\", 1);\n        } // --------------- handle node click event ---------------\n\n\n        function nodeClick(d) {\n          // free fixed nodes\n          nodes.each(function (di) {\n            di.fx = null;\n            di.fy = null;\n          }); // collapse or expand node\n\n          if (d.children) {\n            _collapse(d);\n          } else if (d._children) {\n            _expand(d);\n          } else {// nothing is to collapse or expand\n          }\n\n          freeNodes();\n        } // #########################################  UTIL FUNCS ##################################\n\n\n        updateData = function updateData() {\n          main.run();\n        };\n\n        _collapse = function collapse(d) {\n          var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (d.children) {\n            if (deep) {\n              d.children.forEach(function (e) {\n                return _collapse(e, true);\n              });\n            }\n\n            d._children = d.children;\n            d.children = null;\n          }\n\n          update(d);\n          force.simulation.restart();\n          force.simulation.alphaTarget(0.15);\n        };\n\n        _expand = function expand(d) {\n          var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (d._children) {\n            if (deep) {\n              d._children.forEach(function (e) {\n                return _expand(e, true);\n              });\n            }\n\n            d.children = d._children;\n            d._children = null;\n          }\n\n          update(d);\n          force.simulation.restart();\n          force.simulation.alphaTarget(0.15);\n        }; // function slowDownNodes() {\n        //   force.simulation.alphaTarget(0.05)\n        // }\n        // function speedUpNodes() {\n        //   force.simulation.alphaTarget(0.45)\n        // }\n\n\n        function freeNodes() {\n          selectAll(\".node\").each(function (n) {\n            n.fx = null;\n            n.fy = null;\n          });\n        }\n\n        function projectCircle(value, radius) {\n          var r = radius || 0;\n          var corner = value * 2 * Math.PI;\n          return [Math.sin(corner) * r, -Math.cos(corner) * r];\n        } // recursively loop on children and extract nodes as an array\n\n\n        function flatten(root, clustered) {\n          var nodesArray = [];\n          var i = 0;\n\n          function recurse(node, depth) {\n            if (node.children) {\n              node.children.forEach(function (child) {\n                recurse(child, depth + 1);\n              });\n            }\n\n            if (!node.id) {\n              node.id = ++i;\n            } else {\n              ++i;\n            }\n\n            node.depth = depth;\n\n            if (clustered) {\n              if (!node.cluster) {\n                // if cluster coordinates are not set, set it\n                node.cluster = {\n                  x: node.x,\n                  y: node.y\n                };\n              }\n            }\n\n            nodesArray.push(node);\n          }\n\n          recurse(root, 1);\n          return nodesArray;\n        }\n\n        function debug() {\n          if (attrs.isDebug) {\n            // stringify func\n            var stringified = String(scope); // parse variable names\n\n            var groupVariables = stringified // match var x-xx= {}\n            .match(/var\\s+([\\w])+\\s*=\\s*{\\s*}/gi) // match xxx\n            .map(function (d) {\n              return d.match(/\\s+\\w*/gi).filter(function (s) {\n                return s.trim();\n              });\n            }) // get xxx\n            .map(function (v) {\n              return v[0].trim();\n            }); // assign local variables to the scope\n\n            groupVariables.forEach(function (v) {\n              main[\"P_\".concat(v)] = eval(v);\n            });\n          }\n        }\n\n        debug();\n      });\n    }; // ----------- PROTOTYEPE FUNCTIONS  ----------------------\n\n\n    function patternify(node, _params) {\n      var selector = _params.selector;\n      var elementTag = _params.tag;\n\n      var _data = _params.data || [selector]; // pattern in action\n\n\n      var _selection = node.selectAll(\".\".concat(selector)).data(_data);\n\n      _selection.exit().remove();\n\n      _selection = _selection.enter().append(elementTag).merge(_selection);\n\n      _selection.attr(\"class\", selector);\n\n      return _selection;\n    } // custom radial layout\n\n\n    function radial() {\n      return function (root) {\n        recurse(root, 0, 1);\n\n        function recurse(node, min, _max) {\n          node.proportion = (_max + min) / 2;\n\n          if (!node.x) {\n            // if node has parent, match entered node positions to it's parent\n            if (node.parent) {\n              node.x = node.parent.x;\n            } else {\n              node.x = 0;\n            }\n          } // if node had parent, match entered node positions to it's parent\n\n\n          if (!node.y) {\n            if (node.parent) {\n              node.y = node.parent.y;\n            } else {\n              node.y = 0;\n            }\n          } // recursively do the same for children\n\n\n          if (node.children) {\n            var offset = (_max - min) / node.children.length;\n            node.children.forEach(function (child, i) {\n              var newMin = min + offset * i;\n              var newMax = newMin + offset;\n              recurse(child, newMin, newMax);\n            });\n          }\n        }\n      };\n    } // https://github.com/bumbeishvili/d3js-boilerplates#orderby\n\n\n    Array.prototype.orderBy = function (func) {\n      this.sort(function (_a, _b) {\n        var a = func(_a);\n        var b = func(_b);\n\n        if (typeof a === \"string\" || a instanceof String) {\n          return a.localeCompare(b);\n        }\n\n        return a - b;\n      });\n      return this;\n    }; // ##########################  BOILEPLATE STUFF ################\n    // dinamic keys functions\n\n\n    Object.keys(attrs).forEach(function (key) {\n      // Attach variables to main function\n      return main[key] = function (_) {\n        var string = \"attrs['\".concat(key, \"'] = _\");\n\n        if (!arguments.length) {\n          return eval(\" attrs['\".concat(key, \"'];\"));\n        }\n\n        eval(string);\n        return main;\n      };\n    }); // set attrs as property\n\n    main.attrs = attrs; // debugging visuals\n\n    main.debug = function (isDebug) {\n      attrs.isDebug = isDebug;\n\n      if (isDebug) {\n        if (!window.charts) {\n          window.charts = [];\n        }\n\n        window.charts.push(main);\n      }\n\n      return main;\n    }; // exposed update functions\n\n\n    main.data = function (value) {\n      if (!arguments.length) {\n        return attrs.data;\n      }\n\n      attrs.data = value;\n\n      if (typeof updateData === \"function\") {\n        updateData();\n      }\n\n      return main;\n    }; // run  visual\n\n\n    main.run = function () {\n      selectAll(attrs.container).call(main);\n      return main;\n    };\n\n    main.filter = function (filterParams) {\n      if (!arguments.length) {\n        return attrs.filterParams;\n      }\n\n      attrs.filterParams = filterParams;\n\n      if (typeof filter === \"function\") {\n        filter();\n      }\n\n      return main;\n    };\n\n    main.reset = function () {\n      _hierarchy.root.children.forEach(function (e) {\n        return _collapse(e, true);\n      });\n\n      main.run();\n      return main;\n    };\n\n    return main;\n  }; // initialization\n\n\n  $orgChartContainer.each(function (i, container) {\n    var $container = $(container);\n    var width = $container.width();\n    var height = width / (16 / 9);\n    json($container.data(\"url\")).then(function (data) {\n      // Make a fake previous node if the data entry is not hierarchical\n      if (data instanceof Array) {\n        fake = true;\n        dataDepicted = {\n          name: null,\n          children: data\n        };\n      } else {\n        dataDepicted = data;\n      }\n\n      orgchart = renderChartCollapsibleNetwork().svgHeight(height).svgWidth(width).fakeRoot(fake).container(\"#\".concat(container.id)).data({\n        root: dataDepicted\n      }).debug(true).run();\n    });\n  }); // reset\n\n  $btnReset.click(function () {\n    orgchart.reset();\n  });\n};\n\n$(function () {\n  renderOrgCharts();\n  $(document).on(\"change.zf.tabs\", function () {\n    renderOrgCharts();\n  });\n});","map":{"version":3,"mappings":"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","names":["select","selectAll","event","max","hierarchy","forceManyBody","forceCollide","forceCenter","forceX","forceY","forceSimulation","forceLink","drag","json","renderOrgCharts","$orgChartContainer","$","$btnReset","dataDepicted","fake","orgchart","renderChartCollapsibleNetwork","params","attrs","id","Math","floor","random","svgWidth","svgHeight","marginTop","marginBottom","marginRight","marginLeft","container","distance","hiddenChildLevel","hoverOpacity","maxTextDisplayZoomLevel","lineStrokeWidth","fakeRoot","nodeGutter","x","y","childrenIndicatorRadius","fakeBorderWidth","data","attrKeys","Object","keys","forEach","key","updateData","collapse","expand","filter","_hierarchy","main","_selection","each","scope","calc","chartLeftMargin","chartTopMargin","chartWidth","chartHeight","root","behaviors","on","dragstarted","dragged","dragended","layouts","radial","force","link","d","charge","strength","center","collide","radius","base","bbox","width","height","diagonal","sqrt","pow","fakeRadius","children","depth","parent","projectCircle","proportion","simulation","arr","flatten","hidden","_children","svg","patternify","tag","selector","attr","chart","linksWrapper","nodesWrapper","links","nodes","update","clickedNode","removeClass","addClass","nodesArr","orderBy","linksArr","source","target","exit","remove","enter","append","merge","enteredNodes","nodeClick","nodeMouseEnter","nodeMouseLeave","call","text","name","getBBox","Boolean","length","ticked","maxXValueAvailable","value","min","maxYValueAvailable","fx","fy","_links","connectedLinks","l","linkedNodes","map","s","concat","c","n","indexOf","di","freeNodes","run","deep","e","restart","alphaTarget","r","corner","PI","sin","cos","clustered","nodesArray","i","recurse","node","child","cluster","push","debug","isDebug","stringified","String","groupVariables","match","trim","v","eval","_params","elementTag","_data","_max","offset","newMin","newMax","Array","prototype","func","sort","_a","_b","a","b","localeCompare","_","string","arguments","window","charts","filterParams","reset","$container","then","click","document"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-assemblies/app/packs/src/decidim/assemblies/orgchart.js"],"sourcesContent":["/* eslint-disable require-jsdoc, max-lines, no-return-assign, func-style, id-length, no-plusplus, no-use-before-define, no-negated-condition, init-declarations, no-invalid-this, no-param-reassign, no-ternary, multiline-ternary, no-nested-ternary, no-eval, no-extend-native, prefer-reflect */\n/* eslint dot-location: [\"error\", \"property\"], no-negated-condition: \"error\" */\n/* eslint no-unused-expressions: [\"error\", { \"allowTernary\": true }] */\n/* eslint no-unused-vars: 0 */\n\nimport { select, selectAll, event } from \"d3-selection\";\nimport { max } from \"d3-array\";\nimport { hierarchy } from \"d3-hierarchy\";\nimport { forceManyBody, forceCollide, forceCenter, forceX, forceY, forceSimulation, forceLink } from \"d3-force\";\nimport { drag } from \"d3-drag\";\nimport { json } from \"d3-fetch\";\n\n// lib\nconst renderOrgCharts = () => {\n  const $orgChartContainer = $(\".js-orgchart\")\n  const $btnReset = $(\".js-reset-orgchart\")\n\n  let dataDepicted = null\n  let fake = false\n  let orgchart = {}\n\n  // lib - https://bl.ocks.org/bumbeishvili/b96ba47ea21d14dfce6ebb859b002d3a\n  const renderChartCollapsibleNetwork = (params) => {\n\n    // exposed variables\n    let attrs = {\n      id: `id${Math.floor(Math.random() * 1000000)}`,\n      svgWidth: 960,\n      svgHeight: 600,\n      marginTop: 0,\n      marginBottom: 5,\n      marginRight: 0,\n      marginLeft: 30,\n      container: \"body\",\n      distance: 150,\n      hiddenChildLevel: 1,\n      hoverOpacity: 0.2,\n      maxTextDisplayZoomLevel: 1,\n      lineStrokeWidth: 1.5,\n      fakeRoot: false,\n      nodeGutter: { x: 16, y: 8 },\n      childrenIndicatorRadius: 15,\n      fakeBorderWidth: 32,\n      data: null\n    }\n\n    /* ############### IF EXISTS OVERWRITE ATTRIBUTES FROM PASSED PARAM  #######  */\n\n    let attrKeys = Object.keys(attrs)\n    attrKeys.forEach(function (key) {\n      if (params && params[key]) {\n        attrs[key] = params[key]\n      }\n    })\n\n    // innerFunctions which will update visuals\n    let updateData\n    let collapse, expand\n    let filter\n    let _hierarchy = {}\n\n    // main chart object\n    let main = function (_selection) {\n      _selection.each(function scope() {\n\n        // calculated properties\n        let calc = {}\n        calc.chartLeftMargin = attrs.marginLeft\n        calc.chartTopMargin = attrs.marginTop\n        calc.chartWidth = attrs.svgWidth - attrs.marginRight - calc.chartLeftMargin\n        calc.chartHeight = attrs.svgHeight - attrs.marginBottom - calc.chartTopMargin\n\n        // ########################## HIERARCHY STUFF  #########################\n        _hierarchy.root = hierarchy(attrs.data.root)\n\n        // ###########################   BEHAVIORS #########################\n        let behaviors = {}\n        // behaviors.zoom = zoom().scaleExtent([0.75, 100, 8]).on(\"zoom\", zoomed)\n        behaviors.drag = drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)\n\n        // ###########################   LAYOUTS #########################\n        let layouts = {}\n\n        // custom radial layout\n        layouts.radial = radial()\n\n        // ###########################   FORCE STUFF #########################\n        let force = {}\n        force.link = forceLink().id((d) => d.id)\n        force.charge = forceManyBody().strength(-240)\n        force.center = forceCenter(calc.chartWidth / 2, calc.chartHeight / 2)\n\n        // prevent collide\n        force.collide = forceCollide().radius((d) => {\n          // Creates an invented radius based on element measures: diagonal = 2 * radius = sqrt(width^2, height^2)\n          let base = (d.bbox || {}).width + (attrs.nodeGutter.x * 2)\n          let height = (d.bbox || {}).height + (attrs.nodeGutter.y * 2)\n          let diagonal = Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2))\n          let fakeRadius = (diagonal / 2)\n\n          // return max([attrs.nodeDistance * 3, fakeRadius])\n          return fakeRadius * 1.5\n        })\n\n        // manually set x positions (which is calculated using custom radial layout)\n        force.x = forceX()\n          .strength(0.5)\n          .x(function (d) {\n\n            // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n            if (!d.children && d.depth > 2) {\n              if (d.parent) {\n                d = d.parent\n              }\n            }\n\n            // custom circle projection -  radius will be -  (d.depth - 1) * 150\n            return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[0]\n          })\n\n        // manually set y positions (which is calculated using cluster)\n        force.y = forceY()\n          .strength(0.5)\n          .y(function (d) {\n\n            // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n            if (!d.children && d.depth > 2) {\n              if (d.parent) {\n                d = d.parent\n              }\n            }\n\n            // custom circle projection -  radius will be -  (d.depth - 1) * 150\n            return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[1]\n          })\n\n        // ---------------------------------  INITIALISE FORCE SIMULATION ----------------------------\n\n        // get based on top parameter simulation\n        force.simulation = forceSimulation()\n          .force(\"link\", force.link)\n          .force(\"charge\", force.charge)\n          .force(\"center\", force.center)\n          .force(\"collide\", force.collide)\n          .force(\"x\", force.x)\n          .force(\"y\", force.y)\n\n        // ###########################   HIERARCHY STUFF #########################\n\n        // flatten root\n        let arr = flatten(_hierarchy.root)\n\n        // hide members based on their depth\n        arr.forEach((d) => {\n          // Hide fake root node\n          if ((attrs.fakeRoot) && (d.depth === 1)) {\n            d.hidden = true\n          }\n\n          if (d.depth > attrs.hiddenChildLevel) {\n            d._children = d.children\n            d.children = null\n          }\n        })\n\n        // ####################################  DRAWINGS #######################\n\n        // drawing containers\n        let container = select(this)\n\n        // add svg\n        let svg = patternify(container, { tag: \"svg\", selector: \"svg-chart-container\" })\n          .attr(\"width\", attrs.svgWidth)\n          .attr(\"height\", attrs.svgHeight)\n          // .call(behaviors.zoom)\n\n        // add container g element\n        let chart = patternify(svg, { tag: \"g\", selector: \"chart\" })\n          .attr(\"transform\", `translate(${calc.chartLeftMargin},${calc.chartTopMargin})`)\n\n        // ################################   Chart Content Drawing ##################################\n\n        // link wrapper\n        let linksWrapper = patternify(chart, { tag: \"g\", selector: \"links-wrapper\" })\n\n        // node wrapper\n        let nodesWrapper = patternify(chart, { tag: \"g\", selector: \"nodes-wrapper\" })\n        let links, nodes\n\n        // reusable function which updates visual based on data change\n        update()\n\n        // update visual based on data change\n        function update(clickedNode) {\n\n          // Show/hide reset button\n          (clickedNode) ? $btnReset.removeClass(\"invisible\") : $btnReset.addClass(\"invisible\")\n\n          // set xy and proportion properties with custom radial layout\n          layouts.radial(_hierarchy.root)\n\n          // nodes and links array\n          let nodesArr = flatten(_hierarchy.root, true)\n            .orderBy((d) => d.depth)\n            .filter((d) => !d.hidden)\n\n          let linksArr = _hierarchy.root.links()\n            .filter((d) => !d.source.hidden)\n            .filter((d) => !d.target.hidden)\n\n          // make new nodes to appear near the parents\n          nodesArr.forEach(function (d) {\n            if (clickedNode && clickedNode.id === (d.parent && d.parent.id)) {\n              d.x = d.parent.x\n              d.y = d.parent.y\n            }\n          })\n\n          // links\n          links = linksWrapper.selectAll(\".link\")\n            .data(linksArr, (d) => d.target.id)\n          links.exit().remove()\n\n          links = links.enter()\n            .append(\"line\")\n            .attr(\"class\", \"link\")\n            .merge(links)\n\n          // node groups\n          nodes = nodesWrapper.selectAll(\".node\")\n            .data(nodesArr, (d) => d.id)\n          nodes.exit().remove()\n\n          let enteredNodes = nodes.enter()\n            .append(\"g\")\n            .attr(\"class\", \"node\")\n\n          // bind event handlers\n          enteredNodes\n            .on(\"click\", nodeClick)\n            .on(\"mouseenter\", nodeMouseEnter)\n            .on(\"mouseleave\", nodeMouseLeave)\n            .call(behaviors.drag)\n\n          // channels grandchildren\n          enteredNodes.append(\"rect\")\n            .attr(\"class\", \"as-card\")\n            .attr(\"rx\", 4)\n            .attr(\"ry\", 4)\n\n          enteredNodes.append(\"text\")\n            .attr(\"class\", \"as-text\")\n            .text((d) => d.data.name)\n\n          enteredNodes.selectAll(\"text\").each(function(d) {\n            d.bbox = this.getBBox()\n          })\n\n          enteredNodes.selectAll(\"rect\")\n            .attr(\"x\", (d) => d.bbox.x - attrs.nodeGutter.x)\n            .attr(\"y\", (d) => d.bbox.y - attrs.nodeGutter.y)\n            .attr(\"width\", (d) => d.bbox.width + (2 * attrs.nodeGutter.x))\n            .attr(\"height\", (d) => d.bbox.height + (2 * attrs.nodeGutter.y))\n\n          // append circle & text only when there are children\n          enteredNodes\n            .append(\"circle\")\n            .filter((d) => Boolean(d.children) || Boolean(d._children))\n            .attr(\"class\", \"as-circle\")\n            .attr(\"r\", attrs.childrenIndicatorRadius)\n            .attr(\"cx\", (d) => d.bbox.x + d.bbox.width + attrs.nodeGutter.x)\n            .attr(\"cy\", (d) => d.bbox.y + d.bbox.height + attrs.nodeGutter.y)\n\n          enteredNodes\n            .append(\"text\")\n            .filter((d) => Boolean(d.children) || Boolean(d._children))\n            .attr(\"class\", \"as-text\")\n            .attr(\"dx\", (d) => d.bbox.x + d.bbox.width + attrs.nodeGutter.x)\n            .attr(\"dy\", attrs.childrenIndicatorRadius + 3)\n            .text((d) => max([(d.children || {}).length, (d._children || {}).length]))\n\n          // merge  node groups and style it\n          nodes = enteredNodes.merge(nodes)\n\n          // force simulation\n          force.simulation.nodes(nodesArr).on(\"tick\", ticked)\n\n          // links simulation\n          force.simulation.force(\"link\").links(links).id((d) => d.id).distance(attrs.distance * 2).strength(2)\n        }\n\n        // ####################################### EVENT HANDLERS  ########################\n\n        // zoom handler\n        // function zoomed() {\n        //   // get transform event\n        //   let transform = event.transform\n        //   attrs.lastTransform = transform\n        //\n        //   // apply transform event props to the wrapper\n        //   chart.attr(\"transform\", transform)\n        //\n        //   svg.selectAll(\".node\").attr(\"transform\", (d) => `translate(${d.x},${d.y}) scale(${1 / (attrs.lastTransform ? attrs.lastTransform.k : 1)})`)\n        //   svg.selectAll(\".link\").attr(\"stroke-width\", attrs.lineStrokeWidth / (attrs.lastTransform ? attrs.lastTransform.k : 1))\n        // }\n\n        // tick handler\n        function ticked() {\n          const fakeBorderWidth = attrs.fakeBorderWidth\n          const maxXValueAvailable = (value) => Math.max(Math.min(calc.chartWidth - fakeBorderWidth, value), fakeBorderWidth)\n          const maxYValueAvailable = (value) => Math.max(Math.min(calc.chartHeight - fakeBorderWidth, value), fakeBorderWidth)\n          // set links position\n          links\n            .attr(\"x1\", (d) => maxXValueAvailable(d.source.x))\n            .attr(\"y1\", (d) => maxYValueAvailable(d.source.y))\n            .attr(\"x2\", (d) => maxXValueAvailable(d.target.x))\n            .attr(\"y2\", (d) => maxYValueAvailable(d.target.y))\n\n          // set nodes position\n          svg.selectAll(\".node\")\n            .attr(\"transform\", (d) => `translate(${maxXValueAvailable(d.x)},${maxYValueAvailable(d.y)})`)\n        }\n\n        // handler drag start event\n        function dragstarted() {\n          // disable node fixing\n          nodes.each((d) => {\n            d.fx = null\n            d.fy = null\n          })\n        }\n\n        // handle dragging event\n        function dragged(d) {\n          // make dragged node fixed\n          d.fx = event.x\n          d.fy = event.y\n        }\n\n        // -------------------- handle drag end event ---------------\n        function dragended() {\n          // we are doing nothing, here , aren't we?\n        }\n\n        // -------------------------- node mouse hover handler ---------------\n        function nodeMouseEnter(d) {\n          // get links\n          let _links = _hierarchy.root.links()\n\n          // get hovered node connected links\n          let connectedLinks = _links.filter((l) => l.source.id === d.id || l.target.id === d.id)\n\n          // get hovered node linked nodes\n          let linkedNodes = connectedLinks.map((s) => s.source.id).concat(connectedLinks.map((c) => c.target.id))\n\n          // reduce all other nodes opacity\n          nodesWrapper.selectAll(\".node\")\n            .filter((n) => linkedNodes.indexOf(n.id) === -1)\n            .attr(\"opacity\", attrs.hoverOpacity)\n\n          // reduce all other links opacity\n          linksWrapper.selectAll(\".link\")\n            .attr(\"opacity\", attrs.hoverOpacity)\n\n          // highlight hovered nodes connections\n          linksWrapper.selectAll(\".link\")\n            .filter((l) => l.source.id === d.id || l.target.id === d.id)\n            .attr(\"opacity\", 1)\n        }\n\n        // --------------- handle mouseleave event ---------------\n        function nodeMouseLeave() {\n          // return things back to normal\n          nodesWrapper.selectAll(\".node\")\n            .attr(\"opacity\", 1)\n          linksWrapper.selectAll(\".link\")\n            .attr(\"opacity\", 1)\n        }\n\n        // --------------- handle node click event ---------------\n        function nodeClick(d) {\n          // free fixed nodes\n          nodes.each((di) => {\n            di.fx = null\n            di.fy = null\n          })\n\n          // collapse or expand node\n          if (d.children) {\n            collapse(d)\n          } else if (d._children) {\n            expand(d)\n          } else {\n          // nothing is to collapse or expand\n          }\n\n          freeNodes()\n        }\n\n        // #########################################  UTIL FUNCS ##################################\n        updateData = function () {\n          main.run()\n        }\n\n        collapse = function (d, deep = false) {\n          if (d.children) {\n            if (deep) {\n              d.children.forEach((e) => collapse(e, true))\n            }\n\n            d._children = d.children\n            d.children = null\n          }\n\n          update(d)\n          force.simulation.restart()\n          force.simulation.alphaTarget(0.15)\n        }\n\n        expand = function (d, deep = false) {\n          if (d._children) {\n            if (deep) {\n              d._children.forEach((e) => expand(e, true))\n            }\n\n            d.children = d._children\n            d._children = null\n          }\n\n          update(d)\n          force.simulation.restart()\n          force.simulation.alphaTarget(0.15)\n        }\n\n        // function slowDownNodes() {\n        //   force.simulation.alphaTarget(0.05)\n        // }\n\n        // function speedUpNodes() {\n        //   force.simulation.alphaTarget(0.45)\n        // }\n\n        function freeNodes() {\n          selectAll(\".node\").each((n) => {\n            n.fx = null\n            n.fy = null\n          })\n        }\n\n        function projectCircle(value, radius) {\n          let r = radius || 0\n          let corner = value * 2 * Math.PI\n          return [Math.sin(corner) * r, -Math.cos(corner) * r]\n        }\n\n        // recursively loop on children and extract nodes as an array\n        function flatten(root, clustered) {\n          let nodesArray = []\n          let i = 0\n          function recurse(node, depth) {\n            if (node.children) {\n              node.children.forEach(function (child) {\n                recurse(child, depth + 1)\n              })\n            }\n\n            if (!node.id) {\n              node.id = ++i\n            } else {\n              ++i\n            }\n\n            node.depth = depth\n            if (clustered) {\n              if (!node.cluster) {\n              // if cluster coordinates are not set, set it\n                node.cluster = { x: node.x, y: node.y }\n              }\n            }\n            nodesArray.push(node)\n          }\n          recurse(root, 1)\n          return nodesArray\n        }\n\n        function debug() {\n          if (attrs.isDebug) {\n          // stringify func\n            let stringified = String(scope)\n\n            // parse variable names\n            let groupVariables = stringified\n              // match var x-xx= {}\n              .match(/var\\s+([\\w])+\\s*=\\s*{\\s*}/gi)\n              // match xxx\n              .map((d) => d.match(/\\s+\\w*/gi).filter((s) => s.trim()))\n              // get xxx\n              .map((v) => v[0].trim())\n\n            // assign local variables to the scope\n            groupVariables.forEach((v) => {\n              main[`P_${v}`] = eval(v)\n            })\n          }\n        }\n\n        debug()\n\n      })\n    }\n\n    // ----------- PROTOTYEPE FUNCTIONS  ----------------------\n    function patternify(node, _params) {\n      let selector = _params.selector\n      let elementTag = _params.tag\n      let _data = _params.data || [selector]\n\n      // pattern in action\n      let _selection = node.selectAll(`.${selector}`).data(_data)\n      _selection.exit().remove()\n      _selection = _selection.enter().append(elementTag).merge(_selection)\n      _selection.attr(\"class\", selector)\n\n      return _selection\n    }\n\n    // custom radial layout\n    function radial() {\n      return function (root) {\n\n        recurse(root, 0, 1)\n\n        function recurse(node, min, _max) {\n          node.proportion = (_max + min) / 2\n          if (!node.x) {\n\n            // if node has parent, match entered node positions to it's parent\n            if (node.parent) {\n              node.x = node.parent.x\n            } else {\n              node.x = 0\n            }\n          }\n\n          // if node had parent, match entered node positions to it's parent\n          if (!node.y) {\n            if (node.parent) {\n              node.y = node.parent.y\n            } else {\n              node.y = 0\n            }\n          }\n\n          // recursively do the same for children\n          if (node.children) {\n            let offset = (_max - min) / node.children.length\n            node.children.forEach(function (child, i) {\n              let newMin = min + (offset * i)\n              let newMax = newMin + offset\n\n              recurse(child, newMin, newMax)\n            })\n          }\n        }\n      }\n    }\n\n    // https://github.com/bumbeishvili/d3js-boilerplates#orderby\n    Array.prototype.orderBy = function (func) {\n      this.sort((_a, _b) => {\n        let a = func(_a)\n        let b = func(_b)\n        if (typeof a === \"string\" || a instanceof String) {\n          return a.localeCompare(b)\n        }\n        return a - b\n      })\n\n      return this\n    }\n\n    // ##########################  BOILEPLATE STUFF ################\n\n    // dinamic keys functions\n    Object.keys(attrs).forEach((key) => {\n      // Attach variables to main function\n      return main[key] = function (_) {\n        let string = `attrs['${key}'] = _`\n\n        if (!arguments.length) {\n          return eval(` attrs['${key}'];`)\n        }\n\n        eval(string)\n\n        return main\n      }\n    })\n\n    // set attrs as property\n    main.attrs = attrs\n\n    // debugging visuals\n    main.debug = function (isDebug) {\n      attrs.isDebug = isDebug\n      if (isDebug) {\n        if (!window.charts) {\n          window.charts = []\n        }\n        window.charts.push(main)\n      }\n      return main\n    }\n\n    // exposed update functions\n    main.data = function (value) {\n      if (!arguments.length) {\n        return attrs.data\n      }\n\n      attrs.data = value\n      if (typeof updateData === \"function\") {\n        updateData()\n      }\n      return main\n    }\n\n    // run  visual\n    main.run = function () {\n      selectAll(attrs.container)\n        .call(main)\n      return main\n    }\n\n    main.filter = function (filterParams) {\n      if (!arguments.length) {\n        return attrs.filterParams\n      }\n\n      attrs.filterParams = filterParams\n      if (typeof filter === \"function\") {\n        filter()\n      }\n      return main\n    }\n\n    main.reset = function () {\n\n      _hierarchy.root.children.forEach((e) => collapse(e, true))\n      main.run()\n\n      return main\n    }\n\n    return main\n  }\n\n  // initialization\n  $orgChartContainer.each((i, container) => {\n\n    let $container = $(container)\n    let width = $container.width()\n    let height = width / (16 / 9)\n\n    json($container.data(\"url\")).then((data) => {\n      // Make a fake previous node if the data entry is not hierarchical\n      if (data instanceof Array) {\n        fake = true\n        dataDepicted = {\n          name: null,\n          children: data\n        }\n      } else {\n        dataDepicted = data\n      }\n\n      orgchart = renderChartCollapsibleNetwork()\n        .svgHeight(height)\n        .svgWidth(width)\n        .fakeRoot(fake)\n        .container(`#${container.id}`)\n        .data({\n          root: dataDepicted\n        })\n        .debug(true)\n        .run()\n    })\n  })\n\n  // reset\n  $btnReset.click(function() {\n    orgchart.reset()\n  })\n}\n\n$(() => {\n  renderOrgCharts()\n  $(document).on(\"change.zf.tabs\", () => {\n    renderOrgCharts()\n  });\n})\n"]},"metadata":{},"sourceType":"module"}