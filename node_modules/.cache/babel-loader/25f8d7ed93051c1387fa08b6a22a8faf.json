{"ast":null,"code":"$(function () {\n  var $form = $(\".form.newsletter_deliver\");\n\n  if ($form.length > 0) {\n    var $sendNewsletterToAllUsers = $form.find(\"#send_newsletter_to_all_users\");\n    var $sendNewsletterToFollowers = $form.find(\"#send_newsletter_to_followers\");\n    var $sendNewsletterToParticipants = $form.find(\"#send_newsletter_to_participants\");\n    var $participatorySpacesForSelect = $form.find(\"#participatory_spaces_for_select\");\n    var checkSelectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n    var checkSelectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n    $sendNewsletterToAllUsers.on(\"change\", function (event) {\n      var checked = event.target.checked;\n\n      if (checked) {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.hide();\n      } else {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      }\n    });\n    $sendNewsletterToFollowers.on(\"change\", function (event) {\n      var checked = event.target.checked;\n      var selectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterParticipants) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    });\n    $sendNewsletterToParticipants.on(\"change\", function (event) {\n      var checked = event.target.checked;\n      var selectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterFollowers) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    });\n\n    if (checkSelectiveNewsletterFollowers || checkSelectiveNewsletterParticipants) {\n      $participatorySpacesForSelect.show();\n    } else {\n      $participatorySpacesForSelect.hide();\n    }\n\n    $(\".form .spaces-block-tag\").each(function (_i, blockTag) {\n      var selectTag = $(blockTag).find(\".chosen-select\");\n      selectTag.change(function () {\n        var optionSelected = selectTag.find(\"option:selected\").val();\n\n        if (optionSelected === \"all\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", true);\n          selectTag.find(\"option[value='all']\").prop(\"selected\", false);\n        } else if (optionSelected === \"\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", false);\n        }\n      });\n    });\n    $form.on(\"change\", function () {\n      var $data = $form.serializeJSON().newsletter;\n      var $url = $form.data(\"recipients-count-newsletter-path\");\n      var $modal = $(\"#recipients_count_spinner\");\n      $modal.removeClass(\"hide\");\n      $.get($url, {\n        data: $data\n      }, function (recipientsCount) {\n        $(\"#recipients_count\").text(recipientsCount);\n      }).always(function () {\n        $modal.addClass(\"hide\");\n      });\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["$","$form","length","$sendNewsletterToAllUsers","find","$sendNewsletterToFollowers","$sendNewsletterToParticipants","$participatorySpacesForSelect","checkSelectiveNewsletterFollowers","prop","checkSelectiveNewsletterParticipants","on","event","checked","target","hide","show","selectiveNewsletterParticipants","selectiveNewsletterFollowers","each","_i","blockTag","selectTag","change","optionSelected","val","not","$data","serializeJSON","newsletter","$url","data","$modal","removeClass","get","recipientsCount","text","always","addClass"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-admin/app/packs/src/decidim/admin/newsletters.js"],"sourcesContent":["$(() => {\n  const $form = $(\".form.newsletter_deliver\");\n\n  if ($form.length > 0) {\n    const $sendNewsletterToAllUsers = $form.find(\"#send_newsletter_to_all_users\");\n    const $sendNewsletterToFollowers = $form.find(\"#send_newsletter_to_followers\");\n    const $sendNewsletterToParticipants = $form.find(\"#send_newsletter_to_participants\");\n    const $participatorySpacesForSelect = $form.find(\"#participatory_spaces_for_select\");\n\n    const checkSelectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n    const checkSelectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n    $sendNewsletterToAllUsers.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      if (checked) {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.hide();\n      } else {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      }\n    })\n\n    $sendNewsletterToFollowers.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      const selectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterParticipants) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    })\n\n    $sendNewsletterToParticipants.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      const selectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterFollowers) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    })\n\n    if (checkSelectiveNewsletterFollowers || checkSelectiveNewsletterParticipants) {\n      $participatorySpacesForSelect.show();\n    } else {\n      $participatorySpacesForSelect.hide();\n    }\n\n    $(\".form .spaces-block-tag\").each(function(_i, blockTag) {\n      const selectTag = $(blockTag).find(\".chosen-select\")\n      selectTag.change(function() {\n        let optionSelected = selectTag.find(\"option:selected\").val()\n        if (optionSelected === \"all\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", true);\n          selectTag.find(\"option[value='all']\").prop(\"selected\", false);\n        } else if (optionSelected === \"\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", false);\n        }\n      });\n    })\n\n    $form.on(\"change\", function() {\n      let $data = $form.serializeJSON().newsletter;\n      let $url = $form.data(\"recipients-count-newsletter-path\");\n      const $modal = $(\"#recipients_count_spinner\");\n      $modal.removeClass(\"hide\");\n      $.get($url, {data: $data}, function(recipientsCount) {\n        $(\"#recipients_count\").text(recipientsCount);\n      }).always(function() {\n        $modal.addClass(\"hide\");\n      });\n    })\n  }\n});\n"]},"metadata":{},"sourceType":"module"}