{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/* eslint-disable require-jsdoc */\n\n\nvar OptionAttachedInputsComponent = /*#__PURE__*/function () {\n  function OptionAttachedInputsComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, OptionAttachedInputsComponent);\n\n    this.wrapperField = options.wrapperField;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n\n    this._bindEvent();\n\n    this._run();\n  }\n\n  _createClass(OptionAttachedInputsComponent, [{\n    key: \"_run\",\n    value: function _run() {\n      var _this = this;\n\n      this.controllerSelector.each(function (idx, el) {\n        var $field = $(el);\n        var enabled = $field.is(\":checked\");\n        $field.parents(\"div.collection-input\").find(_this.dependentInputSelector).prop(\"disabled\", !enabled);\n      });\n    }\n  }, {\n    key: \"_bindEvent\",\n    value: function _bindEvent() {\n      var _this2 = this;\n\n      this.controllerSelector.on(\"change\", function () {\n        _this2._run();\n      });\n    }\n  }]);\n\n  return OptionAttachedInputsComponent;\n}();\n\nexport default function createOptionAttachedInputs(options) {\n  return new OptionAttachedInputsComponent(options);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;IAEMA,6B;EACJ,yCAA0B;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IAAAC;;IACxB,KAAKC,YAAL,GAAoBF,OAAO,CAACE,YAA5B;IACA,KAAKC,uBAAL,GAA+BH,OAAO,CAACG,uBAAvC;IACA,KAAKC,sBAAL,GAA8BJ,OAAO,CAACI,sBAAtC;IACA,KAAKC,kBAAL,GAA0B,KAAKH,YAAL,CAAkBI,IAAlB,CAAuB,KAAKH,uBAA5B,CAA1B;;IACA,KAAKI,UAAL;;IACA,KAAKC,IAAL;EACD;;;;WAED,gBAAO;MAAA;;MACL,KAAKH,kBAAL,CAAwBI,IAAxB,CAA6B,UAACC,GAAD,EAAMC,EAAN,EAAa;QACxC,IAAMC,MAAM,GAAGC,CAAC,CAACF,EAAD,CAAhB;QACA,IAAMG,OAAO,GAAGF,MAAM,CAACG,EAAPH,CAAU,UAAVA,CAAhB;QAEAA,MAAM,CAACI,OAAPJ,CAAe,sBAAfA,EAAuCN,IAAvCM,CAA4CK,KAAI,CAACb,sBAAjDQ,EAAyEM,IAAzEN,CAA8E,UAA9EA,EAA0F,CAACE,OAA3FF;MAJF;IAMD;;;WAED,sBAAa;MAAA;;MACX,KAAKP,kBAAL,CAAwBc,EAAxB,CAA2B,QAA3B,EAAqC,YAAM;QACzCC,MAAI,CAACZ,IAAL;MADF;IAGD;;;;;;AAGH,eAAe,SAASa,0BAAT,CAAoCrB,OAApC,EAA6C;EAC1D,OAAO,IAAID,6BAAJ,CAAkCC,OAAlC,CAAP;AACD","names":["OptionAttachedInputsComponent","options","_classCallCheck","wrapperField","controllerFieldSelector","dependentInputSelector","controllerSelector","find","_bindEvent","_run","each","idx","el","$field","$","enabled","is","parents","_this","prop","on","_this2","createOptionAttachedInputs"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-forms/app/packs/src/decidim/forms/option_attached_inputs.component.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nclass OptionAttachedInputsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    this.controllerSelector.each((idx, el) => {\n      const $field = $(el);\n      const enabled = $field.is(\":checked\");\n\n      $field.parents(\"div.collection-input\").find(this.dependentInputSelector).prop(\"disabled\", !enabled);\n    });\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createOptionAttachedInputs(options) {\n  return new OptionAttachedInputsComponent(options);\n}\n"]},"metadata":{},"sourceType":"module"}