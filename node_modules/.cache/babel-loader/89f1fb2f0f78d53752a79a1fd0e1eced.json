{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* eslint-disable require-jsdoc */\n\n\nvar History = Quill[\"import\"](\"modules/history\");\nHistory.DEFAULTS = {\n  delay: 1000,\n  maxStack: 100,\n  userOnly: true\n};\n/**\n * Linebreak module brokes quill's default history class.\n * So here we are moving innerHTML to undo and redo stack\n * instead of deltas.\n */\n\nvar HistoryOverride = /*#__PURE__*/function (_History) {\n  _inherits(HistoryOverride, _History);\n\n  var _super = _createSuper(HistoryOverride);\n\n  function HistoryOverride(quill, options) {\n    var _this;\n\n    _classCallCheck(this, HistoryOverride);\n\n    _this = _super.call(this, quill, options);\n    _this.lastRecorded = 0;\n    _this.ignoreChange = false;\n    _this.init = false;\n\n    _this.quill.emitter.on(\"editor-ready\", function () {\n      _this.clear();\n\n      var $input = $(_this.quill.container).siblings('input[type=\"hidden\"]');\n\n      _this.stack.undo.push({\n        content: $input.val() || \"\",\n        index: _this.quill.getLength() - 2\n      });\n\n      _this.lastLength = _this.quill.getLength();\n    });\n    /* eslint-disable max-params */\n\n\n    _this.quill.on(Quill.events.EDITOR_CHANGE, function (eventName, delta, oldDelta, source) {\n      if (!delta) {\n        return;\n      }\n\n      if (!_this.init && eventName === \"selection-change\") {\n        _this.stack.undo[0].index = delta.index;\n      }\n\n      if (eventName !== Quill.events.TEXT_CHANGE || _this.ignoreChange) {\n        return;\n      }\n\n      if (!_this.options.userOnly || source === Quill.sources.USER) {\n        _this.record(delta, oldDelta);\n      }\n    });\n\n    _this.quill.keyboard.addBinding({\n      key: \"Z\",\n      shortKey: true\n    }, _this.undo.bind(_assertThisInitialized(_this)));\n\n    _this.quill.keyboard.addBinding({\n      key: \"Z\",\n      shortKey: true,\n      shiftKey: true\n    }, _this.redo.bind(_assertThisInitialized(_this)));\n\n    if (/Win/i.test(navigator.platform)) {\n      _this.quill.keyboard.addBinding({\n        key: \"Y\",\n        shortKey: true\n      }, _this.redo.bind(_assertThisInitialized(_this)));\n    }\n\n    return _this;\n  }\n  /* eslint-enable max-params */\n\n\n  _createClass(HistoryOverride, [{\n    key: \"change\",\n    value: function change(source, dest) {\n      if (this.stack[source].length === 0) {\n        return;\n      }\n\n      var obj = this.updateStacks(source, dest);\n\n      if (!obj.content) {\n        return;\n      }\n\n      if (!obj.index) {\n        obj.index = 0;\n      }\n\n      this.lastRecorded = 0;\n      this.ignoreChange = true;\n      this.quill.setContents(this.quill.clipboard.convert(obj.content));\n      this.ignoreChange = false;\n      var index = obj.index;\n      this.quill.setSelection(index);\n    }\n  }, {\n    key: \"updateStacks\",\n    value: function updateStacks(source, dest) {\n      if (source === \"undo\") {\n        if (this.stack.undo.length === 1) {\n          return this.stack.undo[0];\n        }\n\n        this.stack[dest].push(this.stack.undo.pop());\n        return this.stack.undo[this.stack.undo.length - 1];\n      }\n\n      var content = this.stack.redo.pop();\n      this.stack.undo.push(content);\n      return content;\n    }\n  }, {\n    key: \"record\",\n    value: function record(changeDelta) {\n      if (changeDelta.ops.length === 0) {\n        return;\n      } else if (!this.init) {\n        this.init = true;\n      }\n\n      this.stack.redo = [];\n      var timestamp = Date.now(); // Should not return after length check, because after linebreak a keypress replaces invisible characters with\n      // visible characters.\n      // For example: <br><br></p> -> [press X] -> <br>X</p>.\n\n      if (Math.abs(this.lastLength === this.quill.getLength()) || this.lastRecorded + this.options.delay > timestamp) {\n        if (this.stack.undo.length > 1) {\n          this.stack.undo.pop();\n        }\n      } else {\n        this.lastLength = this.quill.getLength();\n\n        if (this.lastRecorded + this.options.delay <= timestamp) {\n          this.lastRecorded = timestamp;\n        }\n      }\n\n      this.stack.undo.push({\n        content: this.quill.container.firstChild.innerHTML,\n        index: this.quill.getSelection()\n      });\n    }\n  }, {\n    key: \"transform\",\n    value: function transform() {\n      return;\n    }\n  }]);\n\n  return HistoryOverride;\n}(History);\n\nexport { HistoryOverride as default };","map":{"version":3,"mappings":"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","names":["History","Quill","DEFAULTS","delay","maxStack","userOnly","HistoryOverride","quill","options","_classCallCheck","_this","lastRecorded","ignoreChange","init","emitter","on","clear","$input","$","container","siblings","stack","undo","push","content","val","index","getLength","lastLength","events","EDITOR_CHANGE","eventName","delta","oldDelta","source","TEXT_CHANGE","sources","USER","record","keyboard","addBinding","key","shortKey","bind","shiftKey","redo","test","navigator","platform","dest","length","obj","updateStacks","setContents","clipboard","convert","setSelection","pop","changeDelta","ops","timestamp","Date","now","Math","abs","firstChild","innerHTML","getSelection"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/editor/history_override.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nconst History = Quill.import(\"modules/history\");\nHistory.DEFAULTS = {\n  delay: 1000,\n  maxStack: 100,\n  userOnly: true\n};\n\n/**\n * Linebreak module brokes quill's default history class.\n * So here we are moving innerHTML to undo and redo stack\n * instead of deltas.\n */\nexport default class HistoryOverride extends History {\n  constructor(quill, options) {\n    super(quill, options);\n    this.lastRecorded = 0;\n    this.ignoreChange = false;\n    this.init = false;\n    this.quill.emitter.on(\"editor-ready\", () => {\n      this.clear();\n      const $input = $(this.quill.container).siblings('input[type=\"hidden\"]');\n      this.stack.undo.push({content: $input.val() || \"\", index: this.quill.getLength() - 2 });\n      this.lastLength = this.quill.getLength();\n    })\n    /* eslint-disable max-params */\n    this.quill.on(Quill.events.EDITOR_CHANGE, (eventName, delta, oldDelta, source) => {\n      if (!delta) {\n        return;\n      }\n      if (!this.init && eventName === \"selection-change\") {\n        this.stack.undo[0].index = delta.index;\n      }\n      if (eventName !== Quill.events.TEXT_CHANGE || this.ignoreChange) {\n        return;\n      }\n\n      if (!this.options.userOnly || source === Quill.sources.USER) {\n        this.record(delta, oldDelta);\n      }\n    });\n    this.quill.keyboard.addBinding({ key: \"Z\", shortKey: true }, this.undo.bind(this));\n    this.quill.keyboard.addBinding({ key: \"Z\", shortKey: true, shiftKey: true }, this.redo.bind(this));\n    if ((/Win/i).test(navigator.platform)) {\n      this.quill.keyboard.addBinding({ key: \"Y\", shortKey: true }, this.redo.bind(this));\n    }\n  }\n  /* eslint-enable max-params */\n\n  change(source, dest) {\n    if (this.stack[source].length === 0) {\n      return;\n    }\n    let obj = this.updateStacks(source, dest);\n    if (!obj.content) {\n      return;\n    }\n    if (!obj.index) {\n      obj.index = 0\n    }\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.setContents(this.quill.clipboard.convert(obj.content));\n    this.ignoreChange = false;\n    let index = obj.index;\n    this.quill.setSelection(index);\n  }\n\n  updateStacks(source, dest) {\n    if (source === \"undo\") {\n      if (this.stack.undo.length === 1) {\n        return this.stack.undo[0]\n      }\n      this.stack[dest].push(this.stack.undo.pop())\n      return this.stack.undo[this.stack.undo.length - 1]\n    }\n    let content = this.stack.redo.pop();\n    this.stack.undo.push(content)\n    return content\n  }\n\n  record(changeDelta) {\n    if (changeDelta.ops.length === 0) {\n      return\n    } else if (!this.init) {\n      this.init = true;\n    }\n    this.stack.redo = [];\n    let timestamp = Date.now();\n    // Should not return after length check, because after linebreak a keypress replaces invisible characters with\n    // visible characters.\n    // For example: <br><br></p> -> [press X] -> <br>X</p>.\n    if (Math.abs(this.lastLength === this.quill.getLength()) || this.lastRecorded + this.options.delay > timestamp) {\n      if (this.stack.undo.length > 1) {\n        this.stack.undo.pop();\n      }\n    } else {\n      this.lastLength = this.quill.getLength();\n      if (this.lastRecorded + this.options.delay <= timestamp) {\n        this.lastRecorded = timestamp;\n      }\n    }\n    this.stack.undo.push({content: this.quill.container.firstChild.innerHTML, index: this.quill.getSelection()})\n  }\n\n  transform() {\n    return;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}