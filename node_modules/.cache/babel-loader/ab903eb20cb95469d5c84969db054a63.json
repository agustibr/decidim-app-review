{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n/* eslint-disable require-jsdoc */\n// ORGINAL: https://github.com/quilljs/delta/blob/ddda3bf088cda3ec03d5dbcc1179679d147f3a02/src/AttributeMap.ts\n\n\nexport default function attributeDiff(attributes1, attributes2) {\n  var alpha = attributes1;\n  var beta = attributes2;\n\n  if (_typeof(alpha) !== \"object\") {\n    alpha = {};\n  }\n\n  if (_typeof(beta) !== \"object\") {\n    beta = {};\n  }\n\n  var attributes = Object.keys(alpha).concat(Object.keys(beta)).reduce(function (attrs, key) {\n    // ORGINAL: import isEqual from 'lodash.isequal'; if (!isEqual(a[key], b[key]))\n    if (alpha[key] !== beta[key]) {\n      attrs[key] = null;\n\n      if (beta[key]) {\n        attrs[key] = beta[key];\n      }\n    }\n\n    return attrs;\n  }, {});\n\n  if (Object.keys(attributes).length > 0) {\n    return attributes;\n  }\n\n  return null;\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;AAEA;;;AACA,eAAe,SAASA,aAAT,CAAuBC,WAAvB,EAAoCC,WAApC,EAAiD;EAC9D,IAAIC,KAAK,GAAGF,WAAZ;EACA,IAAIG,IAAI,GAAGF,WAAX;;EACA,IAAIG,QAAOF,KAAP,MAAiB,QAArB,EAA+B;IAC7BA,KAAK,GAAG,EAARA;EACD;;EACD,IAAIE,QAAOD,IAAP,MAAgB,QAApB,EAA8B;IAC5BA,IAAI,GAAG,EAAPA;EACD;;EACD,IAAME,UAAU,GAAGC,MAAM,CAACC,IAAPD,CAAYJ,KAAZI,EAAmBE,MAAnBF,CAA0BA,MAAM,CAACC,IAAPD,CAAYH,IAAZG,CAA1BA,EAA6CG,MAA7CH,CAAoD,UAACI,KAAD,EAAQC,GAAR,EAAgB;IACrF;IACA,IAAKT,KAAK,CAACS,GAAD,CAALT,KAAeC,IAAI,CAACQ,GAAD,CAAxB,EAAgC;MAC9BD,KAAK,CAACC,GAAD,CAALD,GAAa,IAAbA;;MACA,IAAIP,IAAI,CAACQ,GAAD,CAAR,EAAe;QACbD,KAAK,CAACC,GAAD,CAALD,GAAaP,IAAI,CAACQ,GAAD,CAAjBD;MACD;IACF;;IACD,OAAOA,KAAP;EARiB,GAShB,EATgBJ,CAAnB;;EAWA,IAAIA,MAAM,CAACC,IAAPD,CAAYD,UAAZC,EAAwBM,MAAxBN,GAAiC,CAArC,EAAwC;IACtC,OAAOD,UAAP;EACD;;EACD,OAAO,IAAP;AACD","names":["attributeDiff","attributes1","attributes2","alpha","beta","_typeof","attributes","Object","keys","concat","reduce","attrs","key","length"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/editor/attribute_diff.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\n// ORGINAL: https://github.com/quilljs/delta/blob/ddda3bf088cda3ec03d5dbcc1179679d147f3a02/src/AttributeMap.ts\nexport default function attributeDiff(attributes1, attributes2) {\n  let alpha = attributes1;\n  let beta = attributes2;\n  if (typeof alpha !== \"object\") {\n    alpha = {};\n  }\n  if (typeof beta !== \"object\") {\n    beta = {};\n  }\n  const attributes = Object.keys(alpha).concat(Object.keys(beta)).reduce((attrs, key) => {\n    // ORGINAL: import isEqual from 'lodash.isequal'; if (!isEqual(a[key], b[key]))\n    if ((alpha[key] !== beta[key])) {\n      attrs[key] = null;\n      if (beta[key]) {\n        attrs[key] = beta[key]\n      }\n    }\n    return attrs;\n  }, {});\n\n  if (Object.keys(attributes).length > 0) {\n    return attributes;\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}