{"ast":null,"code":"/* eslint prefer-reflect: 0 */\n// Leaflet-SVGIcon\n// SVG icon for any marker class\n//\n// Copyright (c) 2016 University of New Hampshire - The MIT License\n// Author: Ilya Atkin <ilya.atkin@unh.edu>\n// Originally copied from https://github.com/iatkin/leaflet-svgicon\n//\nvar SVGIcon = L.DivIcon.extend({\n  options: {\n    \"circleText\": \"\",\n    \"className\": \"svg-icon\",\n    // defaults to [iconSize.x/2, iconSize.x/2]\n    \"circleAnchor\": null,\n    // defaults to color\n    \"circleColor\": null,\n    // defaults to opacity\n    \"circleOpacity\": null,\n    \"circleFillColor\": \"rgb(255,255,255)\",\n    // default to opacity\n    \"circleFillOpacity\": null,\n    \"circleRatio\": 0.5,\n    // defaults to weight\n    \"circleWeight\": null,\n    \"color\": \"rgb(0,102,255)\",\n    // defaults to color\n    \"fillColor\": null,\n    \"fillOpacity\": 0.4,\n    \"fontColor\": \"rgb(0, 0, 0)\",\n    \"fontOpacity\": \"1\",\n    // defaults to iconSize.x/4\n    \"fontSize\": null,\n    \"fontWeight\": \"normal\",\n    // defaults to [iconSize.x/2, iconSize.y] (point tip)\n    \"iconAnchor\": null,\n    \"iconSize\": L.point(32, 48),\n    \"opacity\": 1,\n    \"popupAnchor\": null,\n    \"shadowAngle\": 45,\n    \"shadowBlur\": 1,\n    \"shadowColor\": \"rgb(0,0,10)\",\n    \"shadowEnable\": false,\n    \"shadowLength\": 0.75,\n    \"shadowOpacity\": 0.5,\n    \"shadowTranslate\": L.point(0, 0),\n    \"weight\": 2\n  },\n  initialize: function initialize(_options) {\n    var options = L.Util.setOptions(this, _options); // iconSize needs to be converted to a Point object if it is not passed as one\n\n    options.iconSize = L.point(options.iconSize); // in addition to setting option dependant defaults, Point-based options are converted to Point objects\n\n    if (options.circleAnchor) {\n      options.circleAnchor = L.point(options.circleAnchor);\n    } else {\n      options.circleAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.x) / 2);\n    }\n\n    if (!options.circleColor) {\n      options.circleColor = options.color;\n    }\n\n    if (!options.circleFillOpacity) {\n      options.circleFillOpacity = options.opacity;\n    }\n\n    if (!options.circleOpacity) {\n      options.circleOpacity = options.opacity;\n    }\n\n    if (!options.circleWeight) {\n      options.circleWeight = options.weight;\n    }\n\n    if (!options.fillColor) {\n      options.fillColor = options.color;\n    }\n\n    if (!options.fontSize) {\n      options.fontSize = Number(options.iconSize.x / 4);\n    }\n\n    if (options.iconAnchor) {\n      options.iconAnchor = L.point(options.iconAnchor);\n    } else {\n      options.iconAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.y));\n    }\n\n    if (options.popupAnchor) {\n      options.popupAnchor = L.point(options.popupAnchor);\n    } else {\n      options.popupAnchor = L.point(0, -0.75 * options.iconSize.y);\n    }\n\n    options.html = this._createSVG();\n  },\n  _createCircle: function _createCircle() {\n    var cx = Number(this.options.circleAnchor.x);\n    var cy = Number(this.options.circleAnchor.y);\n    var radius = this.options.iconSize.x / 2 * Number(this.options.circleRatio);\n    var fill = this.options.circleFillColor;\n    var fillOpacity = this.options.circleFillOpacity;\n    var stroke = this.options.circleColor;\n    var strokeOpacity = this.options.circleOpacity;\n    var strokeWidth = this.options.circleWeight;\n    var className = \"\".concat(this.options.className, \"-circle\");\n    var circle = \"<circle class=\\\"\".concat(className, \"\\\" cx=\\\"\").concat(cx, \"\\\" cy=\\\"\").concat(cy, \"\\\" r=\\\"\").concat(radius, \"\\\" fill=\\\"\").concat(fill, \"\\\" fill-opacity=\\\"\").concat(fillOpacity, \"\\\" stroke=\\\"\").concat(stroke, \"\\\" stroke-opacity=\").concat(strokeOpacity, \"\\\" stroke-width=\\\"\").concat(strokeWidth, \"\\\"/>\");\n    return circle;\n  },\n  _createPathDescription: function _createPathDescription() {\n    var height = Number(this.options.iconSize.y);\n    var width = Number(this.options.iconSize.x);\n    var weight = Number(this.options.weight);\n    var margin = weight / 2;\n    var startPoint = \"M \".concat(margin, \" \").concat(width / 2, \" \");\n    var leftLine = \"L \".concat(width / 2, \" \").concat(height - weight, \" \");\n    var rightLine = \"L \".concat(width - margin, \" \").concat(width / 2, \" \");\n    var arc = \"A \".concat(width / 4, \" \").concat(width / 4, \" 0 0 0 \").concat(margin, \" \").concat(width / 2, \" Z\");\n    var description = startPoint + leftLine + rightLine + arc;\n    return description;\n  },\n  _createPath: function _createPath() {\n    var pathDescription = this._createPathDescription();\n\n    var strokeWidth = this.options.weight;\n    var stroke = this.options.color;\n    var strokeOpacity = this.options.opacity;\n    var fill = this.options.fillColor;\n    var fillOpacity = this.options.fillOpacity;\n    var className = \"\".concat(this.options.className, \"-path\");\n    var path = \"<path class=\\\"\".concat(className, \"\\\" d=\\\"\").concat(pathDescription, \"\\\" stroke-width=\\\"\").concat(strokeWidth, \"\\\" stroke=\\\"\").concat(stroke, \"\\\" stroke-opacity=\\\"\").concat(strokeOpacity, \"\\\" fill=\\\"\").concat(fill, \"\\\" fill-opacity=\\\"\").concat(fillOpacity, \"\\\"/>\");\n    return path;\n  },\n  _createShadow: function _createShadow() {\n    var pathDescription = this._createPathDescription();\n\n    var strokeWidth = this.options.weight;\n    var stroke = this.options.shadowColor;\n    var fill = this.options.shadowColor;\n    var className = \"\".concat(this.options.className, \"-shadow\");\n    var origin = \"\".concat(this.options.iconSize.x / 2, \"px \").concat(this.options.iconSize.y, \"px\");\n    var rotation = this.options.shadowAngle;\n    var height = this.options.shadowLength;\n    var opacity = this.options.shadowOpacity;\n    var blur = this.options.shadowBlur;\n    var translate = \"\".concat(this.options.shadowTranslate.x, \"px, \").concat(this.options.shadowTranslate.y, \"px\");\n    var blurFilter = \"<filter id='iconShadowBlur'><feGaussianBlur in='SourceGraphic' stdDeviation='\".concat(blur, \"'/></filter>\");\n    var shadow = \"<path filter=\\\"url(#iconShadowBlur\\\") class=\\\"\".concat(className, \"\\\" d=\\\"\").concat(pathDescription, \"\\\" fill=\\\"\").concat(fill, \"\\\" stroke-width=\\\"\").concat(strokeWidth, \"\\\" stroke=\\\"\").concat(stroke, \"\\\" style=\\\"opacity: \").concat(opacity, \"; transform-origin: \").concat(origin, \"; transform: rotate(\").concat(rotation, \"deg) translate(\").concat(translate, \") scale(1, \").concat(height, \")\\\" />\");\n    return blurFilter + shadow;\n  },\n  _createSVG: function _createSVG() {\n    var path = this._createPath();\n\n    var circle = this._createCircle();\n\n    var text = this._createText();\n\n    var shadow = \"\";\n\n    if (this.options.shadowEnable) {\n      shadow = this._createShadow();\n    }\n\n    var className = \"\".concat(this.options.className, \"-svg\");\n    var width = this.options.iconSize.x;\n    var height = this.options.iconSize.y;\n\n    if (this.options.shadowEnable) {\n      width += this.options.iconSize.y * this.options.shadowLength - this.options.iconSize.x / 2;\n      width = Math.max(width, 32);\n      height += this.options.iconSize.y * this.options.shadowLength;\n    }\n\n    var style = \"width:\".concat(width, \"px; height:\").concat(height);\n    var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" class=\\\"\".concat(className, \"\\\" style=\\\"\").concat(style, \"\\\">\").concat(shadow).concat(path).concat(circle).concat(text, \"</svg>\");\n    return svg;\n  },\n  _createText: function _createText() {\n    var fontSize = \"\".concat(this.options.fontSize, \"px\");\n    var fontWeight = this.options.fontWeight;\n    var lineHeight = Number(this.options.fontSize);\n    var coordX = this.options.circleAnchor.x; // 35% was found experimentally\n\n    var coordY = this.options.circleAnchor.y + lineHeight * 0.35;\n    var circleText = this.options.circleText;\n    var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\".concat(this.options.fontOpacity, \")\"));\n    var text = \"<text text-anchor=\\\"middle\\\" x=\\\"\".concat(coordX, \"\\\" y=\\\"\").concat(coordY, \"\\\" style=\\\"font-size: \").concat(fontSize, \"; font-weight: \").concat(fontWeight, \"\\\" fill=\\\"\").concat(textColor, \"\\\">\").concat(circleText, \"</text>\");\n    return text;\n  }\n});\nvar SVGMarker = L.Marker.extend({\n  options: {\n    \"iconFactory\": L.divIcon.svgIcon,\n    \"iconOptions\": {}\n  },\n  initialize: function initialize(latlng, _options) {\n    var options = L.Util.setOptions(this, _options);\n    options.icon = options.iconFactory(options.iconOptions);\n    this._latlng = latlng;\n  },\n  onAdd: function onAdd(map) {\n    L.Marker.prototype.onAdd.call(this, map);\n  },\n  setStyle: function setStyle(style) {\n    if (this._icon) {\n      //      let svg = this._icon.children[0]\n      var iconBody = this._icon.children[0].children[0];\n      var iconCircle = this._icon.children[0].children[1];\n\n      if (style.color && !style.iconOptions) {\n        var stroke = style.color.replace(\"rgb\", \"rgba\").replace(\")\", \",\".concat(this.options.icon.options.opacity, \")\"));\n        var fill = style.color.replace(\"rgb\", \"rgba\").replace(\")\", \",\".concat(this.options.icon.options.fillOpacity, \")\"));\n        iconBody.setAttribute(\"stroke\", stroke);\n        iconBody.setAttribute(\"fill\", fill);\n        iconCircle.setAttribute(\"stroke\", stroke);\n        this.options.icon.fillColor = fill;\n        this.options.icon.color = stroke;\n        this.options.icon.circleColor = stroke;\n      }\n\n      if (style.opacity) {\n        this.setOpacity(style.opacity);\n      }\n\n      if (style.iconOptions) {\n        if (style.color) {\n          style.iconOptions.color = style.color;\n        }\n\n        var iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions);\n        this.setIcon(L.divIcon.svgIcon(iconOptions));\n      }\n    }\n  }\n});\nexport { SVGMarker, SVGIcon };","map":{"version":3,"mappings":"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","names":["SVGIcon","L","DivIcon","extend","options","point","initialize","_options","Util","setOptions","iconSize","circleAnchor","Number","x","circleColor","color","circleFillOpacity","opacity","circleOpacity","circleWeight","weight","fillColor","fontSize","iconAnchor","y","popupAnchor","html","_createSVG","_createCircle","cx","cy","radius","circleRatio","fill","circleFillColor","fillOpacity","stroke","strokeOpacity","strokeWidth","className","circle","_createPathDescription","height","width","margin","startPoint","leftLine","rightLine","arc","description","_createPath","pathDescription","path","_createShadow","shadowColor","origin","rotation","shadowAngle","shadowLength","shadowOpacity","blur","shadowBlur","translate","shadowTranslate","blurFilter","shadow","text","_createText","shadowEnable","Math","max","style","svg","fontWeight","lineHeight","coordX","coordY","circleText","textColor","fontColor","replace","fontOpacity","SVGMarker","Marker","divIcon","svgIcon","latlng","icon","iconFactory","iconOptions","_latlng","onAdd","map","prototype","call","setStyle","_icon","iconBody","children","iconCircle","setAttribute","setOpacity","setIcon"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/map/svg-icon.js"],"sourcesContent":["/* eslint prefer-reflect: 0 */\n\n// Leaflet-SVGIcon\n// SVG icon for any marker class\n//\n// Copyright (c) 2016 University of New Hampshire - The MIT License\n// Author: Ilya Atkin <ilya.atkin@unh.edu>\n// Originally copied from https://github.com/iatkin/leaflet-svgicon\n//\n\nlet SVGIcon = L.DivIcon.extend({\n  options: {\n    \"circleText\": \"\",\n    \"className\": \"svg-icon\",\n    // defaults to [iconSize.x/2, iconSize.x/2]\n    \"circleAnchor\": null,\n    // defaults to color\n    \"circleColor\": null,\n    // defaults to opacity\n    \"circleOpacity\": null,\n    \"circleFillColor\": \"rgb(255,255,255)\",\n    // default to opacity\n    \"circleFillOpacity\": null,\n    \"circleRatio\": 0.5,\n    // defaults to weight\n    \"circleWeight\": null,\n    \"color\": \"rgb(0,102,255)\",\n    // defaults to color\n    \"fillColor\": null,\n    \"fillOpacity\": 0.4,\n    \"fontColor\": \"rgb(0, 0, 0)\",\n    \"fontOpacity\": \"1\",\n    // defaults to iconSize.x/4\n    \"fontSize\": null,\n    \"fontWeight\": \"normal\",\n    // defaults to [iconSize.x/2, iconSize.y] (point tip)\n    \"iconAnchor\": null,\n    \"iconSize\": L.point(32, 48),\n    \"opacity\": 1,\n    \"popupAnchor\": null,\n    \"shadowAngle\": 45,\n    \"shadowBlur\": 1,\n    \"shadowColor\": \"rgb(0,0,10)\",\n    \"shadowEnable\": false,\n    \"shadowLength\": 0.75,\n    \"shadowOpacity\": 0.5,\n    \"shadowTranslate\": L.point(0, 0),\n    \"weight\": 2\n  },\n  initialize: function(_options) {\n    let options = L.Util.setOptions(this, _options)\n\n    // iconSize needs to be converted to a Point object if it is not passed as one\n    options.iconSize = L.point(options.iconSize)\n\n    // in addition to setting option dependant defaults, Point-based options are converted to Point objects\n    if (options.circleAnchor) {\n      options.circleAnchor = L.point(options.circleAnchor)\n    } else {\n      options.circleAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.x) / 2)\n    }\n    if (!options.circleColor) {\n      options.circleColor = options.color\n    }\n    if (!options.circleFillOpacity) {\n      options.circleFillOpacity = options.opacity\n    }\n    if (!options.circleOpacity) {\n      options.circleOpacity = options.opacity\n    }\n    if (!options.circleWeight) {\n      options.circleWeight = options.weight\n    }\n    if (!options.fillColor) {\n      options.fillColor = options.color\n    }\n    if (!options.fontSize) {\n      options.fontSize = Number(options.iconSize.x / 4)\n    }\n    if (options.iconAnchor) {\n      options.iconAnchor = L.point(options.iconAnchor)\n    }\n    else {\n      options.iconAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.y))\n    }\n    if (options.popupAnchor) {\n      options.popupAnchor = L.point(options.popupAnchor)\n    }\n    else {\n      options.popupAnchor = L.point(0, (-0.75) * (options.iconSize.y))\n    }\n\n    options.html = this._createSVG()\n  },\n  _createCircle: function() {\n    let cx = Number(this.options.circleAnchor.x)\n    let cy = Number(this.options.circleAnchor.y)\n    let radius = this.options.iconSize.x / 2 * Number(this.options.circleRatio)\n    let fill = this.options.circleFillColor\n    let fillOpacity = this.options.circleFillOpacity\n    let stroke = this.options.circleColor\n    let strokeOpacity = this.options.circleOpacity\n    let strokeWidth = this.options.circleWeight\n    let className = `${this.options.className}-circle`\n\n    let circle = `<circle class=\"${className}\" cx=\"${cx}\" cy=\"${cy}\" r=\"${radius\n    }\" fill=\"${fill}\" fill-opacity=\"${fillOpacity\n    }\" stroke=\"${stroke}\" stroke-opacity=${strokeOpacity}\" stroke-width=\"${strokeWidth}\"/>`\n\n    return circle\n  },\n  _createPathDescription: function() {\n    let height = Number(this.options.iconSize.y)\n    let width = Number(this.options.iconSize.x)\n    let weight = Number(this.options.weight)\n    let margin = weight / 2\n\n    let startPoint = `M ${margin} ${width / 2} `\n    let leftLine = `L ${width / 2} ${height - weight} `\n    let rightLine = `L ${width - margin} ${width / 2} `\n    let arc = `A ${width / 4} ${width / 4} 0 0 0 ${margin} ${width / 2} Z`\n\n    let description = startPoint + leftLine + rightLine + arc\n\n    return description\n  },\n  _createPath: function() {\n    let pathDescription = this._createPathDescription()\n    let strokeWidth = this.options.weight\n    let stroke = this.options.color\n    let strokeOpacity = this.options.opacity\n    let fill = this.options.fillColor\n    let fillOpacity = this.options.fillOpacity\n    let className = `${this.options.className}-path`\n\n    let path = `<path class=\"${className}\" d=\"${pathDescription\n    }\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-opacity=\"${strokeOpacity\n    }\" fill=\"${fill}\" fill-opacity=\"${fillOpacity}\"/>`\n\n    return path\n  },\n  _createShadow: function() {\n    let pathDescription = this._createPathDescription()\n    let strokeWidth = this.options.weight\n    let stroke = this.options.shadowColor\n    let fill = this.options.shadowColor\n    let className = `${this.options.className}-shadow`\n\n    let origin = `${this.options.iconSize.x / 2}px ${this.options.iconSize.y}px`\n    let rotation = this.options.shadowAngle\n    let height = this.options.shadowLength\n    let opacity = this.options.shadowOpacity\n    let blur = this.options.shadowBlur\n    let translate = `${this.options.shadowTranslate.x}px, ${this.options.shadowTranslate.y}px`\n\n    let blurFilter = `<filter id='iconShadowBlur'><feGaussianBlur in='SourceGraphic' stdDeviation='${blur}'/></filter>`\n\n    let shadow = `<path filter=\"url(#iconShadowBlur\") class=\"${className}\" d=\"${pathDescription}\" fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" style=\"opacity: ${opacity}; transform-origin: ${origin}; transform: rotate(${rotation}deg) translate(${translate}) scale(1, ${height})\" />`\n\n    return blurFilter + shadow\n  },\n  _createSVG: function() {\n    let path = this._createPath()\n    let circle = this._createCircle()\n    let text = this._createText()\n    let shadow = \"\"\n    if (this.options.shadowEnable) {\n      shadow = this._createShadow()\n    }\n\n    let className = `${this.options.className}-svg`\n    let width = this.options.iconSize.x\n    let height = this.options.iconSize.y\n\n    if (this.options.shadowEnable) {\n      width += this.options.iconSize.y * this.options.shadowLength - (this.options.iconSize.x / 2)\n      width = Math.max(width, 32)\n      height += this.options.iconSize.y * this.options.shadowLength\n    }\n\n    let style = `width:${width}px; height:${height}`\n    let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"${className}\" style=\"${style}\">${shadow}${path}${circle}${text}</svg>`\n\n    return svg\n  },\n  _createText: function() {\n    let fontSize = `${this.options.fontSize}px`\n    let fontWeight = this.options.fontWeight\n    let lineHeight = Number(this.options.fontSize)\n\n    let coordX = this.options.circleAnchor.x\n    // 35% was found experimentally\n    let coordY = this.options.circleAnchor.y + (lineHeight * 0.35)\n    let circleText = this.options.circleText\n    let textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", `,${this.options.fontOpacity})`)\n\n    let text = `<text text-anchor=\"middle\" x=\"${coordX}\" y=\"${coordY}\" style=\"font-size: ${fontSize}; font-weight: ${fontWeight}\" fill=\"${textColor}\">${circleText}</text>`\n\n    return text\n  }\n})\n\nlet SVGMarker = L.Marker.extend({\n  options: {\n    \"iconFactory\": L.divIcon.svgIcon,\n    \"iconOptions\": {}\n  },\n  initialize: function(latlng, _options) {\n    let options = L.Util.setOptions(this, _options)\n    options.icon = options.iconFactory(options.iconOptions)\n    this._latlng = latlng\n  },\n  onAdd: function(map) {\n    L.Marker.prototype.onAdd.call(this, map)\n  },\n  setStyle: function(style) {\n    if (this._icon) {\n      //      let svg = this._icon.children[0]\n      let iconBody = this._icon.children[0].children[0]\n      let iconCircle = this._icon.children[0].children[1]\n\n      if (style.color && !style.iconOptions) {\n        let stroke = style.color.replace(\"rgb\", \"rgba\").replace(\")\", `,${this.options.icon.options.opacity})`)\n        let fill = style.color.replace(\"rgb\", \"rgba\").replace(\")\", `,${this.options.icon.options.fillOpacity})`)\n        iconBody.setAttribute(\"stroke\", stroke)\n        iconBody.setAttribute(\"fill\", fill)\n        iconCircle.setAttribute(\"stroke\", stroke)\n\n        this.options.icon.fillColor = fill\n        this.options.icon.color = stroke\n        this.options.icon.circleColor = stroke\n      }\n      if (style.opacity) {\n        this.setOpacity(style.opacity)\n      }\n      if (style.iconOptions) {\n        if (style.color) {\n          style.iconOptions.color = style.color\n        }\n        let iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\n        this.setIcon(L.divIcon.svgIcon(iconOptions))\n      }\n    }\n  }\n});\n\nexport { SVGMarker, SVGIcon }\n\n"]},"metadata":{},"sourceType":"module"}