{"ast":null,"code":"/**\n// Function adds feature to datalist that you can have different id and label.\n// Used with datalist_select_helper.rb#datalist_select\n * @param {HTMLElement} target - dataselect wrapper\n * @param {Function} callback - the function to be executed after a successful selection.\n * @returns {Void} - Returns nothing.\n */\nexport var datalistSelect = function datalistSelect(target, callback) {\n  if (!target) {\n    return;\n  }\n\n  var input = target.querySelector(\"input[type='hidden'\");\n  var textInput = target.querySelector(\"input[type='text']\");\n  var items = target.querySelector(\"datalist\").children;\n\n  var selectValue = function selectValue(selected) {\n    for (var idx = 0; idx < items.length; idx += 1) {\n      if (items[idx].innerHTML === selected) {\n        var id = items[idx].dataset.value;\n        input.value = id;\n\n        if (callback) {\n          return callback(id);\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  textInput.addEventListener(\"input\", function () {\n    var selected = textInput.value;\n    selectValue(selected);\n  });\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASC,QAAT,EAAsB;EAClD,IAAI,CAACD,MAAL,EAAa;IACX;EACD;;EAED,IAAME,KAAK,GAAGF,MAAM,CAACG,aAAPH,CAAqB,qBAArBA,CAAd;EACA,IAAMI,SAAS,GAAGJ,MAAM,CAACG,aAAPH,CAAqB,oBAArBA,CAAlB;EACA,IAAMK,KAAK,GAAGL,MAAM,CAACG,aAAPH,CAAqB,UAArBA,EAAiCM,QAA/C;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;IAChC,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,KAAK,CAACK,MAA9B,EAAsCD,GAAG,IAAI,CAA7C,EAAgD;MAC9C,IAAIJ,KAAK,CAACI,GAAD,CAALJ,CAAWM,SAAXN,KAAyBG,QAA7B,EAAuC;QACrC,IAAMI,EAAE,GAAGP,KAAK,CAACI,GAAD,CAALJ,CAAWQ,OAAXR,CAAmBS,KAA9B;QACAZ,KAAK,CAACY,KAANZ,GAAcU,EAAdV;;QACA,IAAID,QAAJ,EAAc;UACZ,OAAOA,QAAQ,CAACW,EAAD,CAAf;QACD;;QACD,OAAO,IAAP;MACD;IACF;;IACD,OAAO,KAAP;EAXF;;EAcAR,SAAS,CAACW,gBAAVX,CAA2B,OAA3BA,EAAoC,YAAM;IACxC,IAAMI,QAAQ,GAAGJ,SAAS,CAACU,KAA3B;IACAP,WAAW,CAACC,QAAD,CAAXD;EAFF;AAvBK","names":["datalistSelect","target","callback","input","querySelector","textInput","items","children","selectValue","selected","idx","length","innerHTML","id","dataset","value","addEventListener"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/datalist_select.js"],"sourcesContent":["/**\n// Function adds feature to datalist that you can have different id and label.\n// Used with datalist_select_helper.rb#datalist_select\n * @param {HTMLElement} target - dataselect wrapper\n * @param {Function} callback - the function to be executed after a successful selection.\n * @returns {Void} - Returns nothing.\n */\n\nexport const datalistSelect = (target, callback) => {\n  if (!target) {\n    return;\n  }\n\n  const input = target.querySelector(\"input[type='hidden'\");\n  const textInput = target.querySelector(\"input[type='text']\");\n  const items = target.querySelector(\"datalist\").children;\n\n  const selectValue = (selected) => {\n    for (let idx = 0; idx < items.length; idx += 1) {\n      if (items[idx].innerHTML === selected) {\n        const id = items[idx].dataset.value;\n        input.value = id;\n        if (callback) {\n          return callback(id);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  textInput.addEventListener(\"input\", () => {\n    const selected = textInput.value;\n    selectValue(selected);\n  })\n}\n"]},"metadata":{},"sourceType":"module"}