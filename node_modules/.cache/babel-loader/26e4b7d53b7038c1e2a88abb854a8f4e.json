{"ast":null,"code":"/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  var key = \"\".concat(coordinate, \"Name\");\n\n  if (options[key]) {\n    return options[key];\n  }\n\n  var inputName = $input.attr(\"name\");\n  var subNameMatch = /\\[[^\\]]+\\]$/;\n\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, \"[\".concat(coordinate, \"]\"));\n  }\n\n  return coordinate;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,sBAAT,CAAgCC,UAAhC,EAA4CC,MAA5C,EAAoDC,OAApD,EAA6D;EAC1E,IAAMC,GAAG,aAAMH,UAAN,SAAT;;EACA,IAAIE,OAAO,CAACC,GAAD,CAAX,EAAkB;IAChB,OAAOD,OAAO,CAACC,GAAD,CAAd;EACD;;EAED,IAAMC,SAAS,GAAGH,MAAM,CAACI,IAAPJ,CAAY,MAAZA,CAAlB;EACA,IAAMK,YAAY,GAAG,aAArB;;EACA,IAAIF,SAAS,CAACG,KAAVH,CAAgBE,YAAhBF,CAAJ,EAAmC;IACjC,OAAOA,SAAS,CAACI,OAAVJ,CAAkBE,YAAlBF,aAAoCJ,UAApC,OAAP;EACD;;EAED,OAAOA,UAAP;AACD","names":["getCoordinateInputName","coordinate","$input","options","key","inputName","attr","subNameMatch","match","replace"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/geocoding/coordinate_input.js"],"sourcesContent":["/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n\n  return coordinate;\n}\n"]},"metadata":{},"sourceType":"module"}