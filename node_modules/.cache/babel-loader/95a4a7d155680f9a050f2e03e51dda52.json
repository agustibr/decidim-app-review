{"ast":null,"code":"var DEFAULT_ATTRIBUTES = {\n  role: \"img\",\n  \"aria-hidden\": \"true\"\n};\n/**\n * Generates a Decidim icon element and returns it as a string.\n * @param {String} iconKey - the key of the icon to be generated\n * @param {Object} attributes - extra attributes to define for the icon SVG\n * @param {int} wait - number of milliseconds to wait before executing the function.\n * @private\n * @returns {Void} - Returns nothing.\n */\n\nexport default function icon(iconKey) {\n  var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var iconAttributes = $.extend(DEFAULT_ATTRIBUTES, attributes);\n  var title = iconAttributes.title || iconAttributes.ariaLabel;\n  Reflect.deleteProperty(iconAttributes, \"title\");\n  var htmlAttributes = {\n    \"class\": \"icon icon--\".concat(iconKey)\n  };\n  Object.keys(iconAttributes).forEach(function (key) {\n    // Convert the key to dash-format.\n    var newKey = key.replace(/([A-Z])/g, function (ucw) {\n      return \"-\".concat(ucw[0].toLowerCase());\n    });\n\n    if (typeof htmlAttributes[key] === \"undefined\") {\n      htmlAttributes[newKey] = iconAttributes[key];\n    } else {\n      htmlAttributes[newKey] = \"\".concat(htmlAttributes[newKey], \" \").concat(iconAttributes[key]);\n    }\n  });\n  var iconsPath = window.Decidim.config.get(\"icons_path\");\n  var elHtml = \"<svg><use href=\\\"\".concat(iconsPath, \"#icon-\").concat(iconKey, \"\\\"></use></svg>\");\n  var $el = $(elHtml);\n\n  if (title) {\n    $el.prepend(\"<title>\".concat(title, \"</title>\"));\n  } else {\n    // This keeps accessibility audit tools happy\n    $el.prepend(\"<title>\".concat(iconKey, \"</title>\")); // Force hidden if title is not defined\n\n    htmlAttributes[\"aria-hidden\"] = \"true\";\n  }\n\n  $el.attr(htmlAttributes);\n  return $(\"<div />\").append($el).html();\n}","map":{"version":3,"mappings":"AAAA,IAAMA,kBAAkB,GAAG;EACzBC,IAAI,EAAE,KADmB;EAEzB,eAAe;AAFU,CAA3B;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,IAAT,CAAcC,OAAd,EAAwC;EAAA,IAAjBC,UAAiB,uEAAJ,EAAI;EACrD,IAAMC,cAAc,GAAGC,CAAC,CAACC,MAAFD,CAASN,kBAATM,EAA6BF,UAA7BE,CAAvB;EACA,IAAME,KAAK,GAAGH,cAAc,CAACG,KAAfH,IAAwBA,cAAc,CAACI,SAArD;EACAC,OAAO,CAACC,cAARD,CAAuBL,cAAvBK,EAAuC,OAAvCA;EAEA,IAAME,cAAc,GAAG;IACrB,8BAAuBT,OAAvB;EADqB,CAAvB;EAGAU,MAAM,CAACC,IAAPD,CAAYR,cAAZQ,EAA4BE,OAA5BF,CAAoC,UAACG,GAAD,EAAS;IAC3C;IACA,IAAMC,MAAM,GAAGD,GAAG,CAACE,OAAJF,CAAY,UAAZA,EAAwB,UAACG,GAAD;MAAA,kBAAaA,GAAG,CAAC,CAAD,CAAHA,CAAOC,WAAPD,EAAb;IAAxB,EAAf;;IACA,IAAI,OAAOP,cAAc,CAACI,GAAD,CAArB,KAA+B,WAAnC,EAAgD;MAC9CJ,cAAc,CAACK,MAAD,CAAdL,GAAyBP,cAAc,CAACW,GAAD,CAAvCJ;IADF,OAEO;MACLA,cAAc,CAACK,MAAD,CAAdL,aAA4BA,cAAc,CAACK,MAAD,CAA1C,cAAsDZ,cAAc,CAACW,GAAD,CAApE;IACD;EAPH;EAUA,IAAMK,SAAS,GAAIC,MAAM,CAACC,OAAPD,CAAeE,MAAfF,CAAsBG,GAAtBH,CAA0B,YAA1BA,CAAnB;EACA,IAAMI,MAAM,8BAAsBL,SAAtB,mBAAwClB,OAAxC,oBAAZ;EACA,IAAMwB,GAAG,GAAGrB,CAAC,CAACoB,MAAD,CAAb;;EACA,IAAIlB,KAAJ,EAAW;IACTmB,GAAG,CAACC,OAAJD,kBAAsBnB,KAAtB;EADF,OAEO;IACL;IACAmB,GAAG,CAACC,OAAJD,kBAAsBxB,OAAtB,eAFK,CAGL;;IACAS,cAAc,CAAC,aAAD,CAAdA,GAAgC,MAAhCA;EACD;;EACDe,GAAG,CAACE,IAAJF,CAASf,cAATe;EAEA,OAAOrB,CAAC,CAAC,SAAD,CAADA,CAAawB,MAAbxB,CAAoBqB,GAApBrB,EAAyByB,IAAzBzB,EAAP;AACD","names":["DEFAULT_ATTRIBUTES","role","icon","iconKey","attributes","iconAttributes","$","extend","title","ariaLabel","Reflect","deleteProperty","htmlAttributes","Object","keys","forEach","key","newKey","replace","ucw","toLowerCase","iconsPath","window","Decidim","config","get","elHtml","$el","prepend","attr","append","html"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/icon.js"],"sourcesContent":["const DEFAULT_ATTRIBUTES = {\n  role: \"img\",\n  \"aria-hidden\": \"true\"\n};\n\n/**\n * Generates a Decidim icon element and returns it as a string.\n * @param {String} iconKey - the key of the icon to be generated\n * @param {Object} attributes - extra attributes to define for the icon SVG\n * @param {int} wait - number of milliseconds to wait before executing the function.\n * @private\n * @returns {Void} - Returns nothing.\n */\nexport default function icon(iconKey, attributes = {}) {\n  const iconAttributes = $.extend(DEFAULT_ATTRIBUTES, attributes);\n  const title = iconAttributes.title || iconAttributes.ariaLabel;\n  Reflect.deleteProperty(iconAttributes, \"title\");\n\n  const htmlAttributes = {\n    \"class\": `icon icon--${iconKey}`\n  };\n  Object.keys(iconAttributes).forEach((key) => {\n    // Convert the key to dash-format.\n    const newKey = key.replace(/([A-Z])/g, (ucw) => `-${ucw[0].toLowerCase()}`);\n    if (typeof htmlAttributes[key] === \"undefined\") {\n      htmlAttributes[newKey] = iconAttributes[key];\n    } else {\n      htmlAttributes[newKey] = `${htmlAttributes[newKey]} ${iconAttributes[key]}`;\n    }\n  });\n\n  const iconsPath =  window.Decidim.config.get(\"icons_path\");\n  const elHtml = `<svg><use href=\"${iconsPath}#icon-${iconKey}\"></use></svg>`;\n  const $el = $(elHtml);\n  if (title) {\n    $el.prepend(`<title>${title}</title>`);\n  } else {\n    // This keeps accessibility audit tools happy\n    $el.prepend(`<title>${iconKey}</title>`);\n    // Force hidden if title is not defined\n    htmlAttributes[\"aria-hidden\"] = \"true\";\n  }\n  $el.attr(htmlAttributes);\n\n  return $(\"<div />\").append($el).html();\n}\n"]},"metadata":{},"sourceType":"module"}