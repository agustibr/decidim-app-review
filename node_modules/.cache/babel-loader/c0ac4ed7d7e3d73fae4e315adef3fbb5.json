{"ast":null,"code":"import Rails from \"@rails/ujs\"; // Make the remote form submit buttons disabled when the form is being\n// submitted to avoid multiple submits.\n\ndocument.addEventListener(\"ajax:beforeSend\", function (ev) {\n  if (!ev.target.matches(\"form[data-remote]\")) {\n    return;\n  }\n\n  ev.target.querySelectorAll(\"[type=submit]\").forEach(function (submit) {\n    submit.disabled = true;\n  });\n});\ndocument.addEventListener(\"ajax:complete\", function (ev) {\n  if (!ev.target.matches(\"form[data-remote]\")) {\n    return;\n  }\n\n  ev.target.querySelectorAll(\"[type=submit]\").forEach(function (submit) {\n    submit.disabled = false;\n  });\n}); // The forms that are attached to Foundation Abide do not work properly with\n// Rails UJS Ajax forms that have the `data-remote` attribute attached to\n// them. The reason is that in case Foundation Abide sees the form as valid,\n// it will submit it normally bypassing the Rails UJS functionality.\n// The submit events happens through jQuery in Foundation Abide which is why\n// we need to bind the event with jQuery.\n\n$(document).on(\"submit\", \"form[data-remote][data-abide]\", function (ev) {\n  ev.preventDefault();\n\n  if (ev.target.querySelectorAll(\"[data-invalid]\").length > 0) {\n    return;\n  }\n\n  Reflect.apply(Rails.handleRemote, ev.target, [ev]);\n});","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB,C,CAEA;AACA;;AACAC,QAAQ,CAACC,gBAATD,CAA0B,iBAA1BA,EAA6C,UAACE,EAAD,EAAQ;EACnD,IAAI,CAACA,EAAE,CAACC,MAAHD,CAAUE,OAAVF,CAAkB,mBAAlBA,CAAL,EAA6C;IAC3C;EACD;;EAEDA,EAAE,CAACC,MAAHD,CAAUG,gBAAVH,CAA2B,eAA3BA,EAA4CI,OAA5CJ,CAAoD,UAACK,MAAD,EAAY;IAC9DA,MAAM,CAACC,QAAPD,GAAkB,IAAlBA;EADF;AALF;AASAP,QAAQ,CAACC,gBAATD,CAA0B,eAA1BA,EAA2C,UAACE,EAAD,EAAQ;EACjD,IAAI,CAACA,EAAE,CAACC,MAAHD,CAAUE,OAAVF,CAAkB,mBAAlBA,CAAL,EAA6C;IAC3C;EACD;;EAEDA,EAAE,CAACC,MAAHD,CAAUG,gBAAVH,CAA2B,eAA3BA,EAA4CI,OAA5CJ,CAAoD,UAACK,MAAD,EAAY;IAC9DA,MAAM,CAACC,QAAPD,GAAkB,KAAlBA;EADF;AALF,G,CAUA;AACA;AACA;AACA;AACA;AACA;;AACAE,CAAC,CAACT,QAAD,CAADS,CAAYC,EAAZD,CAAe,QAAfA,EAAyB,+BAAzBA,EAA0D,UAACP,EAAD,EAAQ;EAChEA,EAAE,CAACS,cAAHT;;EAEA,IAAIA,EAAE,CAACC,MAAHD,CAAUG,gBAAVH,CAA2B,gBAA3BA,EAA6CU,MAA7CV,GAAsD,CAA1D,EAA6D;IAC3D;EACD;;EAEDW,OAAO,CAACC,KAARD,CAAcd,KAAK,CAACgB,YAApBF,EAAkCX,EAAE,CAACC,MAArCU,EAA6C,CAACX,EAAD,CAA7CW;AAPF","names":["Rails","document","addEventListener","ev","target","matches","querySelectorAll","forEach","submit","disabled","$","on","preventDefault","length","Reflect","apply","handleRemote"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/form_remote.js"],"sourcesContent":["import Rails from \"@rails/ujs\";\n\n// Make the remote form submit buttons disabled when the form is being\n// submitted to avoid multiple submits.\ndocument.addEventListener(\"ajax:beforeSend\", (ev) => {\n  if (!ev.target.matches(\"form[data-remote]\")) {\n    return;\n  }\n\n  ev.target.querySelectorAll(\"[type=submit]\").forEach((submit) => {\n    submit.disabled = true;\n  });\n});\ndocument.addEventListener(\"ajax:complete\", (ev) => {\n  if (!ev.target.matches(\"form[data-remote]\")) {\n    return;\n  }\n\n  ev.target.querySelectorAll(\"[type=submit]\").forEach((submit) => {\n    submit.disabled = false;\n  });\n});\n\n// The forms that are attached to Foundation Abide do not work properly with\n// Rails UJS Ajax forms that have the `data-remote` attribute attached to\n// them. The reason is that in case Foundation Abide sees the form as valid,\n// it will submit it normally bypassing the Rails UJS functionality.\n// The submit events happens through jQuery in Foundation Abide which is why\n// we need to bind the event with jQuery.\n$(document).on(\"submit\", \"form[data-remote][data-abide]\", (ev) => {\n  ev.preventDefault();\n\n  if (ev.target.querySelectorAll(\"[data-invalid]\").length > 0) {\n    return;\n  }\n\n  Reflect.apply(Rails.handleRemote, ev.target, [ev]);\n});\n"]},"metadata":{},"sourceType":"module"}