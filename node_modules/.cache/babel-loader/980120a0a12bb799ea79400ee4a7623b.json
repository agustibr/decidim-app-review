{"ast":null,"code":"import select from \"select\";\n/**\n * This provides functionality to add clipboard copy functionality to buttons\n * on the page. The element to be copied from has to be defined for the button\n * using a `data` attribute and the target element has to be a form input.\n *\n * Usage:\n *   1. Create the button:\n *     <button class=\"button\"\n *      data-clipboard-copy=\"#target-input-element\"\n *      data-clipboard-copy-label=\"Copied!\"\n *      data-clipboard-copy-message=\"The text was successfully copied to clipboard.\"\n *      aria-label=\"Copy the text to clipboard\">\n *        <%= icon \"clipboard\", role: \"presentation\", \"aria-hidden\": true %>\n *        Copy to clipboard\n *    </button>\n *\n *   2. Make sure the target element exists on the page:\n *     <input id=\"target-input-element\" type=\"text\" value=\"This text will be copied.\">\n *\n * Options through data attributes:\n * - `data-clipboard-copy` = The jQuery selector for the target input element\n *   where text will be copied from.\n * - `data-clipboard-copy-label` = The label that will be shown in the button\n *   after a succesful copy.\n * - `data-clipboard-copy-message` = The text that will be announced to screen\n *   readers after a successful copy.\n */\n// How long the \"copied\" text is shown in the copy element after successful\n// copy.\n\nvar CLIPBOARD_COPY_TIMEOUT = 5000;\n$(function () {\n  $(document).on(\"click\", \"[data-clipboard-copy]\", function (ev) {\n    var $el = $(ev.target);\n\n    if (!$el.data(\"clipboard-copy\") || $el.data(\"clipboard-copy\").length < 1) {\n      return;\n    }\n\n    var $input = $($el.data(\"clipboard-copy\"));\n\n    if ($input.length < 1 || !$input.is(\"input, textarea, select\")) {\n      return;\n    } // Get the available text to clipboard.\n\n\n    var selectedText = select($input[0]);\n\n    if (!selectedText || selectedText.length < 1) {\n      return;\n    } // Move the selected text to clipboard.\n\n\n    var $temp = $(\"<textarea>\".concat(selectedText, \"</textarea>\")).css({\n      width: 1,\n      height: 1\n    });\n    $el.after($temp);\n    $temp.select();\n\n    var copyDone = function copyDone() {\n      $temp.remove();\n      $el.focus();\n    };\n\n    try {\n      // document.execCommand is deprecated but the Clipboard API is not\n      // supported by IE (which unfortunately is still a thing).\n      if (!document.execCommand(\"copy\")) {\n        return;\n      }\n    } catch (err) {\n      copyDone();\n      return;\n    }\n\n    copyDone(); // Change the label to indicate the copying was successful.\n\n    var label = $el.data(\"clipboard-copy-label\");\n\n    if (label) {\n      var to = $el.data(\"clipboard-copy-label-timeout\");\n\n      if (to) {\n        clearTimeout(to);\n      }\n\n      if (!$el.data(\"clipboard-copy-label-original\")) {\n        $el.data(\"clipboard-copy-label-original\", $el.html());\n      }\n\n      $el.html(label);\n      to = setTimeout(function () {\n        $el.html($el.data(\"clipboard-copy-label-original\"));\n        $el.removeData(\"clipboard-copy-label-original\");\n        $el.removeData(\"clipboard-copy-label-timeout\");\n      }, CLIPBOARD_COPY_TIMEOUT);\n      $el.data(\"clipboard-copy-label-timeout\", to);\n    } // Alert the screen reader what just happened (the link was copied).\n\n\n    var message = $el.data(\"clipboard-copy-message\");\n\n    if (message) {\n      var $msg = $el.data(\"clipboard-message-element\");\n\n      if ($msg) {\n        if ($msg.html() === message) {\n          // Try to hint the screen reader to re-read the text in the message\n          // element.\n          message += \"&nbsp;\";\n        }\n      } else {\n        $msg = $('<div aria-role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" class=\"clipboard-announcement show-for-sr\"></div>');\n        $el.after($msg);\n        $el.data(\"clipboard-message-element\", $msg);\n      } // Add the non breaking space always to content to try to force the\n      // screen reader to reannounce the added text.\n\n\n      $msg.html(message);\n    }\n  });\n});","map":{"version":3,"mappings":"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","names":["select","CLIPBOARD_COPY_TIMEOUT","$","document","on","ev","$el","target","data","length","$input","is","selectedText","$temp","css","width","height","after","copyDone","remove","focus","execCommand","err","label","to","clearTimeout","html","setTimeout","removeData","message","$msg"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/clipboard.js"],"sourcesContent":["import select from \"select\";\n\n/**\n * This provides functionality to add clipboard copy functionality to buttons\n * on the page. The element to be copied from has to be defined for the button\n * using a `data` attribute and the target element has to be a form input.\n *\n * Usage:\n *   1. Create the button:\n *     <button class=\"button\"\n *      data-clipboard-copy=\"#target-input-element\"\n *      data-clipboard-copy-label=\"Copied!\"\n *      data-clipboard-copy-message=\"The text was successfully copied to clipboard.\"\n *      aria-label=\"Copy the text to clipboard\">\n *        <%= icon \"clipboard\", role: \"presentation\", \"aria-hidden\": true %>\n *        Copy to clipboard\n *    </button>\n *\n *   2. Make sure the target element exists on the page:\n *     <input id=\"target-input-element\" type=\"text\" value=\"This text will be copied.\">\n *\n * Options through data attributes:\n * - `data-clipboard-copy` = The jQuery selector for the target input element\n *   where text will be copied from.\n * - `data-clipboard-copy-label` = The label that will be shown in the button\n *   after a succesful copy.\n * - `data-clipboard-copy-message` = The text that will be announced to screen\n *   readers after a successful copy.\n */\n\n// How long the \"copied\" text is shown in the copy element after successful\n// copy.\nconst CLIPBOARD_COPY_TIMEOUT = 5000;\n\n$(() => {\n  $(document).on(\"click\", \"[data-clipboard-copy]\", (ev) => {\n    const $el = $(ev.target);\n    if (!$el.data(\"clipboard-copy\") || $el.data(\"clipboard-copy\").length < 1) {\n      return;\n    }\n\n    const $input = $($el.data(\"clipboard-copy\"));\n    if ($input.length < 1 || !$input.is(\"input, textarea, select\")) {\n      return;\n    }\n\n    // Get the available text to clipboard.\n    const selectedText = select($input[0]);\n    if (!selectedText || selectedText.length < 1) {\n      return;\n    }\n\n    // Move the selected text to clipboard.\n    const $temp = $(`<textarea>${selectedText}</textarea>`).css({\n      width: 1,\n      height: 1\n    });\n    $el.after($temp);\n    $temp.select();\n\n    const copyDone = () => {\n      $temp.remove();\n      $el.focus();\n    };\n    try {\n      // document.execCommand is deprecated but the Clipboard API is not\n      // supported by IE (which unfortunately is still a thing).\n      if (!document.execCommand(\"copy\")) {\n        return;\n      }\n    } catch (err) {\n      copyDone();\n      return;\n    }\n    copyDone();\n\n    // Change the label to indicate the copying was successful.\n    const label = $el.data(\"clipboard-copy-label\");\n    if (label) {\n      let to = $el.data(\"clipboard-copy-label-timeout\");\n      if (to) {\n        clearTimeout(to);\n      }\n\n      if (!$el.data(\"clipboard-copy-label-original\")) {\n        $el.data(\"clipboard-copy-label-original\", $el.html());\n      }\n\n      $el.html(label);\n      to = setTimeout(() => {\n        $el.html($el.data(\"clipboard-copy-label-original\"));\n        $el.removeData(\"clipboard-copy-label-original\");\n        $el.removeData(\"clipboard-copy-label-timeout\");\n      }, CLIPBOARD_COPY_TIMEOUT);\n      $el.data(\"clipboard-copy-label-timeout\", to)\n    }\n\n    // Alert the screen reader what just happened (the link was copied).\n    let message = $el.data(\"clipboard-copy-message\");\n    if (message) {\n      let $msg = $el.data(\"clipboard-message-element\");\n      if ($msg) {\n        if ($msg.html() === message) {\n          // Try to hint the screen reader to re-read the text in the message\n          // element.\n          message += \"&nbsp;\";\n        }\n      } else {\n        $msg = $('<div aria-role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" class=\"clipboard-announcement show-for-sr\"></div>');\n        $el.after($msg);\n        $el.data(\"clipboard-message-element\", $msg);\n      }\n\n      // Add the non breaking space always to content to try to force the\n      // screen reader to reannounce the added text.\n      $msg.html(message);\n    }\n  });\n});\n"]},"metadata":{},"sourceType":"module"}