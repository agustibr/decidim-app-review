{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport AutoCompleteJS from \"@tarekraafat/autocomplete.js\";\n\nvar AutoComplete = /*#__PURE__*/function () {\n  function AutoComplete(el) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, AutoComplete);\n\n    this.element = el;\n    this.stickySelectedSpan = null;\n    this.clearStickySelectionSpan = null;\n    this.stickyHiddenInput = null;\n    this.promptDiv = null;\n    var thresholdTemp = options.threshold || 2;\n    this.options = Object.assign({\n      // Defines name of the hidden input (e.g. assembly_member[user_id])\n      name: null,\n      // Placeholder of the visible input field\n      placeholder: \"\",\n      // Defines what happens after user has selected value from suggestions\n      // sticky - Allows selecting a single value and not editing the value after selected (e.g. as the admin autocomplete fields)\n      // single - Allows selecting a single value and editing the selected text after the selection (e.g. geocoding field)\n      // multi - Allows selecting multiple values\n      // null (default) - Disable selection event handling in this class\n      mode: null,\n      // Defines if we show input help (e.g. \"Type at least three characters to search\") or not.\n      searchPrompt: false,\n      // Defines search prompt message, only shown if showPrompt is enabled!\n      searchPromptText: \"Type at least \".concat(thresholdTemp, \" characters to search\"),\n      // Defines items that are selected already when page is loaded before user selects them. (e.g. when form submit fails)\n      selected: null,\n      // Defines how many characters input has to have before we start searching\n      threshold: thresholdTemp,\n      // Defines how many results to show in the autocomplete selection list\n      // by maximum.\n      maxResults: 10,\n      // Defines the data keys against which to match the user input when\n      // searching through the results. For example, when the following\n      // data is returned by the API:\n      //   { id: 123, name: \"John\", nickname: \"john\", __typename: \"User\" }\n      //\n      // You can define the data keys array as [\"name\", \"nickname\"] in\n      // which case the results shown to user would be only those that\n      // have matching text in these defined fields.\n      dataMatchKeys: null,\n      // The data source is a method that gets the callback parameter as\n      // its first argument which should be called with the results array\n      // once they are returned by the API.\n      // For example:\n      //   (query, callback) => {\n      //     (async () => {\n      //       const results = await callAjax(`/api/url?query=${query}`);\n      //       callback(results);\n      //     })();\n      //   }\n      //\n      // Signature: (callback: Function)\n      dataSource: function dataSource() {\n        return [];\n      },\n      // Filters the data list returned by the data source before it is shown\n      // to the user. Can be used e.g. to hide already selected values from\n      // the list.\n      dataFilter: null,\n      // Delay in milliseconds how long to wait after user action before\n      // doing a backend request.\n      delay: 200,\n      // Allows modifying the suggested items before they are displayed in the list\n      // Signature: (element: HTMLElement, value: Object)\n      modifyResult: null\n    }, options);\n    this.autocomplete = new AutoCompleteJS({\n      selector: function selector() {\n        return _this.element;\n      },\n      placeHolder: options.placeholder,\n      // Delay (milliseconds) before autocomplete engine starts. It's preventing many queries when user is typing fast.\n      debounce: 200,\n      threshold: this.options.threshold,\n      data: {\n        keys: this.options.dataMatchKeys,\n        src: function () {\n          var _src = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n            var fetchResults;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    fetchResults = function fetchResults() {\n                      return new Promise(function (resolve) {\n                        _this.options.dataSource(query, resolve);\n                      });\n                    };\n\n                    _context.prev = 1;\n                    _context.next = 4;\n                    return fetchResults();\n\n                  case 4:\n                    return _context.abrupt(\"return\", _context.sent);\n\n                  case 7:\n                    _context.prev = 7;\n                    _context.t0 = _context[\"catch\"](1);\n                    return _context.abrupt(\"return\", _context.t0);\n\n                  case 10:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[1, 7]]);\n          }));\n\n          function src(_x) {\n            return _src.apply(this, arguments);\n          }\n\n          return src;\n        }(),\n        filter: function filter(list) {\n          if (_this.options.dataFilter) {\n            return _this.options.dataFilter(list);\n          }\n\n          return list;\n        }\n      },\n      resultsList: {\n        maxResults: this.options.maxResults\n      },\n      resultItem: {\n        element: function element(item, data) {\n          if (!_this.options.modifyResult) {\n            return;\n          }\n\n          _this.options.modifyResult(item, data.value);\n        }\n      },\n      events: {\n        input: {\n          blur: function blur() {\n            _this.promptDiv.style.display = \"none\";\n          }\n        }\n      }\n    });\n    this.acWrapper = this.element.closest(\".autoComplete_wrapper\");\n    this.element.ac = this.autocomplete; // Stop input field from bubbling open and close events to parent elements,\n    // because foundation closes modal from these events.\n\n    var stopPropagation = function stopPropagation(event) {\n      event.stopPropagation();\n    };\n\n    this.element.addEventListener(\"close\", stopPropagation);\n    this.element.addEventListener(\"open\", stopPropagation);\n    this.createPromptDiv();\n\n    switch (this.options.mode) {\n      case \"sticky\":\n        this.createStickySelect(this.options.name);\n        break;\n\n      case \"multi\":\n        this.createMultiSelect(this.options.name);\n        break;\n\n      default:\n    }\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"setInput\",\n    value: function setInput(value) {\n      this.autocomplete.input.value = value;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      switch (this.options.mode) {\n        case \"single\":\n          this.setInput(event.detail.selection.value[event.detail.selection.key]);\n          break;\n\n        case \"sticky\":\n          this.handleStickyEvents(event);\n          break;\n\n        case \"multi\":\n          this.handleMultiEvents(event);\n          break;\n\n        default:\n      }\n    }\n  }, {\n    key: \"handleMultiEvents\",\n    value: function handleMultiEvents(event) {\n      switch (event.type) {\n        case \"selection\":\n          this.addMultiSelectItem(event.detail.selection);\n          break;\n\n        default:\n      }\n    }\n  }, {\n    key: \"handleStickyEvents\",\n    value: function handleStickyEvents(event) {\n      switch (event.type) {\n        case \"selection\":\n          this.addStickySelectItem(event.detail.selection);\n          break;\n\n        case \"click\":\n          if (event.target === this.clearStickySelectionSpan) {\n            this.removeStickySelection();\n          }\n\n          break;\n\n        case \"keyup\":\n          if (this.stickyHiddenInput.value !== \"\" && event.target === this.element && ([\"Escape\", \"Backspace\", \"Delete\"].includes(event.key) || /^[a-z0-9]$/i.test(event.key))) {\n            this.removeStickySelection();\n          } else if (this.options.searchPrompt) {\n            if (this.stickyHiddenInput.value === \"\" && this.element.value.length < this.options.threshold) {\n              this.promptDiv.style.display = \"block\";\n            } else {\n              this.promptDiv.style.display = \"none\";\n            }\n          }\n\n          break;\n\n        default:\n      }\n    }\n  }, {\n    key: \"createHiddenInput\",\n    value: function createHiddenInput(value) {\n      var hiddenInput = document.createElement(\"input\");\n      hiddenInput.name = this.options.name;\n      hiddenInput.type = \"hidden\";\n\n      if (value) {\n        hiddenInput.value = value;\n      }\n\n      this.acWrapper.prepend(hiddenInput);\n      return hiddenInput;\n    }\n  }, {\n    key: \"removeStickySelection\",\n    value: function removeStickySelection() {\n      this.stickyHiddenInput.value = \"\";\n      this.element.placeholder = this.options.placeholder;\n      this.clearStickySelectionSpan.style.display = \"none\";\n      this.stickySelectedSpan.style.display = \"none\";\n    }\n  }, {\n    key: \"addStickySelectItem\",\n    value: function addStickySelectItem(selection) {\n      this.stickyHiddenInput.value = selection.value.value;\n      this.element.placeholder = \"\";\n      this.stickySelectedSpan.innerHTML = selection.value[selection.key];\n      this.stickySelectedSpan.style.display = \"block\";\n      this.clearStickySelectionSpan.style.display = \"block\";\n      this.setInput(\"\");\n    }\n  }, {\n    key: \"addMultiSelectItem\",\n    value: function addMultiSelectItem(selection) {\n      var _this2 = this;\n\n      this.setInput(\"\");\n      var chosen = document.createElement(\"span\");\n      chosen.classList.add(\"label\", \"primary\", \"autocomplete__selected-item\", \"multi\");\n      chosen.innerHTML = selection.value[selection.key];\n      var clearSelection = document.createElement(\"span\");\n      clearSelection.classList.add(\"clear-multi-selection\");\n      clearSelection.innerHTML = \"&times;\";\n      clearSelection.setAttribute(\"data-remove\", selection.value.value);\n      clearSelection.addEventListener(\"click\", function (evt) {\n        var hiddenInput = _this2.acWrapper.querySelector(\"input[type='hidden'][value='\".concat(selection.value.value, \"']\"));\n\n        if (hiddenInput) {\n          hiddenInput.remove();\n          evt.target.parentElement.remove();\n        }\n      });\n      chosen.appendChild(clearSelection);\n      var multiSelectWrapper = this.acWrapper.querySelector(\".multiselect\");\n      var inputContainer = multiSelectWrapper.querySelector(\"span.input-container\");\n      multiSelectWrapper.insertBefore(chosen, inputContainer);\n      this.createHiddenInput(selection.value.value);\n    }\n  }, {\n    key: \"createStickySelect\",\n    value: function createStickySelect() {\n      var _this3 = this;\n\n      this.stickySelectedSpan = document.createElement(\"span\");\n      this.stickySelectedSpan.classList.add(\"autocomplete__selected-item\", \"sticky\");\n      this.stickySelectedSpan.style.display = \"none\";\n      this.stickySelectedSpan.addEventListener(\"click\", function () {\n        return _this3.element.focus();\n      });\n      this.stickyHiddenInput = this.createHiddenInput();\n      this.clearStickySelectionSpan = document.createElement(\"span\");\n      this.clearStickySelectionSpan.className = \"clear-sticky-selection\";\n      this.clearStickySelectionSpan.innerHTML = \"&times;\";\n      this.clearStickySelectionSpan.style.display = \"none\";\n      this.clearStickySelectionSpan.addEventListener(\"click\", this);\n      this.element.addEventListener(\"selection\", this);\n      this.element.addEventListener(\"keyup\", this);\n      this.acWrapper.insertBefore(this.clearStickySelectionSpan, this.element);\n      this.acWrapper.insertBefore(this.stickySelectedSpan, this.element);\n\n      if (this.options.selected) {\n        this.addStickySelectItem(this.options.selected);\n      }\n    }\n  }, {\n    key: \"createMultiSelect\",\n    value: function createMultiSelect() {\n      var _this4 = this;\n\n      var multiSelectWrapper = document.createElement(\"div\");\n      multiSelectWrapper.classList.add(\"multiselect\");\n      var inputContainer = document.createElement(\"span\");\n      inputContainer.classList.add(\"input-container\");\n      multiSelectWrapper.appendChild(inputContainer);\n      this.acWrapper.prepend(multiSelectWrapper);\n      inputContainer.appendChild(this.element);\n      this.element.addEventListener(\"selection\", this);\n      multiSelectWrapper.addEventListener(\"click\", function () {\n        _this4.element.focus();\n      });\n\n      if (this.options.selected) {\n        this.options.selected.forEach(function (selection) {\n          _this4.addMultiSelectItem(selection);\n        });\n      }\n    }\n  }, {\n    key: \"createPromptDiv\",\n    value: function createPromptDiv() {\n      this.promptDiv = document.createElement(\"div\");\n      this.promptDiv.classList.add(\"search-prompt\");\n      this.promptDiv.style.display = \"none\";\n      this.promptDiv.innerHTML = this.options.searchPromptText;\n      this.acWrapper.appendChild(this.promptDiv);\n    }\n  }]);\n\n  return AutoComplete;\n}();\n\nexport { AutoComplete as default };","map":{"version":3,"mappings":"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","names":["AutoCompleteJS","AutoComplete","el","options","_classCallCheck","element","stickySelectedSpan","clearStickySelectionSpan","stickyHiddenInput","promptDiv","thresholdTemp","threshold","Object","assign","name","placeholder","mode","searchPrompt","searchPromptText","selected","maxResults","dataMatchKeys","dataSource","dataFilter","delay","modifyResult","autocomplete","selector","_this","placeHolder","debounce","data","keys","src","query","fetchResults","Promise","resolve","_context","filter","list","resultsList","resultItem","item","value","events","input","blur","style","display","acWrapper","closest","ac","stopPropagation","event","addEventListener","createPromptDiv","createStickySelect","createMultiSelect","setInput","detail","selection","key","handleStickyEvents","handleMultiEvents","type","addMultiSelectItem","addStickySelectItem","target","removeStickySelection","includes","test","length","hiddenInput","document","createElement","prepend","innerHTML","chosen","classList","add","clearSelection","setAttribute","evt","_this2","querySelector","remove","parentElement","appendChild","multiSelectWrapper","inputContainer","insertBefore","createHiddenInput","_this3","focus","className","_this4","forEach"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/autocomplete.js"],"sourcesContent":["import AutoCompleteJS from \"@tarekraafat/autocomplete.js\";\n\nexport default class AutoComplete {\n  constructor(el, options = {}) {\n    this.element = el;\n    this.stickySelectedSpan = null;\n    this.clearStickySelectionSpan = null;\n    this.stickyHiddenInput = null;\n    this.promptDiv = null;\n    const thresholdTemp = options.threshold || 2;\n    this.options = Object.assign({\n      // Defines name of the hidden input (e.g. assembly_member[user_id])\n      name: null,\n      // Placeholder of the visible input field\n      placeholder: \"\",\n      // Defines what happens after user has selected value from suggestions\n      // sticky - Allows selecting a single value and not editing the value after selected (e.g. as the admin autocomplete fields)\n      // single - Allows selecting a single value and editing the selected text after the selection (e.g. geocoding field)\n      // multi - Allows selecting multiple values\n      // null (default) - Disable selection event handling in this class\n      mode: null,\n      // Defines if we show input help (e.g. \"Type at least three characters to search\") or not.\n      searchPrompt: false,\n      // Defines search prompt message, only shown if showPrompt is enabled!\n      searchPromptText: `Type at least ${thresholdTemp} characters to search`,\n      // Defines items that are selected already when page is loaded before user selects them. (e.g. when form submit fails)\n      selected: null,\n      // Defines how many characters input has to have before we start searching\n      threshold: thresholdTemp,\n      // Defines how many results to show in the autocomplete selection list\n      // by maximum.\n      maxResults: 10,\n      // Defines the data keys against which to match the user input when\n      // searching through the results. For example, when the following\n      // data is returned by the API:\n      //   { id: 123, name: \"John\", nickname: \"john\", __typename: \"User\" }\n      //\n      // You can define the data keys array as [\"name\", \"nickname\"] in\n      // which case the results shown to user would be only those that\n      // have matching text in these defined fields.\n      dataMatchKeys: null,\n      // The data source is a method that gets the callback parameter as\n      // its first argument which should be called with the results array\n      // once they are returned by the API.\n      // For example:\n      //   (query, callback) => {\n      //     (async () => {\n      //       const results = await callAjax(`/api/url?query=${query}`);\n      //       callback(results);\n      //     })();\n      //   }\n      //\n      // Signature: (callback: Function)\n      dataSource: () => [],\n      // Filters the data list returned by the data source before it is shown\n      // to the user. Can be used e.g. to hide already selected values from\n      // the list.\n      dataFilter: null,\n      // Delay in milliseconds how long to wait after user action before\n      // doing a backend request.\n      delay: 200,\n      // Allows modifying the suggested items before they are displayed in the list\n      // Signature: (element: HTMLElement, value: Object)\n      modifyResult: null\n    }, options);\n\n    this.autocomplete = new AutoCompleteJS({\n      selector: () => this.element,\n      placeHolder: options.placeholder,\n      // Delay (milliseconds) before autocomplete engine starts. It's preventing many queries when user is typing fast.\n      debounce: 200,\n      threshold: this.options.threshold,\n      data: {\n        keys: this.options.dataMatchKeys,\n        src: async (query) => {\n          const fetchResults = () => {\n            return new Promise((resolve) => {\n              this.options.dataSource(query, resolve);\n            });\n          }\n\n          try {\n            return await fetchResults();\n          } catch (error) {\n            return error;\n          }\n        },\n        filter: (list) => {\n          if (this.options.dataFilter) {\n            return this.options.dataFilter(list);\n          }\n\n          return list;\n        }\n      },\n      resultsList: {\n        maxResults: this.options.maxResults\n      },\n      resultItem: {\n        element: (item, data) => {\n          if (!this.options.modifyResult) {\n            return;\n          }\n\n          this.options.modifyResult(item, data.value);\n        }\n      },\n      events: {\n        input: {\n          blur: () => {\n            this.promptDiv.style.display = \"none\";\n          }\n        }\n      }\n    });\n\n    this.acWrapper = this.element.closest(\".autoComplete_wrapper\");\n    this.element.ac = this.autocomplete;\n\n    // Stop input field from bubbling open and close events to parent elements,\n    // because foundation closes modal from these events.\n    const stopPropagation = (event) => {\n      event.stopPropagation();\n    }\n    this.element.addEventListener(\"close\", stopPropagation);\n    this.element.addEventListener(\"open\", stopPropagation);\n\n    this.createPromptDiv();\n\n    switch (this.options.mode) {\n    case \"sticky\":\n      this.createStickySelect(this.options.name);\n      break;\n    case \"multi\":\n      this.createMultiSelect(this.options.name);\n      break;\n    default:\n    }\n  }\n\n  setInput(value) {\n    this.autocomplete.input.value = value;\n  }\n\n  handleEvent(event) {\n    switch (this.options.mode) {\n    case \"single\":\n      this.setInput(event.detail.selection.value[event.detail.selection.key]);\n      break;\n    case \"sticky\":\n      this.handleStickyEvents(event);\n      break;\n    case \"multi\":\n      this.handleMultiEvents(event);\n      break;\n    default:\n    }\n  }\n\n  handleMultiEvents(event) {\n    switch (event.type) {\n    case \"selection\":\n      this.addMultiSelectItem(event.detail.selection);\n      break;\n    default:\n    }\n  }\n\n  handleStickyEvents(event) {\n    switch (event.type) {\n    case \"selection\":\n      this.addStickySelectItem(event.detail.selection);\n      break;\n    case \"click\":\n      if (event.target === this.clearStickySelectionSpan) {\n        this.removeStickySelection();\n      }\n      break;\n    case \"keyup\":\n      if (this.stickyHiddenInput.value !== \"\" && event.target === this.element && ([\"Escape\", \"Backspace\", \"Delete\"].includes(event.key) || (/^[a-z0-9]$/i).test(event.key))) {\n        this.removeStickySelection();\n      } else if (this.options.searchPrompt) {\n        if (this.stickyHiddenInput.value === \"\" && this.element.value.length < this.options.threshold) {\n          this.promptDiv.style.display = \"block\";\n        } else {\n          this.promptDiv.style.display = \"none\";\n        }\n      }\n      break;\n    default:\n    }\n  }\n\n  createHiddenInput(value) {\n    const hiddenInput = document.createElement(\"input\");\n    hiddenInput.name = this.options.name;\n    hiddenInput.type = \"hidden\";\n    if (value) {\n      hiddenInput.value = value;\n    }\n    this.acWrapper.prepend(hiddenInput);\n    return hiddenInput;\n  }\n\n  removeStickySelection() {\n    this.stickyHiddenInput.value = \"\";\n    this.element.placeholder = this.options.placeholder;\n    this.clearStickySelectionSpan.style.display = \"none\";\n    this.stickySelectedSpan.style.display = \"none\";\n  }\n\n  addStickySelectItem(selection) {\n    this.stickyHiddenInput.value = selection.value.value;\n    this.element.placeholder = \"\";\n    this.stickySelectedSpan.innerHTML = selection.value[selection.key];\n    this.stickySelectedSpan.style.display = \"block\";\n    this.clearStickySelectionSpan.style.display = \"block\";\n    this.setInput(\"\");\n  }\n\n  addMultiSelectItem(selection) {\n    this.setInput(\"\");\n    const chosen = document.createElement(\"span\");\n    chosen.classList.add(\"label\", \"primary\", \"autocomplete__selected-item\", \"multi\");\n    chosen.innerHTML = selection.value[selection.key];\n    const clearSelection = document.createElement(\"span\");\n    clearSelection.classList.add(\"clear-multi-selection\");\n    clearSelection.innerHTML = \"&times;\";\n    clearSelection.setAttribute(\"data-remove\", selection.value.value);\n    clearSelection.addEventListener(\"click\", (evt) => {\n      const hiddenInput = this.acWrapper.querySelector(`input[type='hidden'][value='${selection.value.value}']`);\n      if (hiddenInput) {\n        hiddenInput.remove();\n        evt.target.parentElement.remove();\n      }\n    });\n    chosen.appendChild(clearSelection);\n\n    const multiSelectWrapper = this.acWrapper.querySelector(\".multiselect\");\n    const inputContainer = multiSelectWrapper.querySelector(\"span.input-container\");\n    multiSelectWrapper.insertBefore(chosen, inputContainer);\n    this.createHiddenInput(selection.value.value);\n  }\n\n  createStickySelect() {\n    this.stickySelectedSpan = document.createElement(\"span\");\n    this.stickySelectedSpan.classList.add(\"autocomplete__selected-item\", \"sticky\");\n    this.stickySelectedSpan.style.display = \"none\";\n    this.stickySelectedSpan.addEventListener(\"click\", () => this.element.focus());\n    this.stickyHiddenInput = this.createHiddenInput();\n\n    this.clearStickySelectionSpan = document.createElement(\"span\");\n    this.clearStickySelectionSpan.className = \"clear-sticky-selection\";\n    this.clearStickySelectionSpan.innerHTML = \"&times;\";\n    this.clearStickySelectionSpan.style.display = \"none\";\n    this.clearStickySelectionSpan.addEventListener(\"click\", this);\n\n    this.element.addEventListener(\"selection\", this);\n    this.element.addEventListener(\"keyup\", this);\n\n    this.acWrapper.insertBefore(this.clearStickySelectionSpan, this.element);\n    this.acWrapper.insertBefore(this.stickySelectedSpan, this.element);\n    if (this.options.selected) {\n      this.addStickySelectItem(this.options.selected);\n    }\n  }\n\n  createMultiSelect() {\n    const multiSelectWrapper = document.createElement(\"div\");\n    multiSelectWrapper.classList.add(\"multiselect\");\n\n    const inputContainer = document.createElement(\"span\");\n    inputContainer.classList.add(\"input-container\");\n\n    multiSelectWrapper.appendChild(inputContainer);\n    this.acWrapper.prepend(multiSelectWrapper);\n    inputContainer.appendChild(this.element);\n\n    this.element.addEventListener(\"selection\", this);\n    multiSelectWrapper.addEventListener(\"click\", () => {\n      this.element.focus();\n    })\n\n    if (this.options.selected) {\n      this.options.selected.forEach((selection) => {\n        this.addMultiSelectItem(selection);\n      })\n    }\n  }\n\n  createPromptDiv() {\n    this.promptDiv = document.createElement(\"div\");\n    this.promptDiv.classList.add(\"search-prompt\");\n    this.promptDiv.style.display = \"none\";\n    this.promptDiv.innerHTML = this.options.searchPromptText;\n    this.acWrapper.appendChild(this.promptDiv);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}