{"ast":null,"code":"/* eslint-disable require-jsdoc */\nexport default function updateExternalDomainLinks($target) {\n  var whitelist = window.Decidim.config.get(\"external_domain_whitelist\");\n\n  if (window.location.pathname === \"/link\") {\n    return;\n  }\n\n  $(\"a\", $target).filter(function (_i, link) {\n    var $link = $(link);\n\n    if (!$link[0].hasAttribute(\"href\") || $link.parents(\".ql-editor\").length > 0) {\n      return false;\n    }\n\n    var parts = $link.attr(\"href\").match(/^(([a-z]+):)?\\/\\/([^/:]+)(:[0-9]*)?(\\/.*)?$/) || null;\n\n    if (!parts) {\n      return false;\n    }\n\n    var domain = parts[3].replace(/^www\\./, \"\");\n\n    if (whitelist.includes(domain)) {\n      return false;\n    }\n\n    return true;\n  }).each(function (_n, link) {\n    var $link = $(link);\n    var externalHref = \"/link?external_url=\".concat(encodeURIComponent($link.attr(\"href\")));\n    $link.attr(\"href\", externalHref);\n    $link.attr(\"data-remote\", true);\n  });\n}","map":{"version":3,"mappings":"AAAA;AAEA,eAAe,SAASA,yBAAT,CAAmCC,OAAnC,EAA4C;EACzD,IAAMC,SAAS,GAAGC,MAAM,CAACC,OAAPD,CAAeE,MAAfF,CAAsBG,GAAtBH,CAA0B,2BAA1BA,CAAlB;;EAEA,IAAIA,MAAM,CAACI,QAAPJ,CAAgBK,QAAhBL,KAA6B,OAAjC,EAA0C;IACxC;EACD;;EAEDM,CAAC,CAAC,GAAD,EAAMR,OAAN,CAADQ,CAAgBC,MAAhBD,CAAuB,UAACE,EAAD,EAAKC,IAAL,EAAc;IACnC,IAAMC,KAAK,GAAGJ,CAAC,CAACG,IAAD,CAAf;;IACA,IAAI,CAACC,KAAK,CAAC,CAAD,CAALA,CAASC,YAATD,CAAsB,MAAtBA,CAAD,IAAkCA,KAAK,CAACE,OAANF,CAAc,YAAdA,EAA4BG,MAA5BH,GAAqC,CAA3E,EAA8E;MAC5E,OAAO,KAAP;IACD;;IAED,IAAMI,KAAK,GAAGJ,KAAK,CAACK,IAANL,CAAW,MAAXA,EAAmBM,KAAnBN,CAAyB,6CAAzBA,KAA2E,IAAzF;;IACA,IAAI,CAACI,KAAL,EAAY;MACV,OAAO,KAAP;IACD;;IAED,IAAMG,MAAM,GAAGH,KAAK,CAAC,CAAD,CAALA,CAASI,OAATJ,CAAiB,QAAjBA,EAA2B,EAA3BA,CAAf;;IACA,IAAIf,SAAS,CAACoB,QAAVpB,CAAmBkB,MAAnBlB,CAAJ,EAAgC;MAC9B,OAAO,KAAP;IACD;;IAED,OAAO,IAAP;EAhBF,GAiBGqB,IAjBHd,CAiBQ,UAACe,EAAD,EAAKZ,IAAL,EAAc;IACpB,IAAMC,KAAK,GAAGJ,CAAC,CAACG,IAAD,CAAf;IACA,IAAMa,YAAY,gCAAyBC,kBAAkB,CAACb,KAAK,CAACK,IAANL,CAAW,MAAXA,CAAD,CAA3C,CAAlB;IACAA,KAAK,CAACK,IAANL,CAAW,MAAXA,EAAmBY,YAAnBZ;IACAA,KAAK,CAACK,IAANL,CAAW,aAAXA,EAA0B,IAA1BA;EArBF;AAuBD","names":["updateExternalDomainLinks","$target","whitelist","window","Decidim","config","get","location","pathname","$","filter","_i","link","$link","hasAttribute","parents","length","parts","attr","match","domain","replace","includes","each","_n","externalHref","encodeURIComponent"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/external_domain_warning.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nexport default function updateExternalDomainLinks($target) {\n  const whitelist = window.Decidim.config.get(\"external_domain_whitelist\")\n\n  if (window.location.pathname === \"/link\") {\n    return;\n  }\n\n  $(\"a\", $target).filter((_i, link) => {\n    const $link = $(link);\n    if (!$link[0].hasAttribute(\"href\") || $link.parents(\".ql-editor\").length > 0) {\n      return false;\n    }\n\n    const parts = $link.attr(\"href\").match(/^(([a-z]+):)?\\/\\/([^/:]+)(:[0-9]*)?(\\/.*)?$/) || null;\n    if (!parts) {\n      return false;\n    }\n\n    const domain = parts[3].replace(/^www\\./, \"\")\n    if (whitelist.includes(domain)) {\n      return false;\n    }\n\n    return true;\n  }).each((_n, link) => {\n    const $link = $(link);\n    const externalHref = `/link?external_url=${encodeURIComponent($link.attr(\"href\"))}`;\n    $link.attr(\"href\", externalHref)\n    $link.attr(\"data-remote\", true)\n  });\n}\n"]},"metadata":{},"sourceType":"module"}