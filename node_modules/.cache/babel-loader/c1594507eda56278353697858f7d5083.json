{"ast":null,"code":"/* eslint-disable require-jsdoc */\nimport createOptionAttachedInputs from \"src/decidim/forms/option_attached_inputs.component\";\nimport createAutosortableCheckboxes from \"src/decidim/forms/autosortable_checkboxes.component\";\nimport createDisplayConditions from \"src/decidim/forms/display_conditions.component\";\nimport createMaxChoicesAlertComponent from \"src/decidim/forms/max_choices_alert.component\";\n$(function () {\n  $(\".radio-button-collection, .check-box-collection\").each(function (idx, el) {\n    createOptionAttachedInputs({\n      wrapperField: $(el),\n      controllerFieldSelector: \"input[type=radio], input[type=checkbox]\",\n      dependentInputSelector: \"input[type=text], input[type=hidden]\"\n    });\n  });\n  $.unique($(\".check-box-collection\").parents(\".answer\")).each(function (idx, el) {\n    var maxChoices = $(el).data(\"max-choices\");\n\n    if (maxChoices) {\n      createMaxChoicesAlertComponent({\n        wrapperField: $(el),\n        controllerFieldSelector: \"input[type=checkbox]\",\n        controllerCollectionSelector: \".check-box-collection\",\n        alertElement: $(el).find(\".max-choices-alert\"),\n        maxChoices: maxChoices\n      });\n    }\n  });\n  $(\".sortable-check-box-collection\").each(function (idx, el) {\n    createAutosortableCheckboxes({\n      wrapperField: $(el)\n    });\n  });\n  $(\".answer-questionnaire .question[data-conditioned='true']\").each(function (idx, el) {\n    createDisplayConditions({\n      wrapperField: $(el)\n    });\n  });\n  var $form = $(\"form.answer-questionnaire\");\n\n  if ($form.length > 0) {\n    $form.find(\"input, textarea, select\").on(\"change\", function () {\n      $form.data(\"changed\", true);\n    });\n    var safePath = $form.data(\"safe-path\").split(\"?\")[0];\n    $(document).on(\"click\", \"a\", function (event) {\n      window.exitUrl = event.currentTarget.href;\n    });\n    $(document).on(\"submit\", \"form\", function (event) {\n      window.exitUrl = event.currentTarget.action;\n    });\n    window.addEventListener(\"beforeunload\", function (event) {\n      var exitUrl = window.exitUrl;\n      var hasChanged = $form.data(\"changed\");\n      window.exitUrl = null;\n\n      if (!hasChanged || exitUrl && exitUrl.includes(safePath)) {\n        return;\n      }\n\n      event.returnValue = true;\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["createOptionAttachedInputs","createAutosortableCheckboxes","createDisplayConditions","createMaxChoicesAlertComponent","$","each","idx","el","wrapperField","controllerFieldSelector","dependentInputSelector","unique","parents","maxChoices","data","controllerCollectionSelector","alertElement","find","$form","length","on","safePath","split","document","event","window","exitUrl","currentTarget","href","action","addEventListener","hasChanged","includes","returnValue"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-forms/app/packs/src/decidim/forms/forms.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nimport createOptionAttachedInputs from \"src/decidim/forms/option_attached_inputs.component\"\nimport createAutosortableCheckboxes from \"src/decidim/forms/autosortable_checkboxes.component\"\nimport createDisplayConditions from \"src/decidim/forms/display_conditions.component\"\nimport createMaxChoicesAlertComponent from \"src/decidim/forms/max_choices_alert.component\"\n\n$(() => {\n  $(\".radio-button-collection, .check-box-collection\").each((idx, el) => {\n    createOptionAttachedInputs({\n      wrapperField: $(el),\n      controllerFieldSelector: \"input[type=radio], input[type=checkbox]\",\n      dependentInputSelector: \"input[type=text], input[type=hidden]\"\n    });\n  });\n\n  $.unique($(\".check-box-collection\").parents(\".answer\")).each((idx, el) => {\n    const maxChoices = $(el).data(\"max-choices\");\n    if (maxChoices) {\n      createMaxChoicesAlertComponent({\n        wrapperField: $(el),\n        controllerFieldSelector: \"input[type=checkbox]\",\n        controllerCollectionSelector: \".check-box-collection\",\n        alertElement: $(el).find(\".max-choices-alert\"),\n        maxChoices: maxChoices\n      });\n    }\n  });\n\n  $(\".sortable-check-box-collection\").each((idx, el) => {\n    createAutosortableCheckboxes({\n      wrapperField: $(el)\n    })\n  });\n\n  $(\".answer-questionnaire .question[data-conditioned='true']\").each((idx, el) => {\n    createDisplayConditions({\n      wrapperField: $(el)\n    });\n  });\n\n  const $form = $(\"form.answer-questionnaire\");\n  if ($form.length > 0) {\n    $form.find(\"input, textarea, select\").on(\"change\", () => {\n      $form.data(\"changed\", true);\n    });\n\n    const safePath = $form.data(\"safe-path\").split(\"?\")[0];\n    $(document).on(\"click\", \"a\", (event) => {\n      window.exitUrl = event.currentTarget.href;\n    });\n    $(document).on(\"submit\", \"form\", (event) => {\n      window.exitUrl = event.currentTarget.action;\n    });\n\n    window.addEventListener(\"beforeunload\", (event) => {\n      const exitUrl = window.exitUrl;\n      const hasChanged = $form.data(\"changed\");\n      window.exitUrl = null;\n\n      if (!hasChanged || (exitUrl && exitUrl.includes(safePath))) {\n        return;\n      }\n\n      event.returnValue = true;\n    });\n  }\n})\n"]},"metadata":{},"sourceType":"module"}