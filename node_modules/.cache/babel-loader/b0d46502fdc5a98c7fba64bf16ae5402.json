{"ast":null,"code":"/* eslint-disable require-jsdoc */\n// This will apply some fixes for the Foundation dropdown menu element\n// according to W3C instructions at:\n// https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html\n//\n// NOTE:\n// This needs to run AFTER Foundation has been initialized because those\n// initializers will affect the drop down menu elements.\nexport default function fixDropdownMenus() {\n  $(\"[data-dropdown-menu]\").each(function (_i, element) {\n    // This will break navigation on macOS VoiceOver app since it will let the\n    // user to focus on the li element instead of the <a> element where we\n    // actually need the focus to be in.\n    $(\"li.is-dropdown-submenu-parent\", element).removeAttr(\"aria-haspopup\").removeAttr(\"aria-label\");\n    $(\"li.is-dropdown-submenu-parent > a:first\", element).removeAttr(\"aria-label\"); // Foundation marks the wrong role for the submenu elements\n\n    $(\"ul.is-dropdown-submenu\", element).attr(\"role\", \"menu\");\n  });\n} // Ensure the first element is always focused when a dropdown is opened as\n// this would not always happen when using a screen reader. If this is not\n// done, the screen reader will stay quiet when the menu opens which can lead\n// to the blind user not understanding the menu has opened.\n\n$(function () {\n  $(\"[data-dropdown-menu]\").on(\"show.zf.dropdownMenu\", function (_i, element) {\n    $(\"li:first > a\", element).focus();\n  });\n});","map":{"version":3,"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,gBAAT,GAA4B;EACzCC,CAAC,CAAC,sBAAD,CAADA,CAA0BC,IAA1BD,CAA+B,UAACE,EAAD,EAAKC,OAAL,EAAiB;IAC9C;IACA;IACA;IACAH,CAAC,CAAC,+BAAD,EAAkCG,OAAlC,CAADH,CAA4CI,UAA5CJ,CAAuD,eAAvDA,EAAwEI,UAAxEJ,CAAmF,YAAnFA;IACAA,CAAC,CAAC,yCAAD,EAA4CG,OAA5C,CAADH,CAAsDI,UAAtDJ,CAAiE,YAAjEA,EAL8C,CAM9C;;IACAA,CAAC,CAAC,wBAAD,EAA2BG,OAA3B,CAADH,CAAqCK,IAArCL,CAA0C,MAA1CA,EAAkD,MAAlDA;EAPF;EAWF;AACA;AACA;AACA;;AACAA,CAAC,CAAC,YAAM;EACNA,CAAC,CAAC,sBAAD,CAADA,CAA0BM,EAA1BN,CAA6B,sBAA7BA,EAAqD,UAACE,EAAD,EAAKC,OAAL,EAAiB;IACpEH,CAAC,CAAC,cAAD,EAAiBG,OAAjB,CAADH,CAA2BO,KAA3BP;EADF;AADD,EAADA","names":["fixDropdownMenus","$","each","_i","element","removeAttr","attr","on","focus"],"sources":["/home/agustibr/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/bundler/gems/decidim-a25b5c74f78d/decidim-core/app/packs/src/decidim/dropdowns_menus.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\n// This will apply some fixes for the Foundation dropdown menu element\n// according to W3C instructions at:\n// https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html\n//\n// NOTE:\n// This needs to run AFTER Foundation has been initialized because those\n// initializers will affect the drop down menu elements.\nexport default function fixDropdownMenus() {\n  $(\"[data-dropdown-menu]\").each((_i, element) => {\n    // This will break navigation on macOS VoiceOver app since it will let the\n    // user to focus on the li element instead of the <a> element where we\n    // actually need the focus to be in.\n    $(\"li.is-dropdown-submenu-parent\", element).removeAttr(\"aria-haspopup\").removeAttr(\"aria-label\");\n    $(\"li.is-dropdown-submenu-parent > a:first\", element).removeAttr(\"aria-label\");\n    // Foundation marks the wrong role for the submenu elements\n    $(\"ul.is-dropdown-submenu\", element).attr(\"role\", \"menu\");\n  })\n}\n\n// Ensure the first element is always focused when a dropdown is opened as\n// this would not always happen when using a screen reader. If this is not\n// done, the screen reader will stay quiet when the menu opens which can lead\n// to the blind user not understanding the menu has opened.\n$(() => {\n  $(\"[data-dropdown-menu]\").on(\"show.zf.dropdownMenu\", (_i, element) => {\n    $(\"li:first > a\", element).focus();\n  });\n})\n"]},"metadata":{},"sourceType":"module"}